{"version":3,"sources":["index.js","../src/highlightcommand.ts","../src/highlightediting.ts","../src/highlightui.ts","../src/highlight.ts"],"names":["HighlightCommand","Command","model","editor","doc","document","value","selection","getAttribute","isEnabled","schema","checkAttributeInSelection","execute","options","highlighter","change","writer","isCollapsed","position","getFirstPosition","hasAttribute","isSameHighlight","item","highlightStart","getLastMatchingPosition","direction","highlightEnd","highlightRange","createRange","isEqual","removeAttribute","removeSelectionAttribute","setAttribute","setSelectionAttribute","ranges","getValidRanges","getRanges","range","HighlightEditing","Plugin","pluginName","isOfficialPlugin","constructor","config","define","class","title","color","type","extend","allowAttributes","get","conversion","attributeToElement","_buildDefinition","commands","add","definition","key","values","view","option","push","name","classes","HighlightUI","localizedOptionTitles","t","_addHighlighterButton","_addRemoveHighlightButton","_addDropdown","_addMenuBarButton","command","_addButton","IconEraser","button","bind","to","getIconForType","decorateHighlightButton","iconView","fillColor","isToggleable","label","icon","decorateButton","ui","componentFactory","locale","buttonView","ButtonView","localized","set","tooltip","on","editing","focus","startingHighlighter","optionsMap","reduce","retVal","dropdownView","createDropdown","SplitButtonView","splitButtonView","lastExecuted","commandValue","getActiveOption","delegate","buttonsCreator","buttons","map","create","listenTo","ToolbarSeparatorView","addToolbarToDropdown","enableActiveItemFocusOnDropdownOpen","ariaLabel","bindToolbarIconStyleToActiveColor","current","whichHighlighter","menuView","MenuBarMenuView","listView","MenuBarMenuListView","listItemView","MenuBarMenuListItemView","MenuBarMenuListItemButtonView","role","children","items","ListSeparatorView","panelView","actionView","IconMarker","IconPen","Highlight","requires"],"mappings":"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","file":"index.js.map","sourcesContent":["import { Command, Plugin } from '@ckeditor/ckeditor5-core/dist/index.js';\nimport { IconEraser, IconMarker, IconPen } from '@ckeditor/ckeditor5-icons/dist/index.js';\nimport { ButtonView, createDropdown, SplitButtonView, addToolbarToDropdown, MenuBarMenuView, MenuBarMenuListView, MenuBarMenuListItemView, MenuBarMenuListItemButtonView, ListSeparatorView, ToolbarSeparatorView } from '@ckeditor/ckeditor5-ui/dist/index.js';\n\n/**\n * The highlight command. It is used by the {@link module:highlight/highlightediting~HighlightEditing highlight feature}\n * to apply the text highlighting.\n *\n * ```ts\n * editor.execute( 'highlight', { value: 'greenMarker' } );\n * ```\n *\n * **Note**: Executing the command without a value removes the attribute from the model. If the selection is collapsed\n * inside a text with the highlight attribute, the command will remove the attribute from the entire range\n * of that text.\n */ class HighlightCommand extends Command {\n    /**\n\t * @inheritDoc\n\t */ refresh() {\n        const model = this.editor.model;\n        const doc = model.document;\n        this.value = doc.selection.getAttribute('highlight');\n        this.isEnabled = model.schema.checkAttributeInSelection(doc.selection, 'highlight');\n    }\n    /**\n\t * Executes the command.\n\t *\n\t * @param options Options for the executed command.\n\t * @param options.value The value to apply.\n\t *\n\t * @fires execute\n\t */ execute(options = {}) {\n        const model = this.editor.model;\n        const document = model.document;\n        const selection = document.selection;\n        const highlighter = options.value;\n        model.change((writer)=>{\n            if (selection.isCollapsed) {\n                const position = selection.getFirstPosition();\n                // When selection is inside text with `highlight` attribute.\n                if (selection.hasAttribute('highlight')) {\n                    // Find the full highlighted range.\n                    const isSameHighlight = (value)=>{\n                        return value.item.hasAttribute('highlight') && value.item.getAttribute('highlight') === this.value;\n                    };\n                    const highlightStart = position.getLastMatchingPosition(isSameHighlight, {\n                        direction: 'backward'\n                    });\n                    const highlightEnd = position.getLastMatchingPosition(isSameHighlight);\n                    const highlightRange = writer.createRange(highlightStart, highlightEnd);\n                    // Then depending on current value...\n                    if (!highlighter || this.value === highlighter) {\n                        // ...remove attribute when passing highlighter different then current or executing \"eraser\".\n                        // If we're at the end of the highlighted range, we don't want to remove highlight of the range.\n                        if (!position.isEqual(highlightEnd)) {\n                            writer.removeAttribute('highlight', highlightRange);\n                        }\n                        writer.removeSelectionAttribute('highlight');\n                    } else {\n                        // ...update `highlight` value.\n                        // If we're at the end of the highlighted range, we don't want to change the highlight of the range.\n                        if (!position.isEqual(highlightEnd)) {\n                            writer.setAttribute('highlight', highlighter, highlightRange);\n                        }\n                        writer.setSelectionAttribute('highlight', highlighter);\n                    }\n                } else if (highlighter) {\n                    writer.setSelectionAttribute('highlight', highlighter);\n                }\n            } else {\n                const ranges = model.schema.getValidRanges(selection.getRanges(), 'highlight');\n                for (const range of ranges){\n                    if (highlighter) {\n                        writer.setAttribute('highlight', highlighter, range);\n                    } else {\n                        writer.removeAttribute('highlight', range);\n                    }\n                }\n            }\n        });\n    }\n}\n\n/**\n * The highlight editing feature. It introduces the {@link module:highlight/highlightcommand~HighlightCommand command} and the `highlight`\n * attribute in the {@link module:engine/model/model~Model model} which renders in the {@link module:engine/view/view view}\n * as a `<mark>` element with a `class` attribute (`<mark class=\"marker-green\">...</mark>`) depending\n * on the {@link module:highlight/highlightconfig~HighlightConfig configuration}.\n */ class HighlightEditing extends Plugin {\n    /**\n\t * @inheritDoc\n\t */ static get pluginName() {\n        return 'HighlightEditing';\n    }\n    /**\n\t * @inheritDoc\n\t */ static get isOfficialPlugin() {\n        return true;\n    }\n    /**\n\t * @inheritDoc\n\t */ constructor(editor){\n        super(editor);\n        editor.config.define('highlight', {\n            options: [\n                {\n                    model: 'yellowMarker',\n                    class: 'marker-yellow',\n                    title: 'Yellow marker',\n                    color: 'var(--ck-highlight-marker-yellow)',\n                    type: 'marker'\n                },\n                {\n                    model: 'greenMarker',\n                    class: 'marker-green',\n                    title: 'Green marker',\n                    color: 'var(--ck-highlight-marker-green)',\n                    type: 'marker'\n                },\n                {\n                    model: 'pinkMarker',\n                    class: 'marker-pink',\n                    title: 'Pink marker',\n                    color: 'var(--ck-highlight-marker-pink)',\n                    type: 'marker'\n                },\n                {\n                    model: 'blueMarker',\n                    class: 'marker-blue',\n                    title: 'Blue marker',\n                    color: 'var(--ck-highlight-marker-blue)',\n                    type: 'marker'\n                },\n                {\n                    model: 'redPen',\n                    class: 'pen-red',\n                    title: 'Red pen',\n                    color: 'var(--ck-highlight-pen-red)',\n                    type: 'pen'\n                },\n                {\n                    model: 'greenPen',\n                    class: 'pen-green',\n                    title: 'Green pen',\n                    color: 'var(--ck-highlight-pen-green)',\n                    type: 'pen'\n                }\n            ]\n        });\n    }\n    /**\n\t * @inheritDoc\n\t */ init() {\n        const editor = this.editor;\n        // Allow highlight attribute on text nodes.\n        editor.model.schema.extend('$text', {\n            allowAttributes: 'highlight'\n        });\n        const options = editor.config.get('highlight.options');\n        // Set-up the two-way conversion.\n        editor.conversion.attributeToElement(_buildDefinition(options));\n        editor.commands.add('highlight', new HighlightCommand(editor));\n    }\n}\n/**\n * Converts the options array to a converter definition.\n *\n * @param options An array with configured options.\n */ function _buildDefinition(options) {\n    const definition = {\n        model: {\n            key: 'highlight',\n            values: []\n        },\n        view: {}\n    };\n    for (const option of options){\n        definition.model.values.push(option.model);\n        definition.view[option.model] = {\n            name: 'mark',\n            classes: option.class\n        };\n    }\n    return definition;\n}\n\n/**\n * The default highlight UI plugin. It introduces:\n *\n * * The `'highlight'` dropdown,\n * * The `'removeHighlight'` and `'highlight:*'` buttons.\n *\n * The default configuration includes the following buttons:\n *\n * * `'highlight:yellowMarker'`\n * * `'highlight:greenMarker'`\n * * `'highlight:pinkMarker'`\n * * `'highlight:blueMarker'`\n * * `'highlight:redPen'`\n * * `'highlight:greenPen'`\n *\n * See the {@link module:highlight/highlightconfig~HighlightConfig#options configuration} to learn more\n * about the defaults.\n */ class HighlightUI extends Plugin {\n    /**\n\t * Returns the localized option titles provided by the plugin.\n\t *\n\t * The following localized titles corresponding with default\n\t * {@link module:highlight/highlightconfig~HighlightConfig#options} are available:\n\t *\n\t * * `'Yellow marker'`,\n\t * * `'Green marker'`,\n\t * * `'Pink marker'`,\n\t * * `'Blue marker'`,\n\t * * `'Red pen'`,\n\t * * `'Green pen'`.\n\t */ get localizedOptionTitles() {\n        const t = this.editor.t;\n        return {\n            'Yellow marker': t('Yellow marker'),\n            'Green marker': t('Green marker'),\n            'Pink marker': t('Pink marker'),\n            'Blue marker': t('Blue marker'),\n            'Red pen': t('Red pen'),\n            'Green pen': t('Green pen')\n        };\n    }\n    /**\n\t * @inheritDoc\n\t */ static get pluginName() {\n        return 'HighlightUI';\n    }\n    /**\n\t * @inheritDoc\n\t */ static get isOfficialPlugin() {\n        return true;\n    }\n    /**\n\t * @inheritDoc\n\t */ init() {\n        const options = this.editor.config.get('highlight.options');\n        for (const option of options){\n            this._addHighlighterButton(option);\n        }\n        this._addRemoveHighlightButton();\n        this._addDropdown(options);\n        this._addMenuBarButton(options);\n    }\n    /**\n\t * Creates the \"Remove highlight\" button.\n\t */ _addRemoveHighlightButton() {\n        const t = this.editor.t;\n        const command = this.editor.commands.get('highlight');\n        this._addButton('removeHighlight', t('Remove highlight'), IconEraser, null, (button)=>{\n            button.bind('isEnabled').to(command, 'isEnabled');\n        });\n    }\n    /**\n\t * Creates a toolbar button from the provided highlight option.\n\t */ _addHighlighterButton(option) {\n        const command = this.editor.commands.get('highlight');\n        // TODO: change naming\n        this._addButton('highlight:' + option.model, option.title, getIconForType(option.type), option.model, decorateHighlightButton);\n        function decorateHighlightButton(button) {\n            button.bind('isEnabled').to(command, 'isEnabled');\n            button.bind('isOn').to(command, 'value', (value)=>value === option.model);\n            button.iconView.fillColor = option.color;\n            button.isToggleable = true;\n        }\n    }\n    /**\n\t * Internal method for creating highlight buttons.\n\t *\n\t * @param name The name of the button.\n\t * @param label The label for the button.\n\t * @param icon The button icon.\n\t * @param value The `value` property passed to the executed command.\n\t * @param decorateButton A callback getting ButtonView instance so that it can be further customized.\n\t */ _addButton(name, label, icon, value, decorateButton) {\n        const editor = this.editor;\n        editor.ui.componentFactory.add(name, (locale)=>{\n            const buttonView = new ButtonView(locale);\n            const localized = this.localizedOptionTitles[label] ? this.localizedOptionTitles[label] : label;\n            buttonView.set({\n                label: localized,\n                icon,\n                tooltip: true\n            });\n            buttonView.on('execute', ()=>{\n                editor.execute('highlight', {\n                    value\n                });\n                editor.editing.view.focus();\n            });\n            // Add additional behavior for buttonView.\n            decorateButton(buttonView);\n            return buttonView;\n        });\n    }\n    /**\n\t * Creates the split button dropdown UI from the provided highlight options.\n\t */ _addDropdown(options) {\n        const editor = this.editor;\n        const t = editor.t;\n        const componentFactory = editor.ui.componentFactory;\n        const startingHighlighter = options[0];\n        const optionsMap = options.reduce((retVal, option)=>{\n            retVal[option.model] = option;\n            return retVal;\n        }, {});\n        componentFactory.add('highlight', (locale)=>{\n            const command = editor.commands.get('highlight');\n            const dropdownView = createDropdown(locale, SplitButtonView);\n            const splitButtonView = dropdownView.buttonView;\n            splitButtonView.set({\n                label: t('Highlight'),\n                tooltip: true,\n                // Holds last executed highlighter.\n                lastExecuted: startingHighlighter.model,\n                // Holds current highlighter to execute (might be different then last used).\n                commandValue: startingHighlighter.model,\n                isToggleable: true\n            });\n            // Dropdown button changes to selection (command.value):\n            // - If selection is in highlight it get active highlight appearance (icon, color) and is activated.\n            // - Otherwise it gets appearance (icon, color) of last executed highlight.\n            splitButtonView.bind('icon').to(command, 'value', (value)=>getIconForType(getActiveOption(value, 'type')));\n            splitButtonView.bind('color').to(command, 'value', (value)=>getActiveOption(value, 'color'));\n            splitButtonView.bind('commandValue').to(command, 'value', (value)=>getActiveOption(value, 'model'));\n            splitButtonView.bind('isOn').to(command, 'value', (value)=>!!value);\n            splitButtonView.delegate('execute').to(dropdownView);\n            // Create buttons array.\n            const buttonsCreator = ()=>{\n                const buttons = options.map((option)=>{\n                    // Get existing highlighter button.\n                    const buttonView = componentFactory.create('highlight:' + option.model);\n                    // Update lastExecutedHighlight on execute.\n                    this.listenTo(buttonView, 'execute', ()=>{\n                        dropdownView.buttonView.set({\n                            lastExecuted: option.model\n                        });\n                    });\n                    return buttonView;\n                });\n                // Add separator and eraser buttons to dropdown.\n                buttons.push(new ToolbarSeparatorView());\n                buttons.push(componentFactory.create('removeHighlight'));\n                return buttons;\n            };\n            // Make toolbar button enabled when any button in dropdown is enabled before adding separator and eraser.\n            dropdownView.bind('isEnabled').to(command, 'isEnabled');\n            addToolbarToDropdown(dropdownView, buttonsCreator, {\n                enableActiveItemFocusOnDropdownOpen: true,\n                ariaLabel: t('Text highlight toolbar')\n            });\n            bindToolbarIconStyleToActiveColor(dropdownView);\n            // Execute current action from dropdown's split button action button.\n            splitButtonView.on('execute', ()=>{\n                editor.execute('highlight', {\n                    value: splitButtonView.commandValue\n                });\n            });\n            // Focus the editable after executing the command.\n            // It overrides a default behaviour where the focus is moved to the dropdown button (#12125).\n            this.listenTo(dropdownView, 'execute', ()=>{\n                editor.editing.view.focus();\n            });\n            /**\n\t\t\t * Returns active highlighter option depending on current command value.\n\t\t\t * If current is not set or it is the same as last execute this method will return the option key (like icon or color)\n\t\t\t * of last executed highlighter. Otherwise it will return option key for current one.\n\t\t\t */ function getActiveOption(current, key) {\n                const whichHighlighter = !current || current === splitButtonView.lastExecuted ? splitButtonView.lastExecuted : current;\n                return optionsMap[whichHighlighter][key];\n            }\n            return dropdownView;\n        });\n    }\n    /**\n\t * Creates the menu bar button for highlight including submenu with available options.\n\t */ _addMenuBarButton(options) {\n        const editor = this.editor;\n        const t = editor.t;\n        const command = editor.commands.get('highlight');\n        editor.ui.componentFactory.add('menuBar:highlight', (locale)=>{\n            const menuView = new MenuBarMenuView(locale);\n            menuView.buttonView.set({\n                label: t('Highlight'),\n                icon: getIconForType('marker')\n            });\n            menuView.bind('isEnabled').to(command);\n            menuView.buttonView.iconView.fillColor = 'transparent';\n            const listView = new MenuBarMenuListView(locale);\n            for (const option of options){\n                const listItemView = new MenuBarMenuListItemView(locale, menuView);\n                const buttonView = new MenuBarMenuListItemButtonView(locale);\n                buttonView.set({\n                    label: option.title,\n                    icon: getIconForType(option.type),\n                    role: 'menuitemradio',\n                    isToggleable: true\n                });\n                buttonView.iconView.fillColor = option.color;\n                buttonView.delegate('execute').to(menuView);\n                buttonView.bind('isOn').to(command, 'value', (value)=>value === option.model);\n                buttonView.on('execute', ()=>{\n                    editor.execute('highlight', {\n                        value: option.model\n                    });\n                    editor.editing.view.focus();\n                });\n                listItemView.children.add(buttonView);\n                listView.items.add(listItemView);\n            }\n            // Add remove highlight button\n            listView.items.add(new ListSeparatorView(locale));\n            const listItemView = new MenuBarMenuListItemView(locale, menuView);\n            const buttonView = new MenuBarMenuListItemButtonView(locale);\n            buttonView.set({\n                label: t('Remove highlight'),\n                icon: IconEraser\n            });\n            buttonView.delegate('execute').to(menuView);\n            buttonView.on('execute', ()=>{\n                editor.execute('highlight', {\n                    value: null\n                });\n                editor.editing.view.focus();\n            });\n            listItemView.children.add(buttonView);\n            listView.items.add(listItemView);\n            menuView.panelView.children.add(listView);\n            return menuView;\n        });\n    }\n}\n/**\n * Extends split button icon style to reflect last used button style.\n */ function bindToolbarIconStyleToActiveColor(dropdownView) {\n    const actionView = dropdownView.buttonView.actionView;\n    actionView.iconView.bind('fillColor').to(dropdownView.buttonView, 'color');\n}\n/**\n * Returns icon for given highlighter type.\n */ function getIconForType(type) {\n    return type === 'marker' ? IconMarker : IconPen;\n}\n\n/**\n * The highlight plugin.\n *\n * For a detailed overview, check the {@glink features/highlight Highlight feature} documentation.\n *\n * This is a \"glue\" plugin which loads the {@link module:highlight/highlightediting~HighlightEditing} and\n * {@link module:highlight/highlightui~HighlightUI} plugins.\n */ class Highlight extends Plugin {\n    /**\n\t * @inheritDoc\n\t */ static get requires() {\n        return [\n            HighlightEditing,\n            HighlightUI\n        ];\n    }\n    /**\n\t * @inheritDoc\n\t */ static get pluginName() {\n        return 'Highlight';\n    }\n    /**\n\t * @inheritDoc\n\t */ static get isOfficialPlugin() {\n        return true;\n    }\n}\n\nexport { Highlight, HighlightEditing, HighlightUI };\n//# sourceMappingURL=index.js.map\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module highlight/highlightcommand\n */\n\nimport { Command } from 'ckeditor5/src/core.js';\nimport type { TreeWalkerValue } from 'ckeditor5/src/engine.js';\n\n/**\n * The highlight command. It is used by the {@link module:highlight/highlightediting~HighlightEditing highlight feature}\n * to apply the text highlighting.\n *\n * ```ts\n * editor.execute( 'highlight', { value: 'greenMarker' } );\n * ```\n *\n * **Note**: Executing the command without a value removes the attribute from the model. If the selection is collapsed\n * inside a text with the highlight attribute, the command will remove the attribute from the entire range\n * of that text.\n */\nexport default class HighlightCommand extends Command {\n\t/**\n\t * A value indicating whether the command is active. If the selection has some highlight attribute,\n\t * it corresponds to the value of that attribute.\n\t *\n\t * @observable\n\t * @readonly\n\t */\n\tdeclare public value: string | undefined;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override refresh(): void {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\n\t\tthis.value = doc.selection.getAttribute( 'highlight' ) as string | undefined;\n\t\tthis.isEnabled = model.schema.checkAttributeInSelection( doc.selection, 'highlight' );\n\t}\n\n\t/**\n\t * Executes the command.\n\t *\n\t * @param options Options for the executed command.\n\t * @param options.value The value to apply.\n\t *\n\t * @fires execute\n\t */\n\tpublic override execute( options: { value?: string | null } = {} ): void {\n\t\tconst model = this.editor.model;\n\t\tconst document = model.document;\n\t\tconst selection = document.selection;\n\n\t\tconst highlighter = options.value;\n\n\t\tmodel.change( writer => {\n\t\t\tif ( selection.isCollapsed ) {\n\t\t\t\tconst position = selection.getFirstPosition()!;\n\n\t\t\t\t// When selection is inside text with `highlight` attribute.\n\t\t\t\tif ( selection.hasAttribute( 'highlight' ) ) {\n\t\t\t\t\t// Find the full highlighted range.\n\t\t\t\t\tconst isSameHighlight = ( value: TreeWalkerValue ) => {\n\t\t\t\t\t\treturn value.item.hasAttribute( 'highlight' ) && value.item.getAttribute( 'highlight' ) === this.value;\n\t\t\t\t\t};\n\n\t\t\t\t\tconst highlightStart = position.getLastMatchingPosition( isSameHighlight, { direction: 'backward' } );\n\t\t\t\t\tconst highlightEnd = position.getLastMatchingPosition( isSameHighlight );\n\n\t\t\t\t\tconst highlightRange = writer.createRange( highlightStart, highlightEnd );\n\n\t\t\t\t\t// Then depending on current value...\n\t\t\t\t\tif ( !highlighter || this.value === highlighter ) {\n\t\t\t\t\t\t// ...remove attribute when passing highlighter different then current or executing \"eraser\".\n\n\t\t\t\t\t\t// If we're at the end of the highlighted range, we don't want to remove highlight of the range.\n\t\t\t\t\t\tif ( !position.isEqual( highlightEnd ) ) {\n\t\t\t\t\t\t\twriter.removeAttribute( 'highlight', highlightRange );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\twriter.removeSelectionAttribute( 'highlight' );\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// ...update `highlight` value.\n\n\t\t\t\t\t\t// If we're at the end of the highlighted range, we don't want to change the highlight of the range.\n\t\t\t\t\t\tif ( !position.isEqual( highlightEnd ) ) {\n\t\t\t\t\t\t\twriter.setAttribute( 'highlight', highlighter, highlightRange );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\twriter.setSelectionAttribute( 'highlight', highlighter );\n\t\t\t\t\t}\n\t\t\t\t} else if ( highlighter ) {\n\t\t\t\t\twriter.setSelectionAttribute( 'highlight', highlighter );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst ranges = model.schema.getValidRanges( selection.getRanges(), 'highlight' );\n\n\t\t\t\tfor ( const range of ranges ) {\n\t\t\t\t\tif ( highlighter ) {\n\t\t\t\t\t\twriter.setAttribute( 'highlight', highlighter, range );\n\t\t\t\t\t} else {\n\t\t\t\t\t\twriter.removeAttribute( 'highlight', range );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module highlight/highlightediting\n */\n\nimport { Plugin, type Editor } from 'ckeditor5/src/core.js';\n\nimport HighlightCommand from './highlightcommand.js';\nimport type { HighlightOption } from './highlightconfig.js';\n\n/**\n * The highlight editing feature. It introduces the {@link module:highlight/highlightcommand~HighlightCommand command} and the `highlight`\n * attribute in the {@link module:engine/model/model~Model model} which renders in the {@link module:engine/view/view view}\n * as a `<mark>` element with a `class` attribute (`<mark class=\"marker-green\">...</mark>`) depending\n * on the {@link module:highlight/highlightconfig~HighlightConfig configuration}.\n */\nexport default class HighlightEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get pluginName() {\n\t\treturn 'HighlightEditing' as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static override get isOfficialPlugin(): true {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor: Editor ) {\n\t\tsuper( editor );\n\n\t\teditor.config.define( 'highlight', {\n\t\t\toptions: [\n\t\t\t\t{\n\t\t\t\t\tmodel: 'yellowMarker',\n\t\t\t\t\tclass: 'marker-yellow',\n\t\t\t\t\ttitle: 'Yellow marker',\n\t\t\t\t\tcolor: 'var(--ck-highlight-marker-yellow)',\n\t\t\t\t\ttype: 'marker'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tmodel: 'greenMarker',\n\t\t\t\t\tclass: 'marker-green',\n\t\t\t\t\ttitle: 'Green marker',\n\t\t\t\t\tcolor: 'var(--ck-highlight-marker-green)',\n\t\t\t\t\ttype: 'marker'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tmodel: 'pinkMarker',\n\t\t\t\t\tclass: 'marker-pink',\n\t\t\t\t\ttitle: 'Pink marker',\n\t\t\t\t\tcolor: 'var(--ck-highlight-marker-pink)',\n\t\t\t\t\ttype: 'marker'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tmodel: 'blueMarker',\n\t\t\t\t\tclass: 'marker-blue',\n\t\t\t\t\ttitle: 'Blue marker',\n\t\t\t\t\tcolor: 'var(--ck-highlight-marker-blue)',\n\t\t\t\t\ttype: 'marker'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tmodel: 'redPen',\n\t\t\t\t\tclass: 'pen-red',\n\t\t\t\t\ttitle: 'Red pen',\n\t\t\t\t\tcolor: 'var(--ck-highlight-pen-red)',\n\t\t\t\t\ttype: 'pen'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tmodel: 'greenPen',\n\t\t\t\t\tclass: 'pen-green',\n\t\t\t\t\ttitle: 'Green pen',\n\t\t\t\t\tcolor: 'var(--ck-highlight-pen-green)',\n\t\t\t\t\ttype: 'pen'\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic init(): void {\n\t\tconst editor = this.editor;\n\n\t\t// Allow highlight attribute on text nodes.\n\t\teditor.model.schema.extend( '$text', { allowAttributes: 'highlight' } );\n\n\t\tconst options = editor.config.get( 'highlight.options' )!;\n\n\t\t// Set-up the two-way conversion.\n\t\teditor.conversion.attributeToElement( _buildDefinition( options ) );\n\n\t\teditor.commands.add( 'highlight', new HighlightCommand( editor ) );\n\t}\n}\n\n/**\n * Converts the options array to a converter definition.\n *\n * @param options An array with configured options.\n */\nfunction _buildDefinition( options: Array<HighlightOption> ): HighlightConverterDefinition {\n\tconst definition: HighlightConverterDefinition = {\n\t\tmodel: {\n\t\t\tkey: 'highlight',\n\t\t\tvalues: []\n\t\t},\n\t\tview: {}\n\t};\n\n\tfor ( const option of options ) {\n\t\tdefinition.model.values.push( option.model );\n\t\tdefinition.view[ option.model ] = {\n\t\t\tname: 'mark',\n\t\t\tclasses: option.class\n\t\t};\n\t}\n\n\treturn definition;\n}\n\ntype HighlightConverterDefinition = {\n\tmodel: { key: string; values: Array<string> };\n\tview: Record<string, { name: string; classes: string }>;\n};\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module highlight/highlightui\n */\n\nimport { Plugin } from 'ckeditor5/src/core.js';\nimport { IconEraser, IconMarker, IconPen } from 'ckeditor5/src/icons.js';\nimport {\n\taddToolbarToDropdown,\n\tcreateDropdown,\n\tButtonView,\n\tListSeparatorView,\n\tMenuBarMenuView,\n\tMenuBarMenuListView,\n\tMenuBarMenuListItemView,\n\tMenuBarMenuListItemButtonView,\n\tSplitButtonView,\n\tToolbarSeparatorView,\n\ttype DropdownView\n} from 'ckeditor5/src/ui.js';\n\nimport type { HighlightOption } from './highlightconfig.js';\nimport type HighlightCommand from './highlightcommand.js';\n\nimport './../theme/highlight.css';\n\n/**\n * The default highlight UI plugin. It introduces:\n *\n * * The `'highlight'` dropdown,\n * * The `'removeHighlight'` and `'highlight:*'` buttons.\n *\n * The default configuration includes the following buttons:\n *\n * * `'highlight:yellowMarker'`\n * * `'highlight:greenMarker'`\n * * `'highlight:pinkMarker'`\n * * `'highlight:blueMarker'`\n * * `'highlight:redPen'`\n * * `'highlight:greenPen'`\n *\n * See the {@link module:highlight/highlightconfig~HighlightConfig#options configuration} to learn more\n * about the defaults.\n */\nexport default class HighlightUI extends Plugin {\n\t/**\n\t * Returns the localized option titles provided by the plugin.\n\t *\n\t * The following localized titles corresponding with default\n\t * {@link module:highlight/highlightconfig~HighlightConfig#options} are available:\n\t *\n\t * * `'Yellow marker'`,\n\t * * `'Green marker'`,\n\t * * `'Pink marker'`,\n\t * * `'Blue marker'`,\n\t * * `'Red pen'`,\n\t * * `'Green pen'`.\n\t */\n\tpublic get localizedOptionTitles(): Record<string, string> {\n\t\tconst t = this.editor.t;\n\n\t\treturn {\n\t\t\t'Yellow marker': t( 'Yellow marker' ),\n\t\t\t'Green marker': t( 'Green marker' ),\n\t\t\t'Pink marker': t( 'Pink marker' ),\n\t\t\t'Blue marker': t( 'Blue marker' ),\n\t\t\t'Red pen': t( 'Red pen' ),\n\t\t\t'Green pen': t( 'Green pen' )\n\t\t};\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get pluginName() {\n\t\treturn 'HighlightUI' as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static override get isOfficialPlugin(): true {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic init(): void {\n\t\tconst options = this.editor.config.get( 'highlight.options' )!;\n\n\t\tfor ( const option of options ) {\n\t\t\tthis._addHighlighterButton( option );\n\t\t}\n\n\t\tthis._addRemoveHighlightButton();\n\n\t\tthis._addDropdown( options );\n\n\t\tthis._addMenuBarButton( options );\n\t}\n\n\t/**\n\t * Creates the \"Remove highlight\" button.\n\t */\n\tprivate _addRemoveHighlightButton(): void {\n\t\tconst t = this.editor.t;\n\t\tconst command: HighlightCommand = this.editor.commands.get( 'highlight' )!;\n\n\t\tthis._addButton( 'removeHighlight', t( 'Remove highlight' ), IconEraser, null, button => {\n\t\t\tbutton.bind( 'isEnabled' ).to( command, 'isEnabled' );\n\t\t} );\n\t}\n\n\t/**\n\t * Creates a toolbar button from the provided highlight option.\n\t */\n\tprivate _addHighlighterButton( option: HighlightOption ) {\n\t\tconst command: HighlightCommand = this.editor.commands.get( 'highlight' )!;\n\n\t\t// TODO: change naming\n\t\tthis._addButton( 'highlight:' + option.model, option.title, getIconForType( option.type ), option.model, decorateHighlightButton );\n\n\t\tfunction decorateHighlightButton( button: ButtonView ) {\n\t\t\tbutton.bind( 'isEnabled' ).to( command, 'isEnabled' );\n\t\t\tbutton.bind( 'isOn' ).to( command, 'value', value => value === option.model );\n\t\t\tbutton.iconView.fillColor = option.color;\n\t\t\tbutton.isToggleable = true;\n\t\t}\n\t}\n\n\t/**\n\t * Internal method for creating highlight buttons.\n\t *\n\t * @param name The name of the button.\n\t * @param label The label for the button.\n\t * @param icon The button icon.\n\t * @param value The `value` property passed to the executed command.\n\t * @param decorateButton A callback getting ButtonView instance so that it can be further customized.\n\t */\n\tprivate _addButton( name: string, label: string, icon: string, value: string | null, decorateButton: ( button: ButtonView ) => void ) {\n\t\tconst editor = this.editor;\n\n\t\teditor.ui.componentFactory.add( name, locale => {\n\t\t\tconst buttonView = new ButtonView( locale );\n\n\t\t\tconst localized = this.localizedOptionTitles[ label ] ? this.localizedOptionTitles[ label ] : label;\n\n\t\t\tbuttonView.set( {\n\t\t\t\tlabel: localized,\n\t\t\t\ticon,\n\t\t\t\ttooltip: true\n\t\t\t} );\n\n\t\t\tbuttonView.on( 'execute', () => {\n\t\t\t\teditor.execute( 'highlight', { value } );\n\t\t\t\teditor.editing.view.focus();\n\t\t\t} );\n\n\t\t\t// Add additional behavior for buttonView.\n\t\t\tdecorateButton( buttonView );\n\n\t\t\treturn buttonView;\n\t\t} );\n\t}\n\n\t/**\n\t * Creates the split button dropdown UI from the provided highlight options.\n\t */\n\tprivate _addDropdown( options: Array<HighlightOption> ) {\n\t\tconst editor = this.editor;\n\t\tconst t = editor.t;\n\t\tconst componentFactory = editor.ui.componentFactory;\n\n\t\tconst startingHighlighter = options[ 0 ];\n\n\t\tconst optionsMap = options.reduce( ( retVal, option ) => {\n\t\t\tretVal[ option.model ] = option;\n\n\t\t\treturn retVal;\n\t\t}, {} as Record<string, HighlightOption> );\n\n\t\tcomponentFactory.add( 'highlight', locale => {\n\t\t\tconst command: HighlightCommand = editor.commands.get( 'highlight' )!;\n\t\t\tconst dropdownView = createDropdown( locale, SplitButtonView );\n\t\t\tconst splitButtonView = dropdownView.buttonView as HighlightSplitButtonView;\n\n\t\t\tsplitButtonView.set( {\n\t\t\t\tlabel: t( 'Highlight' ),\n\t\t\t\ttooltip: true,\n\t\t\t\t// Holds last executed highlighter.\n\t\t\t\tlastExecuted: startingHighlighter.model,\n\t\t\t\t// Holds current highlighter to execute (might be different then last used).\n\t\t\t\tcommandValue: startingHighlighter.model,\n\t\t\t\tisToggleable: true\n\t\t\t} );\n\n\t\t\t// Dropdown button changes to selection (command.value):\n\t\t\t// - If selection is in highlight it get active highlight appearance (icon, color) and is activated.\n\t\t\t// - Otherwise it gets appearance (icon, color) of last executed highlight.\n\t\t\tsplitButtonView.bind( 'icon' ).to( command, 'value', value => getIconForType( getActiveOption( value, 'type' ) ) );\n\t\t\tsplitButtonView.bind( 'color' ).to( command, 'value', value => getActiveOption( value, 'color' ) );\n\t\t\tsplitButtonView.bind( 'commandValue' ).to( command, 'value', value => getActiveOption( value, 'model' ) );\n\t\t\tsplitButtonView.bind( 'isOn' ).to( command, 'value', value => !!value );\n\n\t\t\tsplitButtonView.delegate( 'execute' ).to( dropdownView );\n\n\t\t\t// Create buttons array.\n\t\t\tconst buttonsCreator = () => {\n\t\t\t\tconst buttons = options.map( option => {\n\t\t\t\t\t// Get existing highlighter button.\n\t\t\t\t\tconst buttonView = componentFactory.create( 'highlight:' + option.model );\n\n\t\t\t\t\t// Update lastExecutedHighlight on execute.\n\t\t\t\t\tthis.listenTo( buttonView, 'execute', () => {\n\t\t\t\t\t\t( dropdownView.buttonView as HighlightSplitButtonView ).set( { lastExecuted: option.model } );\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn buttonView;\n\t\t\t\t} );\n\n\t\t\t\t// Add separator and eraser buttons to dropdown.\n\t\t\t\tbuttons.push( new ToolbarSeparatorView() );\n\t\t\t\tbuttons.push( componentFactory.create( 'removeHighlight' ) );\n\n\t\t\t\treturn buttons;\n\t\t\t};\n\n\t\t\t// Make toolbar button enabled when any button in dropdown is enabled before adding separator and eraser.\n\t\t\tdropdownView.bind( 'isEnabled' ).to( command, 'isEnabled' );\n\n\t\t\taddToolbarToDropdown( dropdownView, buttonsCreator, {\n\t\t\t\tenableActiveItemFocusOnDropdownOpen: true,\n\t\t\t\tariaLabel: t( 'Text highlight toolbar' )\n\t\t\t} );\n\t\t\tbindToolbarIconStyleToActiveColor( dropdownView );\n\n\t\t\t// Execute current action from dropdown's split button action button.\n\t\t\tsplitButtonView.on( 'execute', () => {\n\t\t\t\teditor.execute( 'highlight', { value: splitButtonView.commandValue } );\n\t\t\t} );\n\n\t\t\t// Focus the editable after executing the command.\n\t\t\t// It overrides a default behaviour where the focus is moved to the dropdown button (#12125).\n\t\t\tthis.listenTo( dropdownView, 'execute', () => {\n\t\t\t\teditor.editing.view.focus();\n\t\t\t} );\n\n\t\t\t/**\n\t\t\t * Returns active highlighter option depending on current command value.\n\t\t\t * If current is not set or it is the same as last execute this method will return the option key (like icon or color)\n\t\t\t * of last executed highlighter. Otherwise it will return option key for current one.\n\t\t\t */\n\t\t\tfunction getActiveOption<Key extends keyof HighlightOption>( current: string | undefined, key: Key ): HighlightOption[ Key ] {\n\t\t\t\tconst whichHighlighter = !current ||\n\t\t\t\tcurrent === splitButtonView.lastExecuted ? splitButtonView.lastExecuted : current;\n\n\t\t\t\treturn optionsMap[ whichHighlighter! ][ key ];\n\t\t\t}\n\n\t\t\treturn dropdownView;\n\t\t} );\n\t}\n\n\t/**\n\t * Creates the menu bar button for highlight including submenu with available options.\n\t */\n\tprivate _addMenuBarButton( options: Array<HighlightOption> ) {\n\t\tconst editor = this.editor;\n\t\tconst t = editor.t;\n\t\tconst command: HighlightCommand = editor.commands.get( 'highlight' )!;\n\n\t\teditor.ui.componentFactory.add( 'menuBar:highlight', locale => {\n\t\t\tconst menuView = new MenuBarMenuView( locale );\n\n\t\t\tmenuView.buttonView.set( {\n\t\t\t\tlabel: t( 'Highlight' ),\n\t\t\t\ticon: getIconForType( 'marker' )\n\t\t\t} );\n\t\t\tmenuView.bind( 'isEnabled' ).to( command );\n\t\t\tmenuView.buttonView.iconView.fillColor = 'transparent';\n\n\t\t\tconst listView = new MenuBarMenuListView( locale );\n\n\t\t\tfor ( const option of options ) {\n\t\t\t\tconst listItemView = new MenuBarMenuListItemView( locale, menuView );\n\t\t\t\tconst buttonView = new MenuBarMenuListItemButtonView( locale );\n\n\t\t\t\tbuttonView.set( {\n\t\t\t\t\tlabel: option.title,\n\t\t\t\t\ticon: getIconForType( option.type ),\n\t\t\t\t\trole: 'menuitemradio',\n\t\t\t\t\tisToggleable: true\n\t\t\t\t} );\n\n\t\t\t\tbuttonView.iconView.fillColor = option.color;\n\n\t\t\t\tbuttonView.delegate( 'execute' ).to( menuView );\n\t\t\t\tbuttonView.bind( 'isOn' ).to( command, 'value', value => value === option.model );\n\n\t\t\t\tbuttonView.on( 'execute', () => {\n\t\t\t\t\teditor.execute( 'highlight', { value: option.model } );\n\n\t\t\t\t\teditor.editing.view.focus();\n\t\t\t\t} );\n\n\t\t\t\tlistItemView.children.add( buttonView );\n\t\t\t\tlistView.items.add( listItemView );\n\t\t\t}\n\n\t\t\t// Add remove highlight button\n\t\t\tlistView.items.add( new ListSeparatorView( locale ) );\n\t\t\tconst listItemView = new MenuBarMenuListItemView( locale, menuView );\n\t\t\tconst buttonView = new MenuBarMenuListItemButtonView( locale );\n\n\t\t\tbuttonView.set( {\n\t\t\t\tlabel: t( 'Remove highlight' ),\n\t\t\t\ticon: IconEraser\n\t\t\t} );\n\n\t\t\tbuttonView.delegate( 'execute' ).to( menuView );\n\n\t\t\tbuttonView.on( 'execute', () => {\n\t\t\t\teditor.execute( 'highlight', { value: null } );\n\n\t\t\t\teditor.editing.view.focus();\n\t\t\t} );\n\n\t\t\tlistItemView.children.add( buttonView );\n\t\t\tlistView.items.add( listItemView );\n\n\t\t\tmenuView.panelView.children.add( listView );\n\n\t\t\treturn menuView;\n\t\t} );\n\t}\n}\n\n/**\n * Extends split button icon style to reflect last used button style.\n */\nfunction bindToolbarIconStyleToActiveColor( dropdownView: DropdownView ): void {\n\tconst actionView = ( dropdownView.buttonView as HighlightSplitButtonView ).actionView;\n\n\tactionView.iconView.bind( 'fillColor' ).to( ( dropdownView.buttonView! as HighlightSplitButtonView ), 'color' );\n}\n\n/**\n * Returns icon for given highlighter type.\n */\nfunction getIconForType( type: 'marker' | 'pen' ) {\n\treturn type === 'marker' ? IconMarker : IconPen;\n}\n\ntype HighlightSplitButtonView = SplitButtonView & {\n\tlastExecuted: string;\n\tcommandValue: string;\n\tcolor: string;\n};\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module highlight/highlight\n */\n\nimport { Plugin } from 'ckeditor5/src/core.js';\n\nimport HighlightEditing from './highlightediting.js';\nimport HighlightUI from './highlightui.js';\n\n/**\n * The highlight plugin.\n *\n * For a detailed overview, check the {@glink features/highlight Highlight feature} documentation.\n *\n * This is a \"glue\" plugin which loads the {@link module:highlight/highlightediting~HighlightEditing} and\n * {@link module:highlight/highlightui~HighlightUI} plugins.\n */\nexport default class Highlight extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get requires() {\n\t\treturn [ HighlightEditing, HighlightUI ] as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get pluginName() {\n\t\treturn 'Highlight' as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static override get isOfficialPlugin(): true {\n\t\treturn true;\n\t}\n}\n"]}