{"version":3,"sources":["index.js","../src/utils.ts","../src/uploadadapter.ts"],"names":["TOKEN_COOKIE_NAME","TOKEN_LENGTH","tokenCharset","getCsrfToken","token","getCookie","length","generateToken","setCookie","name","toLowerCase","parts","document","cookie","split","part","pair","key","decodeURIComponent","trim","value","encodeURIComponent","result","randValues","Uint8Array","window","crypto","getRandomValues","j","character","charAt","Math","random","toUpperCase","CKFinderUploadAdapter","Plugin","requires","FileRepository","pluginName","isOfficialPlugin","url","editor","config","get","plugins","createUploadAdapter","loader","UploadAdapter","t","xhr","constructor","file","then","Promise","resolve","reject","_initRequest","_initListeners","_sendRequest","abort","XMLHttpRequest","open","responseType","genericError","addEventListener","response","uploaded","error","message","default","upload","evt","lengthComputable","uploadTotal","total","loaded","data","FormData","append","send"],"mappings":"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","file":"index.js.map","sourcesContent":["import { Plugin } from '@ckeditor/ckeditor5-core/dist/index.js';\nimport { FileRepository } from '@ckeditor/ckeditor5-upload/dist/index.js';\n\n/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */ /* globals window, document */ /**\n * @module adapter-ckfinder/utils\n */ const TOKEN_COOKIE_NAME = 'ckCsrfToken';\nconst TOKEN_LENGTH = 40;\nconst tokenCharset = 'abcdefghijklmnopqrstuvwxyz0123456789';\n/**\n * Returns the CSRF token value. The value is a hash stored in `document.cookie`\n * under the `ckCsrfToken` key. The CSRF token can be used to secure the communication\n * between the web browser and the CKFinder server.\n */ function getCsrfToken() {\n    let token = getCookie(TOKEN_COOKIE_NAME);\n    if (!token || token.length != TOKEN_LENGTH) {\n        token = generateToken(TOKEN_LENGTH);\n        setCookie(TOKEN_COOKIE_NAME, token);\n    }\n    return token;\n}\n/**\n * Returns the value of the cookie with a given name or `null` if the cookie is not found.\n */ function getCookie(name) {\n    name = name.toLowerCase();\n    const parts = document.cookie.split(';');\n    for (const part of parts){\n        const pair = part.split('=');\n        const key = decodeURIComponent(pair[0].trim().toLowerCase());\n        if (key === name) {\n            return decodeURIComponent(pair[1]);\n        }\n    }\n    return null;\n}\n/**\n * Sets the value of the cookie with a given name.\n */ function setCookie(name, value) {\n    document.cookie = encodeURIComponent(name) + '=' + encodeURIComponent(value) + ';path=/';\n}\n/**\n * Generates the CSRF token with the given length.\n */ function generateToken(length) {\n    let result = '';\n    const randValues = new Uint8Array(length);\n    window.crypto.getRandomValues(randValues);\n    for(let j = 0; j < randValues.length; j++){\n        const character = tokenCharset.charAt(randValues[j] % tokenCharset.length);\n        result += Math.random() > 0.5 ? character.toUpperCase() : character;\n    }\n    return result;\n}\n\n/**\n * A plugin that enables file uploads in CKEditor 5 using the CKFinder server–side connector.\n *\n * See the {@glink features/file-management/ckfinder \"CKFinder file manager integration\"} guide to learn how to configure\n * and use this feature as well as find out more about the full integration with the file manager\n * provided by the {@link module:ckfinder/ckfinder~CKFinder} plugin.\n *\n * Check out the {@glink features/images/image-upload/image-upload comprehensive \"Image upload overview\"} guide to learn\n * about other ways to upload images into CKEditor 5.\n */ class CKFinderUploadAdapter extends Plugin {\n    /**\n\t * @inheritDoc\n\t */ static get requires() {\n        return [\n            FileRepository\n        ];\n    }\n    /**\n\t * @inheritDoc\n\t */ static get pluginName() {\n        return 'CKFinderUploadAdapter';\n    }\n    /**\n\t * @inheritDoc\n\t */ static get isOfficialPlugin() {\n        return true;\n    }\n    /**\n\t * @inheritDoc\n\t */ init() {\n        const url = this.editor.config.get('ckfinder.uploadUrl');\n        if (!url) {\n            return;\n        }\n        // Register CKFinderAdapter\n        this.editor.plugins.get(FileRepository).createUploadAdapter = (loader)=>new UploadAdapter(loader, url, this.editor.t);\n    }\n}\n/**\n * Upload adapter for CKFinder.\n */ class UploadAdapter {\n    /**\n\t * FileLoader instance to use during the upload.\n\t */ loader;\n    /**\n\t * Upload URL.\n\t */ url;\n    /**\n\t * Locale translation method.\n\t */ t;\n    xhr;\n    /**\n\t * Creates a new adapter instance.\n\t */ constructor(loader, url, t){\n        this.loader = loader;\n        this.url = url;\n        this.t = t;\n    }\n    /**\n\t * Starts the upload process.\n\t *\n\t * @see module:upload/filerepository~UploadAdapter#upload\n\t */ upload() {\n        return this.loader.file.then((file)=>{\n            return new Promise((resolve, reject)=>{\n                this._initRequest();\n                this._initListeners(resolve, reject, file);\n                this._sendRequest(file);\n            });\n        });\n    }\n    /**\n\t * Aborts the upload process.\n\t *\n\t * @see module:upload/filerepository~UploadAdapter#abort\n\t */ abort() {\n        if (this.xhr) {\n            this.xhr.abort();\n        }\n    }\n    /**\n\t * Initializes the XMLHttpRequest object.\n\t */ _initRequest() {\n        const xhr = this.xhr = new XMLHttpRequest();\n        xhr.open('POST', this.url, true);\n        xhr.responseType = 'json';\n    }\n    /**\n\t * Initializes XMLHttpRequest listeners.\n\t *\n\t * @param resolve Callback function to be called when the request is successful.\n\t * @param reject Callback function to be called when the request cannot be completed.\n\t * @param file File instance to be uploaded.\n\t */ _initListeners(resolve, reject, file) {\n        const xhr = this.xhr;\n        const loader = this.loader;\n        const t = this.t;\n        const genericError = t('Cannot upload file:') + ` ${file.name}.`;\n        xhr.addEventListener('error', ()=>reject(genericError));\n        xhr.addEventListener('abort', ()=>reject());\n        xhr.addEventListener('load', ()=>{\n            const response = xhr.response;\n            if (!response || !response.uploaded) {\n                return reject(response && response.error && response.error.message ? response.error.message : genericError);\n            }\n            resolve({\n                default: response.url\n            });\n        });\n        // Upload progress when it's supported.\n        /* istanbul ignore else -- @preserve */ if (xhr.upload) {\n            xhr.upload.addEventListener('progress', (evt)=>{\n                if (evt.lengthComputable) {\n                    loader.uploadTotal = evt.total;\n                    loader.uploaded = evt.loaded;\n                }\n            });\n        }\n    }\n    /**\n\t * Prepares the data and sends the request.\n\t *\n\t * @param file File instance to be uploaded.\n\t */ _sendRequest(file) {\n        // Prepare form data.\n        const data = new FormData();\n        data.append('upload', file);\n        data.append('ckCsrfToken', getCsrfToken());\n        // Send request.\n        this.xhr.send(data);\n    }\n}\n\nexport { CKFinderUploadAdapter };\n//# sourceMappingURL=index.js.map\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/* globals window, document */\n\n/**\n * @module adapter-ckfinder/utils\n */\n\nconst TOKEN_COOKIE_NAME = 'ckCsrfToken';\nconst TOKEN_LENGTH = 40;\nconst tokenCharset = 'abcdefghijklmnopqrstuvwxyz0123456789';\n\n/**\n * Returns the CSRF token value. The value is a hash stored in `document.cookie`\n * under the `ckCsrfToken` key. The CSRF token can be used to secure the communication\n * between the web browser and the CKFinder server.\n */\nexport function getCsrfToken(): string {\n\tlet token = getCookie( TOKEN_COOKIE_NAME );\n\n\tif ( !token || token.length != TOKEN_LENGTH ) {\n\t\ttoken = generateToken( TOKEN_LENGTH );\n\t\tsetCookie( TOKEN_COOKIE_NAME, token );\n\t}\n\n\treturn token;\n}\n\n/**\n * Returns the value of the cookie with a given name or `null` if the cookie is not found.\n */\nexport function getCookie( name: string ): string | null {\n\tname = name.toLowerCase();\n\tconst parts = document.cookie.split( ';' );\n\n\tfor ( const part of parts ) {\n\t\tconst pair = part.split( '=' );\n\t\tconst key = decodeURIComponent( pair[ 0 ].trim().toLowerCase() );\n\n\t\tif ( key === name ) {\n\t\t\treturn decodeURIComponent( pair[ 1 ] );\n\t\t}\n\t}\n\n\treturn null;\n}\n\n/**\n * Sets the value of the cookie with a given name.\n */\nexport function setCookie( name: string, value: string ): void {\n\tdocument.cookie = encodeURIComponent( name ) + '=' + encodeURIComponent( value ) + ';path=/';\n}\n\n/**\n * Generates the CSRF token with the given length.\n */\nfunction generateToken( length: number ): string {\n\tlet result = '';\n\tconst randValues = new Uint8Array( length );\n\n\twindow.crypto.getRandomValues( randValues );\n\n\tfor ( let j = 0; j < randValues.length; j++ ) {\n\t\tconst character = tokenCharset.charAt( randValues[ j ] % tokenCharset.length );\n\t\tresult += Math.random() > 0.5 ? character.toUpperCase() : character;\n\t}\n\n\treturn result;\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/* globals XMLHttpRequest, FormData */\n\n/**\n * @module adapter-ckfinder/uploadadapter\n */\n\nimport { Plugin } from 'ckeditor5/src/core.js';\nimport {\n\tFileRepository,\n\ttype UploadAdapter as UploadAdapterInterface,\n\ttype FileLoader,\n\ttype UploadResponse\n} from 'ckeditor5/src/upload.js';\nimport type { LocaleTranslate } from 'ckeditor5/src/utils.js';\n\nimport { getCsrfToken } from './utils.js';\n\n/**\n * A plugin that enables file uploads in CKEditor 5 using the CKFinder server–side connector.\n *\n * See the {@glink features/file-management/ckfinder \"CKFinder file manager integration\"} guide to learn how to configure\n * and use this feature as well as find out more about the full integration with the file manager\n * provided by the {@link module:ckfinder/ckfinder~CKFinder} plugin.\n *\n * Check out the {@glink features/images/image-upload/image-upload comprehensive \"Image upload overview\"} guide to learn\n * about other ways to upload images into CKEditor 5.\n */\nexport default class CKFinderUploadAdapter extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get requires() {\n\t\treturn [ FileRepository ] as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get pluginName() {\n\t\treturn 'CKFinderUploadAdapter' as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static override get isOfficialPlugin(): true {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic init(): void {\n\t\tconst url = this.editor.config.get( 'ckfinder.uploadUrl' )! as string;\n\n\t\tif ( !url ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Register CKFinderAdapter\n\t\tthis.editor.plugins.get( FileRepository ).createUploadAdapter = loader => new UploadAdapter( loader, url, this.editor.t );\n\t}\n}\n\n/**\n * Upload adapter for CKFinder.\n */\nclass UploadAdapter implements UploadAdapterInterface {\n\t/**\n\t * FileLoader instance to use during the upload.\n\t */\n\tpublic loader: FileLoader;\n\n\t/**\n\t * Upload URL.\n\t */\n\tpublic url: string;\n\n\t/**\n\t * Locale translation method.\n\t */\n\tpublic t: LocaleTranslate;\n\n\tprivate xhr?: XMLHttpRequest;\n\n\t/**\n\t * Creates a new adapter instance.\n\t */\n\tconstructor( loader: FileLoader, url: string, t: LocaleTranslate ) {\n\t\tthis.loader = loader;\n\t\tthis.url = url;\n\t\tthis.t = t;\n\t}\n\n\t/**\n\t * Starts the upload process.\n\t *\n\t * @see module:upload/filerepository~UploadAdapter#upload\n\t */\n\tpublic upload() {\n\t\treturn this.loader.file.then( file => {\n\t\t\treturn new Promise<UploadResponse>( ( resolve, reject ) => {\n\t\t\t\tthis._initRequest();\n\t\t\t\tthis._initListeners( resolve, reject, file! );\n\t\t\t\tthis._sendRequest( file! );\n\t\t\t} );\n\t\t} );\n\t}\n\n\t/**\n\t * Aborts the upload process.\n\t *\n\t * @see module:upload/filerepository~UploadAdapter#abort\n\t */\n\tpublic abort() {\n\t\tif ( this.xhr ) {\n\t\t\tthis.xhr.abort();\n\t\t}\n\t}\n\n\t/**\n\t * Initializes the XMLHttpRequest object.\n\t */\n\tprivate _initRequest() {\n\t\tconst xhr = this.xhr = new XMLHttpRequest();\n\n\t\txhr.open( 'POST', this.url, true );\n\t\txhr.responseType = 'json';\n\t}\n\n\t/**\n\t * Initializes XMLHttpRequest listeners.\n\t *\n\t * @param resolve Callback function to be called when the request is successful.\n\t * @param reject Callback function to be called when the request cannot be completed.\n\t * @param file File instance to be uploaded.\n\t */\n\tprivate _initListeners(\n\t\tresolve: ( value: UploadResponse ) => void,\n\t\treject: ( reason?: unknown ) => void,\n\t\tfile: File\n\t) {\n\t\tconst xhr = this.xhr!;\n\t\tconst loader = this.loader;\n\t\tconst t = this.t;\n\t\tconst genericError = t( 'Cannot upload file:' ) + ` ${ file.name }.`;\n\n\t\txhr.addEventListener( 'error', () => reject( genericError ) );\n\t\txhr.addEventListener( 'abort', () => reject() );\n\t\txhr.addEventListener( 'load', () => {\n\t\t\tconst response = xhr.response;\n\n\t\t\tif ( !response || !response.uploaded ) {\n\t\t\t\treturn reject( response && response.error && response.error.message ? response.error.message : genericError );\n\t\t\t}\n\n\t\t\tresolve( {\n\t\t\t\tdefault: response.url\n\t\t\t} );\n\t\t} );\n\n\t\t// Upload progress when it's supported.\n\t\t/* istanbul ignore else -- @preserve */\n\t\tif ( xhr.upload ) {\n\t\t\txhr.upload.addEventListener( 'progress', evt => {\n\t\t\t\tif ( evt.lengthComputable ) {\n\t\t\t\t\tloader.uploadTotal = evt.total;\n\t\t\t\t\tloader.uploaded = evt.loaded;\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Prepares the data and sends the request.\n\t *\n\t * @param file File instance to be uploaded.\n\t */\n\tprivate _sendRequest( file: File ) {\n\t\t// Prepare form data.\n\t\tconst data = new FormData();\n\t\tdata.append( 'upload', file );\n\t\tdata.append( 'ckCsrfToken', getCsrfToken() );\n\n\t\t// Send request.\n\t\tthis.xhr!.send( data );\n\t}\n}\n"]}