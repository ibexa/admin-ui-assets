{"version":3,"sources":["index.js","../src/converters.ts","../src/utils.ts","../src/mediaembedcommand.ts","../src/mediaregistry.ts","../src/mediaembedediting.ts","../src/automediaembed.ts","../src/ui/mediaformview.ts","../src/mediaembedui.ts","../src/mediaembed.ts","../src/mediaembedtoolbar.ts"],"names":["modelToViewUrlAttributeConverter","registry","options","converter","evt","data","conversionApi","consumable","consume","item","name","url","attributeNewValue","viewWriter","writer","figure","mapper","toViewElement","mediaContentElement","getChildren","find","child","getCustomProperty","remove","mediaViewElement","getMediaViewElement","insert","createPositionAt","dispatcher","on","toMediaWidget","viewElement","label","setCustomProperty","toWidget","getSelectedMediaViewWidget","selection","getSelectedElement","isMediaWidget","isWidget","createMediaFigureElement","createContainerElement","class","createSlot","getSelectedMediaModelWidget","selectedElement","is","insertMedia","model","selectable","findOptimalPosition","change","mediaElement","createElement","insertObject","setSelection","undefined","MediaEmbedCommand","Command","refresh","editor","document","selectedMedia","value","getAttribute","isEnabled","isMediaSelected","isAllowedInParent","execute","setAttribute","insertionRange","findOptimalInsertionRange","parent","start","isEmpty","schema","isLimit","checkChild","element","mediaPlaceholderIconViewBox","MediaRegistry","locale","providerDefinitions","config","providers","extraProviders","removedProviders","Set","removeProviders","concat","filter","provider","logWarning","has","hasMedia","_getMedia","getViewElement","Media","trim","definition","previewRenderer","html","pattern","toArray","subPattern","match","_getUrlMatches","rawUrl","replace","_locale","_match","_previewRenderer","_getValidUrl","attributes","renderForEditingView","renderMediaPreview","mediaHtml","_getPreviewHtml","createRawElement","domElement","domConverter","setContentOf","createEmptyElement","elementName","_getPlaceholderHtml","icon","IconView","t","content","IconMediaPlaceholder","viewBox","placeholder","Template","tag","children","target","rel","href","render","outerHTML","MediaEmbedEditing","Plugin","pluginName","isOfficialPlugin","define","id","time","get","init","conversion","commands","add","register","inheritAllFrom","allowAttributes","for","elementToStructure","view","modelElement","elementToElement","includes","viewMedia","viewItem","classes","modelRange","modelCursor","convertChildren","first","getItems","revert","URL_REGEXP","AutoMediaEmbed","requires","Clipboard","Delete","Undo","_timeoutId","_positionToInsert","modelDocument","clipboardPipeline","plugins","listenTo","firstRange","getFirstRange","leftLivePosition","LivePosition","fromPosition","stickiness","rightLivePosition","end","once","_embedMediaBetweenPositions","detach","priority","undoCommand","global","window","clearTimeout","leftPosition","rightPosition","mediaRegistry","urlRange","LiveRange","walker","getWalker","ignoreElementEnd","node","mediaEmbedCommand","setTimeout","insertionPosition","root","rootName","requestUndoOnBackspace","MediaFormView","View","focusTracker","keystrokes","urlInputView","_validators","_urlInputViewInfoDefault","_urlInputViewInfoTip","validators","FocusTracker","KeystrokeHandler","set","_createUrlInput","setTemplate","tabindex","submitHandler","destroy","focus","fieldView","isValid","resetFormStatus","validator","errorText","infoText","labeledInput","LabeledFieldView","createLabeledInputText","inputField","inputMode","mediaURLInputValue","MediaEmbedUI","Dialog","_formView","ui","componentFactory","button","_createDialogButton","ButtonView","tooltip","MenuBarMenuListItemButtonView","ButtonClass","buttonView","command","dialogPlugin","IconMedia","bind","to","hide","_showDialog","dialog","CssTransitionDisablerMixin","getFormValidators","_handleSubmitForm","show","title","isModal","onShow","select","actionButtons","withText","onExecute","editing","form","length","MediaEmbed","Widget","MediaEmbedToolbar","WidgetToolbarRepository","afterInit","widgetToolbarRepository","ariaLabel","items","getRelatedElement"],"mappings":"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,CAAA,CAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,GAAA,CAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,GAAA,CAAA,CAAA,QAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,GAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,GAAA,CAAA,CAAA,QAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,CAAA,KAAA,CAAA,CAAA,GAAA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","file":"index.js.map","sourcesContent":["import { Command, Plugin } from '@ckeditor/ckeditor5-core/dist/index.js';\nimport { toWidget, isWidget, findOptimalInsertionRange, Widget, WidgetToolbarRepository } from '@ckeditor/ckeditor5-widget/dist/index.js';\nimport { logWarning, toArray, first, global, FocusTracker, KeystrokeHandler } from '@ckeditor/ckeditor5-utils/dist/index.js';\nimport { IconView, Template, View, submitHandler, LabeledFieldView, createLabeledInputText, Dialog, ButtonView, MenuBarMenuListItemButtonView, CssTransitionDisablerMixin } from '@ckeditor/ckeditor5-ui/dist/index.js';\nimport { IconMediaPlaceholder, IconMedia } from '@ckeditor/ckeditor5-icons/dist/index.js';\nimport { LivePosition, LiveRange } from '@ckeditor/ckeditor5-engine/dist/index.js';\nimport { Clipboard } from '@ckeditor/ckeditor5-clipboard/dist/index.js';\nimport { Delete } from '@ckeditor/ckeditor5-typing/dist/index.js';\nimport { Undo } from '@ckeditor/ckeditor5-undo/dist/index.js';\n\n/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */ /**\n * @module media-embed/converters\n */ /**\n * Returns a function that converts the model \"url\" attribute to the view representation.\n *\n * Depending on the configuration, the view representation can be \"semantic\" (for the data pipeline):\n *\n * ```html\n * <figure class=\"media\">\n * \t<oembed url=\"foo\"></oembed>\n * </figure>\n * ```\n *\n * or \"non-semantic\" (for the editing view pipeline):\n *\n * ```html\n * <figure class=\"media\">\n * \t<div data-oembed-url=\"foo\">[ non-semantic media preview for \"foo\" ]</div>\n * </figure>\n * ```\n *\n * **Note:** Changing the model \"url\" attribute replaces the entire content of the\n * `<figure>` in the view.\n *\n * @param registry The registry providing\n * the media and their content.\n * @param options options object with following properties:\n * - elementName When set, overrides the default element name for semantic media embeds.\n * - renderMediaPreview When `true`, the converter will create the view in the non-semantic form.\n * - renderForEditingView When `true`, the converter will create a view specific for the\n * editing pipeline (e.g. including CSS classes, content placeholders).\n */ function modelToViewUrlAttributeConverter(registry, options) {\n    const converter = (evt, data, conversionApi)=>{\n        if (!conversionApi.consumable.consume(data.item, evt.name)) {\n            return;\n        }\n        const url = data.attributeNewValue;\n        const viewWriter = conversionApi.writer;\n        const figure = conversionApi.mapper.toViewElement(data.item);\n        const mediaContentElement = [\n            ...figure.getChildren()\n        ].find((child)=>child.getCustomProperty('media-content'));\n        // TODO: removing the wrapper and creating it from scratch is a hack. We can do better than that.\n        viewWriter.remove(mediaContentElement);\n        const mediaViewElement = registry.getMediaViewElement(viewWriter, url, options);\n        viewWriter.insert(viewWriter.createPositionAt(figure, 0), mediaViewElement);\n    };\n    return (dispatcher)=>{\n        dispatcher.on('attribute:url:media', converter);\n    };\n}\n\n/**\n * Converts a given {@link module:engine/view/element~Element} to a media embed widget:\n * * Adds a {@link module:engine/view/element~Element#_setCustomProperty custom property} allowing to recognize the media widget element.\n * * Calls the {@link module:widget/utils~toWidget} function with the proper element's label creator.\n *\n * @param writer An instance of the view writer.\n * @param label The element's label.\n */ function toMediaWidget(viewElement, writer, label) {\n    writer.setCustomProperty('media', true, viewElement);\n    return toWidget(viewElement, writer, {\n        label\n    });\n}\n/**\n * Returns a media widget editing view element if one is selected.\n */ function getSelectedMediaViewWidget(selection) {\n    const viewElement = selection.getSelectedElement();\n    if (viewElement && isMediaWidget(viewElement)) {\n        return viewElement;\n    }\n    return null;\n}\n/**\n * Checks if a given view element is a media widget.\n */ function isMediaWidget(viewElement) {\n    return !!viewElement.getCustomProperty('media') && isWidget(viewElement);\n}\n/**\n * Creates a view element representing the media. Either a \"semantic\" one for the data pipeline:\n *\n * ```html\n * <figure class=\"media\">\n * \t<oembed url=\"foo\"></oembed>\n * </figure>\n * ```\n *\n * or a \"non-semantic\" (for the editing view pipeline):\n *\n * ```html\n * <figure class=\"media\">\n * \t<div data-oembed-url=\"foo\">[ non-semantic media preview for \"foo\" ]</div>\n * </figure>\n * ```\n */ function createMediaFigureElement(writer, registry, url, options) {\n    return writer.createContainerElement('figure', {\n        class: 'media'\n    }, [\n        registry.getMediaViewElement(writer, url, options),\n        writer.createSlot()\n    ]);\n}\n/**\n * Returns a selected media element in the model, if any.\n */ function getSelectedMediaModelWidget(selection) {\n    const selectedElement = selection.getSelectedElement();\n    if (selectedElement && selectedElement.is('element', 'media')) {\n        return selectedElement;\n    }\n    return null;\n}\n/**\n * Creates a media element and inserts it into the model.\n *\n * **Note**: This method will use {@link module:engine/model/model~Model#insertContent `model.insertContent()`} logic of inserting content\n * if no `insertPosition` is passed.\n *\n * @param url An URL of an embeddable media.\n * @param findOptimalPosition If true it will try to find optimal position to insert media without breaking content\n * in which a selection is.\n */ function insertMedia(model, url, selectable, findOptimalPosition) {\n    model.change((writer)=>{\n        const mediaElement = writer.createElement('media', {\n            url\n        });\n        model.insertObject(mediaElement, selectable, null, {\n            setSelection: 'on',\n            findOptimalPosition: findOptimalPosition ? 'auto' : undefined\n        });\n    });\n}\n\n/**\n * The insert media command.\n *\n * The command is registered by the {@link module:media-embed/mediaembedediting~MediaEmbedEditing} as `'mediaEmbed'`.\n *\n * To insert media at the current selection, execute the command and specify the URL:\n *\n * ```ts\n * editor.execute( 'mediaEmbed', 'http://url.to.the/media' );\n * ```\n */ class MediaEmbedCommand extends Command {\n    /**\n\t * @inheritDoc\n\t */ refresh() {\n        const model = this.editor.model;\n        const selection = model.document.selection;\n        const selectedMedia = getSelectedMediaModelWidget(selection);\n        this.value = selectedMedia ? selectedMedia.getAttribute('url') : undefined;\n        this.isEnabled = isMediaSelected(selection) || isAllowedInParent(selection, model);\n    }\n    /**\n\t * Executes the command, which either:\n\t *\n\t * * updates the URL of the selected media,\n\t * * inserts the new media into the editor and puts the selection around it.\n\t *\n\t * @fires execute\n\t * @param url The URL of the media.\n\t */ execute(url) {\n        const model = this.editor.model;\n        const selection = model.document.selection;\n        const selectedMedia = getSelectedMediaModelWidget(selection);\n        if (selectedMedia) {\n            model.change((writer)=>{\n                writer.setAttribute('url', url, selectedMedia);\n            });\n        } else {\n            insertMedia(model, url, selection, true);\n        }\n    }\n}\n/**\n * Checks if the media embed is allowed in the parent.\n */ function isAllowedInParent(selection, model) {\n    const insertionRange = findOptimalInsertionRange(selection, model);\n    let parent = insertionRange.start.parent;\n    // The model.insertContent() will remove empty parent (unless it is a $root or a limit).\n    if (parent.isEmpty && !model.schema.isLimit(parent)) {\n        parent = parent.parent;\n    }\n    return model.schema.checkChild(parent, 'media');\n}\n/**\n * Checks if the media object is selected.\n */ function isMediaSelected(selection) {\n    const element = selection.getSelectedElement();\n    return !!element && element.name === 'media';\n}\n\nconst mediaPlaceholderIconViewBox = '0 0 64 42';\n/**\n * A bridge between the raw media content provider definitions and the editor view content.\n *\n * It helps translating media URLs to corresponding {@link module:engine/view/element~Element view elements}.\n *\n * Mostly used by the {@link module:media-embed/mediaembedediting~MediaEmbedEditing} plugin.\n */ class MediaRegistry {\n    /**\n\t * The {@link module:utils/locale~Locale} instance.\n\t */ locale;\n    /**\n\t * The media provider definitions available for the registry. Usually corresponding with the\n\t * {@link module:media-embed/mediaembedconfig~MediaEmbedConfig media configuration}.\n\t */ providerDefinitions;\n    /**\n\t * Creates an instance of the {@link module:media-embed/mediaregistry~MediaRegistry} class.\n\t *\n\t * @param locale The localization services instance.\n\t * @param config The configuration of the media embed feature.\n\t */ constructor(locale, config){\n        const providers = config.providers;\n        const extraProviders = config.extraProviders || [];\n        const removedProviders = new Set(config.removeProviders);\n        const providerDefinitions = providers.concat(extraProviders).filter((provider)=>{\n            const name = provider.name;\n            if (!name) {\n                /**\n\t\t\t\t\t * One of the providers (or extra providers) specified in the media embed configuration\n\t\t\t\t\t * has no name and will not be used by the editor. In order to get this media\n\t\t\t\t\t * provider working, double check your editor configuration.\n\t\t\t\t\t *\n\t\t\t\t\t * @error media-embed-no-provider-name\n\t\t\t\t\t */ logWarning('media-embed-no-provider-name', {\n                    provider\n                });\n                return false;\n            }\n            return !removedProviders.has(name);\n        });\n        this.locale = locale;\n        this.providerDefinitions = providerDefinitions;\n    }\n    /**\n\t * Checks whether the passed URL is representing a certain media type allowed in the editor.\n\t *\n\t * @param url The URL to be checked\n\t */ hasMedia(url) {\n        return !!this._getMedia(url);\n    }\n    /**\n\t * For the given media URL string and options, it returns the {@link module:engine/view/element~Element view element}\n\t * representing that media.\n\t *\n\t * **Note:** If no URL is specified, an empty view element is returned.\n\t *\n\t * @param writer The view writer used to produce a view element.\n\t * @param url The URL to be translated into a view element.\n\t */ getMediaViewElement(writer, url, options) {\n        return this._getMedia(url).getViewElement(writer, options);\n    }\n    /**\n\t * Returns a `Media` instance for the given URL.\n\t *\n\t * @param url The URL of the media.\n\t * @returns The `Media` instance or `null` when there is none.\n\t */ _getMedia(url) {\n        if (!url) {\n            return new Media(this.locale);\n        }\n        url = url.trim();\n        for (const definition of this.providerDefinitions){\n            const previewRenderer = definition.html;\n            const pattern = toArray(definition.url);\n            for (const subPattern of pattern){\n                const match = this._getUrlMatches(url, subPattern);\n                if (match) {\n                    return new Media(this.locale, url, match, previewRenderer);\n                }\n            }\n        }\n        return null;\n    }\n    /**\n\t * Tries to match `url` to `pattern`.\n\t *\n\t * @param url The URL of the media.\n\t * @param pattern The pattern that should accept the media URL.\n\t */ _getUrlMatches(url, pattern) {\n        // 1. Try to match without stripping the protocol and \"www\" subdomain.\n        let match = url.match(pattern);\n        if (match) {\n            return match;\n        }\n        // 2. Try to match after stripping the protocol.\n        let rawUrl = url.replace(/^https?:\\/\\//, '');\n        match = rawUrl.match(pattern);\n        if (match) {\n            return match;\n        }\n        // 3. Try to match after stripping the \"www\" subdomain.\n        rawUrl = rawUrl.replace(/^www\\./, '');\n        match = rawUrl.match(pattern);\n        if (match) {\n            return match;\n        }\n        return null;\n    }\n}\n/**\n * Represents media defined by the provider configuration.\n *\n * It can be rendered to the {@link module:engine/view/element~Element view element} and used in the editing or data pipeline.\n */ class Media {\n    /**\n\t * The URL this Media instance represents.\n\t */ url;\n    /**\n\t * Shorthand for {@link module:utils/locale~Locale#t}.\n\t *\n\t * @see module:utils/locale~Locale#t\n\t */ _locale;\n    /**\n\t * The output of the `RegExp.match` which validated the {@link #url} of this media.\n\t */ _match;\n    /**\n\t * The function returning the HTML string preview of this media.\n\t */ _previewRenderer;\n    constructor(locale, url, match, previewRenderer){\n        this.url = this._getValidUrl(url);\n        this._locale = locale;\n        this._match = match;\n        this._previewRenderer = previewRenderer;\n    }\n    /**\n\t * Returns the view element representation of the media.\n\t *\n\t * @param writer The view writer used to produce a view element.\n\t */ getViewElement(writer, options) {\n        const attributes = {};\n        let viewElement;\n        if (options.renderForEditingView || options.renderMediaPreview && this.url && this._previewRenderer) {\n            if (this.url) {\n                attributes['data-oembed-url'] = this.url;\n            }\n            if (options.renderForEditingView) {\n                attributes.class = 'ck-media__wrapper';\n            }\n            const mediaHtml = this._getPreviewHtml(options);\n            viewElement = writer.createRawElement('div', attributes, (domElement, domConverter)=>{\n                domConverter.setContentOf(domElement, mediaHtml);\n            });\n        } else {\n            if (this.url) {\n                attributes.url = this.url;\n            }\n            viewElement = writer.createEmptyElement(options.elementName, attributes);\n        }\n        writer.setCustomProperty('media-content', true, viewElement);\n        return viewElement;\n    }\n    /**\n\t * Returns the HTML string of the media content preview.\n\t */ _getPreviewHtml(options) {\n        if (this._previewRenderer) {\n            return this._previewRenderer(this._match);\n        } else {\n            // The placeholder only makes sense for editing view and media which have URLs.\n            // Placeholder is never displayed in data and URL-less media have no content.\n            if (this.url && options.renderForEditingView) {\n                return this._getPlaceholderHtml();\n            }\n            return '';\n        }\n    }\n    /**\n\t * Returns the placeholder HTML when the media has no content preview.\n\t */ _getPlaceholderHtml() {\n        const icon = new IconView();\n        const t = this._locale.t;\n        icon.content = IconMediaPlaceholder;\n        icon.viewBox = mediaPlaceholderIconViewBox;\n        const placeholder = new Template({\n            tag: 'div',\n            attributes: {\n                class: 'ck ck-reset_all ck-media__placeholder'\n            },\n            children: [\n                {\n                    tag: 'div',\n                    attributes: {\n                        class: 'ck-media__placeholder__icon'\n                    },\n                    children: [\n                        icon\n                    ]\n                },\n                {\n                    tag: 'a',\n                    attributes: {\n                        class: 'ck-media__placeholder__url',\n                        target: '_blank',\n                        rel: 'noopener noreferrer',\n                        href: this.url,\n                        'data-cke-tooltip-text': t('Open media in new tab')\n                    },\n                    children: [\n                        {\n                            tag: 'span',\n                            attributes: {\n                                class: 'ck-media__placeholder__url__text'\n                            },\n                            children: [\n                                this.url\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }).render();\n        return placeholder.outerHTML;\n    }\n    /**\n\t * Returns the full URL to the specified media.\n\t *\n\t * @param url The URL of the media.\n\t */ _getValidUrl(url) {\n        if (!url) {\n            return null;\n        }\n        if (url.match(/^https?/)) {\n            return url;\n        }\n        return 'https://' + url;\n    }\n}\n\n/**\n * The media embed editing feature.\n */ class MediaEmbedEditing extends Plugin {\n    /**\n\t * @inheritDoc\n\t */ static get pluginName() {\n        return 'MediaEmbedEditing';\n    }\n    /**\n\t * @inheritDoc\n\t */ static get isOfficialPlugin() {\n        return true;\n    }\n    /**\n\t * The media registry managing the media providers in the editor.\n\t */ registry;\n    /**\n\t * @inheritDoc\n\t */ constructor(editor){\n        super(editor);\n        editor.config.define('mediaEmbed', {\n            elementName: 'oembed',\n            providers: [\n                {\n                    name: 'dailymotion',\n                    url: [\n                        /^dailymotion\\.com\\/video\\/(\\w+)/,\n                        /^dai.ly\\/(\\w+)/\n                    ],\n                    html: (match)=>{\n                        const id = match[1];\n                        return '<div style=\"position: relative; padding-bottom: 100%; height: 0; \">' + `<iframe src=\"https://www.dailymotion.com/embed/video/${id}\" ` + 'style=\"position: absolute; width: 100%; height: 100%; top: 0; left: 0;\" ' + 'frameborder=\"0\" width=\"480\" height=\"270\" allowfullscreen allow=\"autoplay\">' + '</iframe>' + '</div>';\n                    }\n                },\n                {\n                    name: 'spotify',\n                    url: [\n                        /^open\\.spotify\\.com\\/(artist\\/\\w+)/,\n                        /^open\\.spotify\\.com\\/(album\\/\\w+)/,\n                        /^open\\.spotify\\.com\\/(track\\/\\w+)/\n                    ],\n                    html: (match)=>{\n                        const id = match[1];\n                        return '<div style=\"position: relative; padding-bottom: 100%; height: 0; padding-bottom: 126%;\">' + `<iframe src=\"https://open.spotify.com/embed/${id}\" ` + 'style=\"position: absolute; width: 100%; height: 100%; top: 0; left: 0;\" ' + 'frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\">' + '</iframe>' + '</div>';\n                    }\n                },\n                {\n                    name: 'youtube',\n                    url: [\n                        /^(?:m\\.)?youtube\\.com\\/watch\\?v=([\\w-]+)(?:&t=(\\d+))?/,\n                        /^(?:m\\.)?youtube\\.com\\/shorts\\/([\\w-]+)(?:\\?t=(\\d+))?/,\n                        /^(?:m\\.)?youtube\\.com\\/v\\/([\\w-]+)(?:\\?t=(\\d+))?/,\n                        /^youtube\\.com\\/embed\\/([\\w-]+)(?:\\?start=(\\d+))?/,\n                        /^youtu\\.be\\/([\\w-]+)(?:\\?t=(\\d+))?/\n                    ],\n                    html: (match)=>{\n                        const id = match[1];\n                        const time = match[2];\n                        return '<div style=\"position: relative; padding-bottom: 100%; height: 0; padding-bottom: 56.2493%;\">' + `<iframe src=\"https://www.youtube.com/embed/${id}${time ? `?start=${time}` : ''}\" ` + 'style=\"position: absolute; width: 100%; height: 100%; top: 0; left: 0;\" ' + 'frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen>' + '</iframe>' + '</div>';\n                    }\n                },\n                {\n                    name: 'vimeo',\n                    url: [\n                        /^vimeo\\.com\\/(\\d+)/,\n                        /^vimeo\\.com\\/[^/]+\\/[^/]+\\/video\\/(\\d+)/,\n                        /^vimeo\\.com\\/album\\/[^/]+\\/video\\/(\\d+)/,\n                        /^vimeo\\.com\\/channels\\/[^/]+\\/(\\d+)/,\n                        /^vimeo\\.com\\/groups\\/[^/]+\\/videos\\/(\\d+)/,\n                        /^vimeo\\.com\\/ondemand\\/[^/]+\\/(\\d+)/,\n                        /^player\\.vimeo\\.com\\/video\\/(\\d+)/\n                    ],\n                    html: (match)=>{\n                        const id = match[1];\n                        return '<div style=\"position: relative; padding-bottom: 100%; height: 0; padding-bottom: 56.2493%;\">' + `<iframe src=\"https://player.vimeo.com/video/${id}\" ` + 'style=\"position: absolute; width: 100%; height: 100%; top: 0; left: 0;\" ' + 'frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen>' + '</iframe>' + '</div>';\n                    }\n                },\n                {\n                    name: 'instagram',\n                    url: [\n                        /^instagram\\.com\\/p\\/(\\w+)/,\n                        /^instagram\\.com\\/reel\\/(\\w+)/\n                    ]\n                },\n                {\n                    name: 'twitter',\n                    url: [\n                        /^twitter\\.com/,\n                        /^x\\.com/\n                    ]\n                },\n                {\n                    name: 'googleMaps',\n                    url: [\n                        /^google\\.com\\/maps/,\n                        /^goo\\.gl\\/maps/,\n                        /^maps\\.google\\.com/,\n                        /^maps\\.app\\.goo\\.gl/\n                    ]\n                },\n                {\n                    name: 'flickr',\n                    url: /^flickr\\.com/\n                },\n                {\n                    name: 'facebook',\n                    url: /^facebook\\.com/\n                }\n            ]\n        });\n        this.registry = new MediaRegistry(editor.locale, editor.config.get('mediaEmbed'));\n    }\n    /**\n\t * @inheritDoc\n\t */ init() {\n        const editor = this.editor;\n        const schema = editor.model.schema;\n        const t = editor.t;\n        const conversion = editor.conversion;\n        const renderMediaPreview = editor.config.get('mediaEmbed.previewsInData');\n        const elementName = editor.config.get('mediaEmbed.elementName');\n        const registry = this.registry;\n        editor.commands.add('mediaEmbed', new MediaEmbedCommand(editor));\n        // Configure the schema.\n        schema.register('media', {\n            inheritAllFrom: '$blockObject',\n            allowAttributes: [\n                'url'\n            ]\n        });\n        // Model -> Data\n        conversion.for('dataDowncast').elementToStructure({\n            model: 'media',\n            view: (modelElement, { writer })=>{\n                const url = modelElement.getAttribute('url');\n                return createMediaFigureElement(writer, registry, url, {\n                    elementName,\n                    renderMediaPreview: !!url && renderMediaPreview\n                });\n            }\n        });\n        // Model -> Data (url -> data-oembed-url)\n        conversion.for('dataDowncast').add(modelToViewUrlAttributeConverter(registry, {\n            elementName,\n            renderMediaPreview\n        }));\n        // Model -> View (element)\n        conversion.for('editingDowncast').elementToStructure({\n            model: 'media',\n            view: (modelElement, { writer })=>{\n                const url = modelElement.getAttribute('url');\n                const figure = createMediaFigureElement(writer, registry, url, {\n                    elementName,\n                    renderForEditingView: true\n                });\n                return toMediaWidget(figure, writer, t('media widget'));\n            }\n        });\n        // Model -> View (url -> data-oembed-url)\n        conversion.for('editingDowncast').add(modelToViewUrlAttributeConverter(registry, {\n            elementName,\n            renderForEditingView: true\n        }));\n        // View -> Model (data-oembed-url -> url)\n        conversion.for('upcast')// Upcast semantic media.\n        .elementToElement({\n            view: (element)=>[\n                    'oembed',\n                    elementName\n                ].includes(element.name) && element.getAttribute('url') ? {\n                    name: true\n                } : null,\n            model: (viewMedia, { writer })=>{\n                const url = viewMedia.getAttribute('url');\n                if (registry.hasMedia(url)) {\n                    return writer.createElement('media', {\n                        url\n                    });\n                }\n                return null;\n            }\n        })// Upcast non-semantic media.\n        .elementToElement({\n            view: {\n                name: 'div',\n                attributes: {\n                    'data-oembed-url': true\n                }\n            },\n            model: (viewMedia, { writer })=>{\n                const url = viewMedia.getAttribute('data-oembed-url');\n                if (registry.hasMedia(url)) {\n                    return writer.createElement('media', {\n                        url\n                    });\n                }\n                return null;\n            }\n        })// Consume `<figure class=\"media\">` elements, that were left after upcast.\n        .add((dispatcher)=>{\n            const converter = (evt, data, conversionApi)=>{\n                if (!conversionApi.consumable.consume(data.viewItem, {\n                    name: true,\n                    classes: 'media'\n                })) {\n                    return;\n                }\n                const { modelRange, modelCursor } = conversionApi.convertChildren(data.viewItem, data.modelCursor);\n                data.modelRange = modelRange;\n                data.modelCursor = modelCursor;\n                const modelElement = first(modelRange.getItems());\n                if (!modelElement) {\n                    // Revert consumed figure so other features can convert it.\n                    conversionApi.consumable.revert(data.viewItem, {\n                        name: true,\n                        classes: 'media'\n                    });\n                }\n            };\n            dispatcher.on('element:figure', converter);\n        });\n    }\n}\n\nconst URL_REGEXP = /^(?:http(s)?:\\/\\/)?[\\w-]+\\.[\\w-.~:/?#[\\]@!$&'()*+,;=%]+$/;\n/**\n * The auto-media embed plugin. It recognizes media links in the pasted content and embeds\n * them shortly after they are injected into the document.\n */ class AutoMediaEmbed extends Plugin {\n    /**\n\t * @inheritDoc\n\t */ static get requires() {\n        return [\n            Clipboard,\n            Delete,\n            Undo\n        ];\n    }\n    /**\n\t * @inheritDoc\n\t */ static get pluginName() {\n        return 'AutoMediaEmbed';\n    }\n    /**\n\t * @inheritDoc\n\t */ static get isOfficialPlugin() {\n        return true;\n    }\n    /**\n\t * The paste–to–embed `setTimeout` ID. Stored as a property to allow\n\t * cleaning of the timeout.\n\t */ _timeoutId;\n    /**\n\t * The position where the `<media>` element will be inserted after the timeout,\n\t * determined each time the new content is pasted into the document.\n\t */ _positionToInsert;\n    /**\n\t * @inheritDoc\n\t */ constructor(editor){\n        super(editor);\n        this._timeoutId = null;\n        this._positionToInsert = null;\n    }\n    /**\n\t * @inheritDoc\n\t */ init() {\n        const editor = this.editor;\n        const modelDocument = editor.model.document;\n        // We need to listen on `Clipboard#inputTransformation` because we need to save positions of selection.\n        // After pasting, the content between those positions will be checked for a URL that could be transformed\n        // into media.\n        const clipboardPipeline = editor.plugins.get('ClipboardPipeline');\n        this.listenTo(clipboardPipeline, 'inputTransformation', ()=>{\n            const firstRange = modelDocument.selection.getFirstRange();\n            const leftLivePosition = LivePosition.fromPosition(firstRange.start);\n            leftLivePosition.stickiness = 'toPrevious';\n            const rightLivePosition = LivePosition.fromPosition(firstRange.end);\n            rightLivePosition.stickiness = 'toNext';\n            modelDocument.once('change:data', ()=>{\n                this._embedMediaBetweenPositions(leftLivePosition, rightLivePosition);\n                leftLivePosition.detach();\n                rightLivePosition.detach();\n            }, {\n                priority: 'high'\n            });\n        });\n        const undoCommand = editor.commands.get('undo');\n        undoCommand.on('execute', ()=>{\n            if (this._timeoutId) {\n                global.window.clearTimeout(this._timeoutId);\n                this._positionToInsert.detach();\n                this._timeoutId = null;\n                this._positionToInsert = null;\n            }\n        }, {\n            priority: 'high'\n        });\n    }\n    /**\n\t * Analyzes the part of the document between provided positions in search for a URL representing media.\n\t * When the URL is found, it is automatically converted into media.\n\t *\n\t * @param leftPosition Left position of the selection.\n\t * @param rightPosition Right position of the selection.\n\t */ _embedMediaBetweenPositions(leftPosition, rightPosition) {\n        const editor = this.editor;\n        const mediaRegistry = editor.plugins.get(MediaEmbedEditing).registry;\n        // TODO: Use marker instead of LiveRange & LivePositions.\n        const urlRange = new LiveRange(leftPosition, rightPosition);\n        const walker = urlRange.getWalker({\n            ignoreElementEnd: true\n        });\n        let url = '';\n        for (const node of walker){\n            if (node.item.is('$textProxy')) {\n                url += node.item.data;\n            }\n        }\n        url = url.trim();\n        // If the URL does not match to universal URL regexp, let's skip that.\n        if (!url.match(URL_REGEXP)) {\n            urlRange.detach();\n            return;\n        }\n        // If the URL represents a media, let's use it.\n        if (!mediaRegistry.hasMedia(url)) {\n            urlRange.detach();\n            return;\n        }\n        const mediaEmbedCommand = editor.commands.get('mediaEmbed');\n        // Do not anything if media element cannot be inserted at the current position (#47).\n        if (!mediaEmbedCommand.isEnabled) {\n            urlRange.detach();\n            return;\n        }\n        // Position won't be available in the `setTimeout` function so let's clone it.\n        this._positionToInsert = LivePosition.fromPosition(leftPosition);\n        // This action mustn't be executed if undo was called between pasting and auto-embedding.\n        this._timeoutId = global.window.setTimeout(()=>{\n            editor.model.change((writer)=>{\n                this._timeoutId = null;\n                writer.remove(urlRange);\n                urlRange.detach();\n                let insertionPosition = null;\n                // Check if position where the media element should be inserted is still valid.\n                // Otherwise leave it as undefined to use document.selection - default behavior of model.insertContent().\n                if (this._positionToInsert.root.rootName !== '$graveyard') {\n                    insertionPosition = this._positionToInsert;\n                }\n                insertMedia(editor.model, url, insertionPosition, false);\n                this._positionToInsert.detach();\n                this._positionToInsert = null;\n            });\n            editor.plugins.get(Delete).requestUndoOnBackspace();\n        }, 100);\n    }\n}\n\n/**\n * The media form view controller class.\n *\n * See {@link module:media-embed/ui/mediaformview~MediaFormView}.\n */ class MediaFormView extends View {\n    /**\n\t * Tracks information about the DOM focus in the form.\n\t */ focusTracker;\n    /**\n\t * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t */ keystrokes;\n    /**\n\t * The URL input view.\n\t */ urlInputView;\n    /**\n\t * An array of form validators used by {@link #isValid}.\n\t */ _validators;\n    /**\n\t * The default info text for the {@link #urlInputView}.\n\t */ _urlInputViewInfoDefault;\n    /**\n\t * The info text with an additional tip for the {@link #urlInputView},\n\t * displayed when the input has some value.\n\t */ _urlInputViewInfoTip;\n    /**\n\t * @param validators Form validators used by {@link #isValid}.\n\t * @param locale The localization services instance.\n\t */ constructor(validators, locale){\n        super(locale);\n        this.focusTracker = new FocusTracker();\n        this.keystrokes = new KeystrokeHandler();\n        this.set('mediaURLInputValue', '');\n        this.urlInputView = this._createUrlInput();\n        this._validators = validators;\n        this.setTemplate({\n            tag: 'form',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-media-form',\n                    'ck-responsive-form'\n                ],\n                tabindex: '-1'\n            },\n            children: [\n                this.urlInputView\n            ]\n        });\n    }\n    /**\n\t * @inheritDoc\n\t */ render() {\n        super.render();\n        submitHandler({\n            view: this\n        });\n        // Register the view in the focus tracker.\n        this.focusTracker.add(this.urlInputView.element);\n        // Start listening for the keystrokes coming from #element.\n        this.keystrokes.listenTo(this.element);\n    }\n    /**\n\t * @inheritDoc\n\t */ destroy() {\n        super.destroy();\n        this.focusTracker.destroy();\n        this.keystrokes.destroy();\n    }\n    /**\n\t * Focuses the {@link #urlInputView}.\n\t */ focus() {\n        this.urlInputView.focus();\n    }\n    /**\n\t * The native DOM `value` of the {@link #urlInputView} element.\n\t *\n\t * **Note**: Do not confuse it with the {@link module:ui/inputtext/inputtextview~InputTextView#value}\n\t * which works one way only and may not represent the actual state of the component in the DOM.\n\t */ get url() {\n        return this.urlInputView.fieldView.element.value.trim();\n    }\n    set url(url) {\n        this.urlInputView.fieldView.value = url.trim();\n    }\n    /**\n\t * Validates the form and returns `false` when some fields are invalid.\n\t */ isValid() {\n        this.resetFormStatus();\n        for (const validator of this._validators){\n            const errorText = validator(this);\n            // One error per field is enough.\n            if (errorText) {\n                // Apply updated error.\n                this.urlInputView.errorText = errorText;\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n\t * Cleans up the supplementary error and information text of the {@link #urlInputView}\n\t * bringing them back to the state when the form has been displayed for the first time.\n\t *\n\t * See {@link #isValid}.\n\t */ resetFormStatus() {\n        this.urlInputView.errorText = null;\n        this.urlInputView.infoText = this._urlInputViewInfoDefault;\n    }\n    /**\n\t * Creates a labeled input view.\n\t *\n\t * @returns Labeled input view instance.\n\t */ _createUrlInput() {\n        const t = this.locale.t;\n        const labeledInput = new LabeledFieldView(this.locale, createLabeledInputText);\n        const inputField = labeledInput.fieldView;\n        this._urlInputViewInfoDefault = t('Paste the media URL in the input.');\n        this._urlInputViewInfoTip = t('Tip: Paste the URL into the content to embed faster.');\n        labeledInput.label = t('Media URL');\n        labeledInput.infoText = this._urlInputViewInfoDefault;\n        inputField.inputMode = 'url';\n        inputField.on('input', ()=>{\n            // Display the tip text only when there is some value. Otherwise fall back to the default info text.\n            labeledInput.infoText = inputField.element.value ? this._urlInputViewInfoTip : this._urlInputViewInfoDefault;\n            this.mediaURLInputValue = inputField.element.value.trim();\n        });\n        return labeledInput;\n    }\n}\n\n/**\n * The media embed UI plugin.\n */ class MediaEmbedUI extends Plugin {\n    /**\n\t * @inheritDoc\n\t */ static get requires() {\n        return [\n            MediaEmbedEditing,\n            Dialog\n        ];\n    }\n    /**\n\t * @inheritDoc\n\t */ static get pluginName() {\n        return 'MediaEmbedUI';\n    }\n    /**\n\t * @inheritDoc\n\t */ static get isOfficialPlugin() {\n        return true;\n    }\n    _formView;\n    /**\n\t * @inheritDoc\n\t */ init() {\n        const editor = this.editor;\n        editor.ui.componentFactory.add('mediaEmbed', ()=>{\n            const t = this.editor.locale.t;\n            const button = this._createDialogButton(ButtonView);\n            button.tooltip = true;\n            button.label = t('Insert media');\n            return button;\n        });\n        editor.ui.componentFactory.add('menuBar:mediaEmbed', ()=>{\n            const t = this.editor.locale.t;\n            const button = this._createDialogButton(MenuBarMenuListItemButtonView);\n            button.label = t('Media');\n            return button;\n        });\n    }\n    /**\n\t * Creates a button for menu bar that will show media embed dialog.\n\t */ _createDialogButton(ButtonClass) {\n        const editor = this.editor;\n        const buttonView = new ButtonClass(editor.locale);\n        const command = editor.commands.get('mediaEmbed');\n        const dialogPlugin = this.editor.plugins.get('Dialog');\n        buttonView.icon = IconMedia;\n        buttonView.bind('isEnabled').to(command, 'isEnabled');\n        buttonView.on('execute', ()=>{\n            if (dialogPlugin.id === 'mediaEmbed') {\n                dialogPlugin.hide();\n            } else {\n                this._showDialog();\n            }\n        });\n        return buttonView;\n    }\n    _showDialog() {\n        const editor = this.editor;\n        const dialog = editor.plugins.get('Dialog');\n        const command = editor.commands.get('mediaEmbed');\n        const t = editor.locale.t;\n        const isMediaSelected = command.value !== undefined;\n        if (!this._formView) {\n            const registry = editor.plugins.get(MediaEmbedEditing).registry;\n            this._formView = new (CssTransitionDisablerMixin(MediaFormView))(getFormValidators(editor.t, registry), editor.locale);\n            this._formView.on('submit', ()=>this._handleSubmitForm());\n        }\n        dialog.show({\n            id: 'mediaEmbed',\n            title: t('Media embed'),\n            content: this._formView,\n            isModal: true,\n            onShow: ()=>{\n                this._formView.url = command.value || '';\n                this._formView.resetFormStatus();\n                this._formView.urlInputView.fieldView.select();\n            },\n            actionButtons: [\n                {\n                    label: t('Cancel'),\n                    withText: true,\n                    onExecute: ()=>dialog.hide()\n                },\n                {\n                    label: isMediaSelected ? t('Save') : t('Insert'),\n                    class: 'ck-button-action',\n                    withText: true,\n                    onExecute: ()=>this._handleSubmitForm()\n                }\n            ]\n        });\n    }\n    _handleSubmitForm() {\n        const editor = this.editor;\n        const dialog = editor.plugins.get('Dialog');\n        if (this._formView.isValid()) {\n            editor.execute('mediaEmbed', this._formView.url);\n            dialog.hide();\n            editor.editing.view.focus();\n        }\n    }\n}\nfunction getFormValidators(t, registry) {\n    return [\n        (form)=>{\n            if (!form.url.length) {\n                return t('The URL must not be empty.');\n            }\n        },\n        (form)=>{\n            if (!registry.hasMedia(form.url)) {\n                return t('This media URL is not supported.');\n            }\n        }\n    ];\n}\n\n/**\n * The media embed plugin.\n *\n * For a detailed overview, check the {@glink features/media-embed Media Embed feature documentation}.\n *\n * This is a \"glue\" plugin which loads the following plugins:\n *\n * * The {@link module:media-embed/mediaembedediting~MediaEmbedEditing media embed editing feature},\n * * The {@link module:media-embed/mediaembedui~MediaEmbedUI media embed UI feature} and\n * * The {@link module:media-embed/automediaembed~AutoMediaEmbed auto-media embed feature}.\n */ class MediaEmbed extends Plugin {\n    /**\n\t * @inheritDoc\n\t */ static get requires() {\n        return [\n            MediaEmbedEditing,\n            MediaEmbedUI,\n            AutoMediaEmbed,\n            Widget\n        ];\n    }\n    /**\n\t * @inheritDoc\n\t */ static get pluginName() {\n        return 'MediaEmbed';\n    }\n    /**\n\t * @inheritDoc\n\t */ static get isOfficialPlugin() {\n        return true;\n    }\n}\n\n/**\n * The media embed toolbar plugin. It creates a toolbar for media embed that shows up when the media element is selected.\n *\n * Instances of toolbar components (e.g. buttons) are created based on the\n * {@link module:media-embed/mediaembedconfig~MediaEmbedConfig#toolbar `media.toolbar` configuration option}.\n */ class MediaEmbedToolbar extends Plugin {\n    /**\n\t * @inheritDoc\n\t */ static get requires() {\n        return [\n            WidgetToolbarRepository\n        ];\n    }\n    /**\n\t * @inheritDoc\n\t */ static get pluginName() {\n        return 'MediaEmbedToolbar';\n    }\n    /**\n\t * @inheritDoc\n\t */ static get isOfficialPlugin() {\n        return true;\n    }\n    /**\n\t * @inheritDoc\n\t */ afterInit() {\n        const editor = this.editor;\n        const t = editor.t;\n        const widgetToolbarRepository = editor.plugins.get(WidgetToolbarRepository);\n        widgetToolbarRepository.register('mediaEmbed', {\n            ariaLabel: t('Media toolbar'),\n            items: editor.config.get('mediaEmbed.toolbar') || [],\n            getRelatedElement: getSelectedMediaViewWidget\n        });\n    }\n}\n\nexport { AutoMediaEmbed, MediaEmbed, MediaEmbedEditing, MediaEmbedToolbar, MediaEmbedUI };\n//# sourceMappingURL=index.js.map\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module media-embed/converters\n */\n\nimport type { GetCallback } from 'ckeditor5/src/utils.js';\nimport type { DowncastAttributeEvent, DowncastDispatcher, Element, ViewElement } from 'ckeditor5/src/engine.js';\nimport type MediaRegistry from './mediaregistry.js';\nimport type { MediaOptions } from './utils.js';\n\n/**\n * Returns a function that converts the model \"url\" attribute to the view representation.\n *\n * Depending on the configuration, the view representation can be \"semantic\" (for the data pipeline):\n *\n * ```html\n * <figure class=\"media\">\n * \t<oembed url=\"foo\"></oembed>\n * </figure>\n * ```\n *\n * or \"non-semantic\" (for the editing view pipeline):\n *\n * ```html\n * <figure class=\"media\">\n * \t<div data-oembed-url=\"foo\">[ non-semantic media preview for \"foo\" ]</div>\n * </figure>\n * ```\n *\n * **Note:** Changing the model \"url\" attribute replaces the entire content of the\n * `<figure>` in the view.\n *\n * @param registry The registry providing\n * the media and their content.\n * @param options options object with following properties:\n * - elementName When set, overrides the default element name for semantic media embeds.\n * - renderMediaPreview When `true`, the converter will create the view in the non-semantic form.\n * - renderForEditingView When `true`, the converter will create a view specific for the\n * editing pipeline (e.g. including CSS classes, content placeholders).\n */\nexport function modelToViewUrlAttributeConverter(\n\tregistry: MediaRegistry,\n\toptions: MediaOptions\n): ( dispatcher: DowncastDispatcher ) => void {\n\tconst converter: GetCallback<DowncastAttributeEvent> = ( evt, data, conversionApi ) => {\n\t\tif ( !conversionApi.consumable.consume( data.item, evt.name ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst url = data.attributeNewValue as string;\n\t\tconst viewWriter = conversionApi.writer;\n\t\tconst figure = conversionApi.mapper.toViewElement( data.item as Element )!;\n\t\tconst mediaContentElement = [ ...figure.getChildren() ]\n\t\t\t.find( child => ( child as ViewElement ).getCustomProperty( 'media-content' ) )!;\n\n\t\t// TODO: removing the wrapper and creating it from scratch is a hack. We can do better than that.\n\t\tviewWriter.remove( mediaContentElement );\n\n\t\tconst mediaViewElement = registry.getMediaViewElement( viewWriter, url, options );\n\n\t\tviewWriter.insert( viewWriter.createPositionAt( figure, 0 ), mediaViewElement );\n\t};\n\n\treturn dispatcher => {\n\t\tdispatcher.on<DowncastAttributeEvent>( 'attribute:url:media', converter );\n\t};\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module media-embed/utils\n */\n\nimport type {\n\tViewContainerElement,\n\tElement,\n\tModel,\n\tSelectable,\n\tSelection,\n\tDowncastWriter,\n\tViewDocumentSelection,\n\tViewElement,\n\tDocumentSelection\n} from 'ckeditor5/src/engine.js';\nimport { isWidget, toWidget } from 'ckeditor5/src/widget.js';\nimport type MediaRegistry from './mediaregistry.js';\n\n/**\n * Converts a given {@link module:engine/view/element~Element} to a media embed widget:\n * * Adds a {@link module:engine/view/element~Element#_setCustomProperty custom property} allowing to recognize the media widget element.\n * * Calls the {@link module:widget/utils~toWidget} function with the proper element's label creator.\n *\n * @param writer An instance of the view writer.\n * @param label The element's label.\n */\nexport function toMediaWidget( viewElement: ViewElement, writer: DowncastWriter, label: string ): ViewElement {\n\twriter.setCustomProperty( 'media', true, viewElement );\n\n\treturn toWidget( viewElement, writer, { label } );\n}\n\n/**\n * Returns a media widget editing view element if one is selected.\n */\nexport function getSelectedMediaViewWidget( selection: ViewDocumentSelection ): ViewElement | null {\n\tconst viewElement = selection.getSelectedElement();\n\n\tif ( viewElement && isMediaWidget( viewElement ) ) {\n\t\treturn viewElement;\n\t}\n\n\treturn null;\n}\n\n/**\n * Checks if a given view element is a media widget.\n */\nexport function isMediaWidget( viewElement: ViewElement ): boolean {\n\treturn !!viewElement.getCustomProperty( 'media' ) && isWidget( viewElement );\n}\n\n/**\n * Creates a view element representing the media. Either a \"semantic\" one for the data pipeline:\n *\n * ```html\n * <figure class=\"media\">\n * \t<oembed url=\"foo\"></oembed>\n * </figure>\n * ```\n *\n * or a \"non-semantic\" (for the editing view pipeline):\n *\n * ```html\n * <figure class=\"media\">\n * \t<div data-oembed-url=\"foo\">[ non-semantic media preview for \"foo\" ]</div>\n * </figure>\n * ```\n */\nexport function createMediaFigureElement(\n\twriter: DowncastWriter,\n\tregistry: MediaRegistry,\n\turl: string,\n\toptions: MediaOptions\n): ViewContainerElement {\n\treturn writer.createContainerElement( 'figure', { class: 'media' }, [\n\t\tregistry.getMediaViewElement( writer, url, options ),\n\t\twriter.createSlot()\n\t] );\n}\n\n/**\n * Returns a selected media element in the model, if any.\n */\nexport function getSelectedMediaModelWidget( selection: Selection | DocumentSelection ): Element | null {\n\tconst selectedElement = selection.getSelectedElement();\n\n\tif ( selectedElement && selectedElement.is( 'element', 'media' ) ) {\n\t\treturn selectedElement;\n\t}\n\n\treturn null;\n}\n\n/**\n * Creates a media element and inserts it into the model.\n *\n * **Note**: This method will use {@link module:engine/model/model~Model#insertContent `model.insertContent()`} logic of inserting content\n * if no `insertPosition` is passed.\n *\n * @param url An URL of an embeddable media.\n * @param findOptimalPosition If true it will try to find optimal position to insert media without breaking content\n * in which a selection is.\n */\nexport function insertMedia( model: Model, url: string, selectable: Selectable, findOptimalPosition: boolean ): void {\n\tmodel.change( writer => {\n\t\tconst mediaElement = writer.createElement( 'media', { url } );\n\n\t\tmodel.insertObject( mediaElement, selectable, null, {\n\t\t\tsetSelection: 'on',\n\t\t\tfindOptimalPosition: findOptimalPosition ? 'auto' : undefined\n\t\t} );\n\t} );\n}\n\n/**\n * Type for commonly grouped function parameters across this package.\n */\nexport type MediaOptions = {\n\telementName: string;\n\trenderMediaPreview?: boolean;\n\trenderForEditingView?: boolean;\n};\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module media-embed/mediaembedcommand\n */\n\nimport type { DocumentSelection, Element, Model, Selection } from 'ckeditor5/src/engine.js';\nimport { Command } from 'ckeditor5/src/core.js';\nimport { findOptimalInsertionRange } from 'ckeditor5/src/widget.js';\n\nimport { getSelectedMediaModelWidget, insertMedia } from './utils.js';\n\n/**\n * The insert media command.\n *\n * The command is registered by the {@link module:media-embed/mediaembedediting~MediaEmbedEditing} as `'mediaEmbed'`.\n *\n * To insert media at the current selection, execute the command and specify the URL:\n *\n * ```ts\n * editor.execute( 'mediaEmbed', 'http://url.to.the/media' );\n * ```\n */\nexport default class MediaEmbedCommand extends Command {\n\t/**\n\t * Media url.\n\t */\n\tdeclare public value: string | undefined;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override refresh(): void {\n\t\tconst model = this.editor.model;\n\t\tconst selection = model.document.selection;\n\t\tconst selectedMedia = getSelectedMediaModelWidget( selection );\n\n\t\tthis.value = selectedMedia ? selectedMedia.getAttribute( 'url' ) as string : undefined;\n\n\t\tthis.isEnabled = isMediaSelected( selection ) || isAllowedInParent( selection, model );\n\t}\n\n\t/**\n\t * Executes the command, which either:\n\t *\n\t * * updates the URL of the selected media,\n\t * * inserts the new media into the editor and puts the selection around it.\n\t *\n\t * @fires execute\n\t * @param url The URL of the media.\n\t */\n\tpublic override execute( url: string ): void {\n\t\tconst model = this.editor.model;\n\t\tconst selection = model.document.selection;\n\t\tconst selectedMedia = getSelectedMediaModelWidget( selection );\n\n\t\tif ( selectedMedia ) {\n\t\t\tmodel.change( writer => {\n\t\t\t\twriter.setAttribute( 'url', url, selectedMedia );\n\t\t\t} );\n\t\t} else {\n\t\t\tinsertMedia( model, url, selection, true );\n\t\t}\n\t}\n}\n\n/**\n * Checks if the media embed is allowed in the parent.\n */\nfunction isAllowedInParent( selection: Selection | DocumentSelection, model: Model ): boolean {\n\tconst insertionRange = findOptimalInsertionRange( selection, model );\n\tlet parent = insertionRange.start.parent as Element;\n\n\t// The model.insertContent() will remove empty parent (unless it is a $root or a limit).\n\tif ( parent.isEmpty && !model.schema.isLimit( parent ) ) {\n\t\tparent = parent.parent as Element;\n\t}\n\n\treturn model.schema.checkChild( parent, 'media' );\n}\n\n/**\n * Checks if the media object is selected.\n */\nfunction isMediaSelected( selection: Selection | DocumentSelection ): boolean {\n\tconst element = selection.getSelectedElement();\n\treturn !!element && element.name === 'media';\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module media-embed/mediaregistry\n */\n\nimport { IconView, Template } from 'ckeditor5/src/ui.js';\nimport { IconMediaPlaceholder } from 'ckeditor5/src/icons.js';\nimport { logWarning, toArray, type Locale } from 'ckeditor5/src/utils.js';\n\nimport type { DowncastWriter, ViewElement } from 'ckeditor5/src/engine.js';\nimport type { MediaEmbedConfig, MediaEmbedProvider } from './mediaembedconfig.js';\nimport type { MediaOptions } from './utils.js';\n\nconst mediaPlaceholderIconViewBox = '0 0 64 42';\n\n/**\n * A bridge between the raw media content provider definitions and the editor view content.\n *\n * It helps translating media URLs to corresponding {@link module:engine/view/element~Element view elements}.\n *\n * Mostly used by the {@link module:media-embed/mediaembedediting~MediaEmbedEditing} plugin.\n */\nexport default class MediaRegistry {\n\t/**\n\t * The {@link module:utils/locale~Locale} instance.\n\t */\n\tpublic locale: Locale;\n\n\t/**\n\t * The media provider definitions available for the registry. Usually corresponding with the\n\t * {@link module:media-embed/mediaembedconfig~MediaEmbedConfig media configuration}.\n\t */\n\tpublic providerDefinitions: Array<MediaEmbedProvider>;\n\n\t/**\n\t * Creates an instance of the {@link module:media-embed/mediaregistry~MediaRegistry} class.\n\t *\n\t * @param locale The localization services instance.\n\t * @param config The configuration of the media embed feature.\n\t */\n\tconstructor( locale: Locale, config: MediaEmbedConfig ) {\n\t\tconst providers = config.providers!;\n\t\tconst extraProviders = config.extraProviders || [];\n\t\tconst removedProviders = new Set( config.removeProviders );\n\t\tconst providerDefinitions = providers\n\t\t\t.concat( extraProviders )\n\t\t\t.filter( provider => {\n\t\t\t\tconst name = provider.name;\n\n\t\t\t\tif ( !name ) {\n\t\t\t\t\t/**\n\t\t\t\t\t * One of the providers (or extra providers) specified in the media embed configuration\n\t\t\t\t\t * has no name and will not be used by the editor. In order to get this media\n\t\t\t\t\t * provider working, double check your editor configuration.\n\t\t\t\t\t *\n\t\t\t\t\t * @error media-embed-no-provider-name\n\t\t\t\t\t */\n\t\t\t\t\tlogWarning( 'media-embed-no-provider-name', { provider } );\n\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn !removedProviders.has( name );\n\t\t\t} );\n\n\t\tthis.locale = locale;\n\t\tthis.providerDefinitions = providerDefinitions;\n\t}\n\n\t/**\n\t * Checks whether the passed URL is representing a certain media type allowed in the editor.\n\t *\n\t * @param url The URL to be checked\n\t */\n\tpublic hasMedia( url: string ): boolean {\n\t\treturn !!this._getMedia( url );\n\t}\n\n\t/**\n\t * For the given media URL string and options, it returns the {@link module:engine/view/element~Element view element}\n\t * representing that media.\n\t *\n\t * **Note:** If no URL is specified, an empty view element is returned.\n\t *\n\t * @param writer The view writer used to produce a view element.\n\t * @param url The URL to be translated into a view element.\n\t */\n\tpublic getMediaViewElement(\n\t\twriter: DowncastWriter,\n\t\turl: string,\n\t\toptions: MediaOptions\n\t): ViewElement {\n\t\treturn this._getMedia( url )!.getViewElement( writer, options );\n\t}\n\n\t/**\n\t * Returns a `Media` instance for the given URL.\n\t *\n\t * @param url The URL of the media.\n\t * @returns The `Media` instance or `null` when there is none.\n\t */\n\tprivate _getMedia( url: string ): Media | null {\n\t\tif ( !url ) {\n\t\t\treturn new Media( this.locale );\n\t\t}\n\n\t\turl = url.trim();\n\n\t\tfor ( const definition of this.providerDefinitions ) {\n\t\t\tconst previewRenderer = definition.html!;\n\t\t\tconst pattern = toArray( definition.url );\n\n\t\t\tfor ( const subPattern of pattern ) {\n\t\t\t\tconst match = this._getUrlMatches( url, subPattern );\n\n\t\t\t\tif ( match ) {\n\t\t\t\t\treturn new Media( this.locale, url, match, previewRenderer );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Tries to match `url` to `pattern`.\n\t *\n\t * @param url The URL of the media.\n\t * @param pattern The pattern that should accept the media URL.\n\t */\n\tprivate _getUrlMatches( url: string, pattern: RegExp ): RegExpMatchArray | null {\n\t\t// 1. Try to match without stripping the protocol and \"www\" subdomain.\n\t\tlet match = url.match( pattern );\n\n\t\tif ( match ) {\n\t\t\treturn match;\n\t\t}\n\n\t\t// 2. Try to match after stripping the protocol.\n\t\tlet rawUrl = url.replace( /^https?:\\/\\//, '' );\n\t\tmatch = rawUrl.match( pattern );\n\n\t\tif ( match ) {\n\t\t\treturn match;\n\t\t}\n\n\t\t// 3. Try to match after stripping the \"www\" subdomain.\n\t\trawUrl = rawUrl.replace( /^www\\./, '' );\n\t\tmatch = rawUrl.match( pattern );\n\n\t\tif ( match ) {\n\t\t\treturn match;\n\t\t}\n\n\t\treturn null;\n\t}\n}\n\n/**\n * Represents media defined by the provider configuration.\n *\n * It can be rendered to the {@link module:engine/view/element~Element view element} and used in the editing or data pipeline.\n */\nclass Media {\n\t/**\n\t * The URL this Media instance represents.\n\t */\n\tpublic url: string | null;\n\n\t/**\n\t * Shorthand for {@link module:utils/locale~Locale#t}.\n\t *\n\t * @see module:utils/locale~Locale#t\n\t */\n\tprivate _locale: Locale;\n\n\t/**\n\t * The output of the `RegExp.match` which validated the {@link #url} of this media.\n\t */\n\tprivate _match?: RegExpMatchArray;\n\n\t/**\n\t * The function returning the HTML string preview of this media.\n\t */\n\tprivate _previewRenderer?: ( match: RegExpMatchArray ) => string;\n\n\tconstructor( locale: Locale, url?: string, match?: RegExpMatchArray, previewRenderer?: ( match: RegExpMatchArray ) => string ) {\n\t\tthis.url = this._getValidUrl( url );\n\t\tthis._locale = locale;\n\t\tthis._match = match;\n\t\tthis._previewRenderer = previewRenderer;\n\t}\n\n\t/**\n\t * Returns the view element representation of the media.\n\t *\n\t * @param writer The view writer used to produce a view element.\n\t */\n\tpublic getViewElement(\n\t\twriter: DowncastWriter,\n\t\toptions: MediaOptions\n\t): ViewElement {\n\t\tconst attributes: Record<string, unknown> = {};\n\t\tlet viewElement;\n\n\t\tif ( options.renderForEditingView || ( options.renderMediaPreview && this.url && this._previewRenderer ) ) {\n\t\t\tif ( this.url ) {\n\t\t\t\tattributes[ 'data-oembed-url' ] = this.url;\n\t\t\t}\n\n\t\t\tif ( options.renderForEditingView ) {\n\t\t\t\tattributes.class = 'ck-media__wrapper';\n\t\t\t}\n\n\t\t\tconst mediaHtml = this._getPreviewHtml( options );\n\n\t\t\tviewElement = writer.createRawElement( 'div', attributes, ( domElement, domConverter ) => {\n\t\t\t\tdomConverter!.setContentOf( domElement, mediaHtml );\n\t\t\t} );\n\t\t} else {\n\t\t\tif ( this.url ) {\n\t\t\t\tattributes.url = this.url;\n\t\t\t}\n\n\t\t\tviewElement = writer.createEmptyElement( options.elementName, attributes );\n\t\t}\n\n\t\twriter.setCustomProperty( 'media-content', true, viewElement );\n\n\t\treturn viewElement;\n\t}\n\n\t/**\n\t * Returns the HTML string of the media content preview.\n\t */\n\tprivate _getPreviewHtml( options: { renderForEditingView?: boolean } ): string {\n\t\tif ( this._previewRenderer ) {\n\t\t\treturn this._previewRenderer( this._match! );\n\t\t} else {\n\t\t\t// The placeholder only makes sense for editing view and media which have URLs.\n\t\t\t// Placeholder is never displayed in data and URL-less media have no content.\n\t\t\tif ( this.url && options.renderForEditingView ) {\n\t\t\t\treturn this._getPlaceholderHtml();\n\t\t\t}\n\n\t\t\treturn '';\n\t\t}\n\t}\n\n\t/**\n\t * Returns the placeholder HTML when the media has no content preview.\n\t */\n\tprivate _getPlaceholderHtml(): string {\n\t\tconst icon = new IconView();\n\t\tconst t = this._locale.t;\n\n\t\ticon.content = IconMediaPlaceholder;\n\t\ticon.viewBox = mediaPlaceholderIconViewBox;\n\n\t\tconst placeholder = new Template( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: 'ck ck-reset_all ck-media__placeholder'\n\t\t\t},\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttag: 'div',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: 'ck-media__placeholder__icon'\n\t\t\t\t\t},\n\t\t\t\t\tchildren: [ icon ]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttag: 'a',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: 'ck-media__placeholder__url',\n\t\t\t\t\t\ttarget: '_blank',\n\t\t\t\t\t\trel: 'noopener noreferrer',\n\t\t\t\t\t\thref: this.url,\n\t\t\t\t\t\t'data-cke-tooltip-text': t( 'Open media in new tab' )\n\t\t\t\t\t},\n\t\t\t\t\tchildren: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttag: 'span',\n\t\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\t\tclass: 'ck-media__placeholder__url__text'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tchildren: [ this.url ]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t} ).render() as HTMLElement;\n\n\t\treturn placeholder.outerHTML;\n\t}\n\n\t/**\n\t * Returns the full URL to the specified media.\n\t *\n\t * @param url The URL of the media.\n\t */\n\tprivate _getValidUrl( url: string | undefined ): string | null {\n\t\tif ( !url ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif ( url.match( /^https?/ ) ) {\n\t\t\treturn url;\n\t\t}\n\n\t\treturn 'https://' + url;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module media-embed/mediaembedediting\n */\n\nimport { Plugin, type Editor } from 'ckeditor5/src/core.js';\nimport type { UpcastElementEvent } from 'ckeditor5/src/engine.js';\nimport { first, type GetCallback } from 'ckeditor5/src/utils.js';\n\nimport { modelToViewUrlAttributeConverter } from './converters.js';\nimport type { MediaEmbedConfig } from './mediaembedconfig.js';\nimport MediaEmbedCommand from './mediaembedcommand.js';\nimport MediaRegistry from './mediaregistry.js';\nimport { toMediaWidget, createMediaFigureElement } from './utils.js';\n\nimport '../theme/mediaembedediting.css';\n\n/**\n * The media embed editing feature.\n */\nexport default class MediaEmbedEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get pluginName() {\n\t\treturn 'MediaEmbedEditing' as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static override get isOfficialPlugin(): true {\n\t\treturn true;\n\t}\n\n\t/**\n\t * The media registry managing the media providers in the editor.\n\t */\n\tpublic registry: MediaRegistry;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor: Editor ) {\n\t\tsuper( editor );\n\t\teditor.config.define( 'mediaEmbed', {\n\t\t\telementName: 'oembed',\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tname: 'dailymotion',\n\t\t\t\t\turl: [\n\t\t\t\t\t\t/^dailymotion\\.com\\/video\\/(\\w+)/,\n\t\t\t\t\t\t/^dai.ly\\/(\\w+)/\n\t\t\t\t\t],\n\t\t\t\t\thtml: match => {\n\t\t\t\t\t\tconst id = match[ 1 ];\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t'<div style=\"position: relative; padding-bottom: 100%; height: 0; \">' +\n\t\t\t\t\t\t\t\t`<iframe src=\"https://www.dailymotion.com/embed/video/${ id }\" ` +\n\t\t\t\t\t\t\t\t\t'style=\"position: absolute; width: 100%; height: 100%; top: 0; left: 0;\" ' +\n\t\t\t\t\t\t\t\t\t'frameborder=\"0\" width=\"480\" height=\"270\" allowfullscreen allow=\"autoplay\">' +\n\t\t\t\t\t\t\t\t'</iframe>' +\n\t\t\t\t\t\t\t'</div>'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t{\n\t\t\t\t\tname: 'spotify',\n\t\t\t\t\turl: [\n\t\t\t\t\t\t/^open\\.spotify\\.com\\/(artist\\/\\w+)/,\n\t\t\t\t\t\t/^open\\.spotify\\.com\\/(album\\/\\w+)/,\n\t\t\t\t\t\t/^open\\.spotify\\.com\\/(track\\/\\w+)/\n\t\t\t\t\t],\n\t\t\t\t\thtml: match => {\n\t\t\t\t\t\tconst id = match[ 1 ];\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t'<div style=\"position: relative; padding-bottom: 100%; height: 0; padding-bottom: 126%;\">' +\n\t\t\t\t\t\t\t\t`<iframe src=\"https://open.spotify.com/embed/${ id }\" ` +\n\t\t\t\t\t\t\t\t\t'style=\"position: absolute; width: 100%; height: 100%; top: 0; left: 0;\" ' +\n\t\t\t\t\t\t\t\t\t'frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\">' +\n\t\t\t\t\t\t\t\t'</iframe>' +\n\t\t\t\t\t\t\t'</div>'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t{\n\t\t\t\t\tname: 'youtube',\n\t\t\t\t\turl: [\n\t\t\t\t\t\t/^(?:m\\.)?youtube\\.com\\/watch\\?v=([\\w-]+)(?:&t=(\\d+))?/,\n\t\t\t\t\t\t/^(?:m\\.)?youtube\\.com\\/shorts\\/([\\w-]+)(?:\\?t=(\\d+))?/,\n\t\t\t\t\t\t/^(?:m\\.)?youtube\\.com\\/v\\/([\\w-]+)(?:\\?t=(\\d+))?/,\n\t\t\t\t\t\t/^youtube\\.com\\/embed\\/([\\w-]+)(?:\\?start=(\\d+))?/,\n\t\t\t\t\t\t/^youtu\\.be\\/([\\w-]+)(?:\\?t=(\\d+))?/\n\t\t\t\t\t],\n\t\t\t\t\thtml: match => {\n\t\t\t\t\t\tconst id = match[ 1 ];\n\t\t\t\t\t\tconst time = match[ 2 ];\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t'<div style=\"position: relative; padding-bottom: 100%; height: 0; padding-bottom: 56.2493%;\">' +\n\t\t\t\t\t\t\t\t`<iframe src=\"https://www.youtube.com/embed/${ id }${ time ? `?start=${ time }` : '' }\" ` +\n\t\t\t\t\t\t\t\t\t'style=\"position: absolute; width: 100%; height: 100%; top: 0; left: 0;\" ' +\n\t\t\t\t\t\t\t\t\t'frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen>' +\n\t\t\t\t\t\t\t\t'</iframe>' +\n\t\t\t\t\t\t\t'</div>'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t{\n\t\t\t\t\tname: 'vimeo',\n\t\t\t\t\turl: [\n\t\t\t\t\t\t/^vimeo\\.com\\/(\\d+)/,\n\t\t\t\t\t\t/^vimeo\\.com\\/[^/]+\\/[^/]+\\/video\\/(\\d+)/,\n\t\t\t\t\t\t/^vimeo\\.com\\/album\\/[^/]+\\/video\\/(\\d+)/,\n\t\t\t\t\t\t/^vimeo\\.com\\/channels\\/[^/]+\\/(\\d+)/,\n\t\t\t\t\t\t/^vimeo\\.com\\/groups\\/[^/]+\\/videos\\/(\\d+)/,\n\t\t\t\t\t\t/^vimeo\\.com\\/ondemand\\/[^/]+\\/(\\d+)/,\n\t\t\t\t\t\t/^player\\.vimeo\\.com\\/video\\/(\\d+)/\n\t\t\t\t\t],\n\t\t\t\t\thtml: match => {\n\t\t\t\t\t\tconst id = match[ 1 ];\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t'<div style=\"position: relative; padding-bottom: 100%; height: 0; padding-bottom: 56.2493%;\">' +\n\t\t\t\t\t\t\t\t`<iframe src=\"https://player.vimeo.com/video/${ id }\" ` +\n\t\t\t\t\t\t\t\t\t'style=\"position: absolute; width: 100%; height: 100%; top: 0; left: 0;\" ' +\n\t\t\t\t\t\t\t\t\t'frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen>' +\n\t\t\t\t\t\t\t\t'</iframe>' +\n\t\t\t\t\t\t\t'</div>'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t{\n\t\t\t\t\tname: 'instagram',\n\t\t\t\t\turl: [\n\t\t\t\t\t\t/^instagram\\.com\\/p\\/(\\w+)/,\n\t\t\t\t\t\t/^instagram\\.com\\/reel\\/(\\w+)/\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'twitter',\n\t\t\t\t\turl: [\n\t\t\t\t\t\t/^twitter\\.com/,\n\t\t\t\t\t\t/^x\\.com/\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'googleMaps',\n\t\t\t\t\turl: [\n\t\t\t\t\t\t/^google\\.com\\/maps/,\n\t\t\t\t\t\t/^goo\\.gl\\/maps/,\n\t\t\t\t\t\t/^maps\\.google\\.com/,\n\t\t\t\t\t\t/^maps\\.app\\.goo\\.gl/\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'flickr',\n\t\t\t\t\turl: /^flickr\\.com/\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'facebook',\n\t\t\t\t\turl: /^facebook\\.com/\n\t\t\t\t}\n\t\t\t]\n\t\t} as MediaEmbedConfig );\n\n\t\tthis.registry = new MediaRegistry( editor.locale, editor.config.get( 'mediaEmbed' )! );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic init(): void {\n\t\tconst editor = this.editor;\n\t\tconst schema = editor.model.schema;\n\t\tconst t = editor.t;\n\t\tconst conversion = editor.conversion;\n\t\tconst renderMediaPreview = editor.config.get( 'mediaEmbed.previewsInData' );\n\t\tconst elementName = editor.config.get( 'mediaEmbed.elementName' )!;\n\n\t\tconst registry = this.registry;\n\n\t\teditor.commands.add( 'mediaEmbed', new MediaEmbedCommand( editor ) );\n\n\t\t// Configure the schema.\n\t\tschema.register( 'media', {\n\t\t\tinheritAllFrom: '$blockObject',\n\t\t\tallowAttributes: [ 'url' ]\n\t\t} );\n\n\t\t// Model -> Data\n\t\tconversion.for( 'dataDowncast' ).elementToStructure( {\n\t\t\tmodel: 'media',\n\t\t\tview: ( modelElement, { writer } ) => {\n\t\t\t\tconst url = modelElement.getAttribute( 'url' ) as string;\n\n\t\t\t\treturn createMediaFigureElement( writer, registry, url, {\n\t\t\t\t\telementName,\n\t\t\t\t\trenderMediaPreview: !!url && renderMediaPreview\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\n\t\t// Model -> Data (url -> data-oembed-url)\n\t\tconversion.for( 'dataDowncast' ).add(\n\t\t\tmodelToViewUrlAttributeConverter( registry, {\n\t\t\t\telementName,\n\t\t\t\trenderMediaPreview\n\t\t\t} ) );\n\n\t\t// Model -> View (element)\n\t\tconversion.for( 'editingDowncast' ).elementToStructure( {\n\t\t\tmodel: 'media',\n\t\t\tview: ( modelElement, { writer } ) => {\n\t\t\t\tconst url = modelElement.getAttribute( 'url' ) as string;\n\t\t\t\tconst figure = createMediaFigureElement( writer, registry, url, {\n\t\t\t\t\telementName,\n\t\t\t\t\trenderForEditingView: true\n\t\t\t\t} );\n\n\t\t\t\treturn toMediaWidget( figure, writer, t( 'media widget' ) );\n\t\t\t}\n\t\t} );\n\n\t\t// Model -> View (url -> data-oembed-url)\n\t\tconversion.for( 'editingDowncast' ).add(\n\t\t\tmodelToViewUrlAttributeConverter( registry, {\n\t\t\t\telementName,\n\t\t\t\trenderForEditingView: true\n\t\t\t} ) );\n\n\t\t// View -> Model (data-oembed-url -> url)\n\t\tconversion.for( 'upcast' )\n\t\t\t// Upcast semantic media.\n\t\t\t.elementToElement( {\n\t\t\t\tview: element => [ 'oembed', elementName ].includes( element.name ) && element.getAttribute( 'url' ) ?\n\t\t\t\t\t{ name: true } :\n\t\t\t\t\tnull,\n\t\t\t\tmodel: ( viewMedia, { writer } ) => {\n\t\t\t\t\tconst url = viewMedia.getAttribute( 'url' ) as string;\n\n\t\t\t\t\tif ( registry.hasMedia( url ) ) {\n\t\t\t\t\t\treturn writer.createElement( 'media', { url } );\n\t\t\t\t\t}\n\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} )\n\t\t\t// Upcast non-semantic media.\n\t\t\t.elementToElement( {\n\t\t\t\tview: {\n\t\t\t\t\tname: 'div',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\t'data-oembed-url': true\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tmodel: ( viewMedia, { writer } ) => {\n\t\t\t\t\tconst url = viewMedia.getAttribute( 'data-oembed-url' ) as string;\n\n\t\t\t\t\tif ( registry.hasMedia( url ) ) {\n\t\t\t\t\t\treturn writer.createElement( 'media', { url } );\n\t\t\t\t\t}\n\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} )\n\t\t\t// Consume `<figure class=\"media\">` elements, that were left after upcast.\n\t\t\t.add( dispatcher => {\n\t\t\t\tconst converter: GetCallback<UpcastElementEvent> = ( evt, data, conversionApi ) => {\n\t\t\t\t\tif ( !conversionApi.consumable.consume( data.viewItem, { name: true, classes: 'media' } ) ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst { modelRange, modelCursor } = conversionApi.convertChildren( data.viewItem, data.modelCursor );\n\n\t\t\t\t\tdata.modelRange = modelRange;\n\t\t\t\t\tdata.modelCursor = modelCursor;\n\n\t\t\t\t\tconst modelElement = first( modelRange!.getItems() );\n\n\t\t\t\t\tif ( !modelElement ) {\n\t\t\t\t\t\t// Revert consumed figure so other features can convert it.\n\t\t\t\t\t\tconversionApi.consumable.revert( data.viewItem, { name: true, classes: 'media' } );\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tdispatcher.on<UpcastElementEvent>( 'element:figure', converter );\n\t\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module media-embed/automediaembed\n */\n\nimport { type Editor, Plugin } from 'ckeditor5/src/core.js';\nimport { LiveRange, LivePosition } from 'ckeditor5/src/engine.js';\nimport { Clipboard, type ClipboardPipeline } from 'ckeditor5/src/clipboard.js';\nimport { Delete } from 'ckeditor5/src/typing.js';\nimport { Undo, type UndoCommand } from 'ckeditor5/src/undo.js';\nimport { global } from 'ckeditor5/src/utils.js';\n\nimport MediaEmbedEditing from './mediaembedediting.js';\nimport { insertMedia } from './utils.js';\nimport type MediaEmbedCommand from './mediaembedcommand.js';\n\nconst URL_REGEXP = /^(?:http(s)?:\\/\\/)?[\\w-]+\\.[\\w-.~:/?#[\\]@!$&'()*+,;=%]+$/;\n\n/**\n * The auto-media embed plugin. It recognizes media links in the pasted content and embeds\n * them shortly after they are injected into the document.\n */\nexport default class AutoMediaEmbed extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get requires() {\n\t\treturn [ Clipboard, Delete, Undo ] as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get pluginName() {\n\t\treturn 'AutoMediaEmbed' as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static override get isOfficialPlugin(): true {\n\t\treturn true;\n\t}\n\n\t/**\n\t * The paste–to–embed `setTimeout` ID. Stored as a property to allow\n\t * cleaning of the timeout.\n\t */\n\tprivate _timeoutId: number | null;\n\n\t/**\n\t * The position where the `<media>` element will be inserted after the timeout,\n\t * determined each time the new content is pasted into the document.\n\t */\n\tprivate _positionToInsert: LivePosition | null;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor: Editor ) {\n\t\tsuper( editor );\n\n\t\tthis._timeoutId = null;\n\t\tthis._positionToInsert = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic init(): void {\n\t\tconst editor = this.editor;\n\t\tconst modelDocument = editor.model.document;\n\n\t\t// We need to listen on `Clipboard#inputTransformation` because we need to save positions of selection.\n\t\t// After pasting, the content between those positions will be checked for a URL that could be transformed\n\t\t// into media.\n\t\tconst clipboardPipeline: ClipboardPipeline = editor.plugins.get( 'ClipboardPipeline' );\n\t\tthis.listenTo( clipboardPipeline, 'inputTransformation', () => {\n\t\t\tconst firstRange = modelDocument.selection.getFirstRange()!;\n\n\t\t\tconst leftLivePosition = LivePosition.fromPosition( firstRange.start );\n\t\t\tleftLivePosition.stickiness = 'toPrevious';\n\n\t\t\tconst rightLivePosition = LivePosition.fromPosition( firstRange.end );\n\t\t\trightLivePosition.stickiness = 'toNext';\n\n\t\t\tmodelDocument.once( 'change:data', () => {\n\t\t\t\tthis._embedMediaBetweenPositions( leftLivePosition, rightLivePosition );\n\n\t\t\t\tleftLivePosition.detach();\n\t\t\t\trightLivePosition.detach();\n\t\t\t}, { priority: 'high' } );\n\t\t} );\n\n\t\tconst undoCommand: UndoCommand = editor.commands.get( 'undo' )!;\n\t\tundoCommand.on( 'execute', () => {\n\t\t\tif ( this._timeoutId ) {\n\t\t\t\tglobal.window.clearTimeout( this._timeoutId );\n\t\t\t\tthis._positionToInsert!.detach();\n\n\t\t\t\tthis._timeoutId = null;\n\t\t\t\tthis._positionToInsert = null;\n\t\t\t}\n\t\t}, { priority: 'high' } );\n\t}\n\n\t/**\n\t * Analyzes the part of the document between provided positions in search for a URL representing media.\n\t * When the URL is found, it is automatically converted into media.\n\t *\n\t * @param leftPosition Left position of the selection.\n\t * @param rightPosition Right position of the selection.\n\t */\n\tprivate _embedMediaBetweenPositions( leftPosition: LivePosition, rightPosition: LivePosition ): void {\n\t\tconst editor = this.editor;\n\t\tconst mediaRegistry = editor.plugins.get( MediaEmbedEditing ).registry;\n\t\t// TODO: Use marker instead of LiveRange & LivePositions.\n\t\tconst urlRange = new LiveRange( leftPosition, rightPosition );\n\t\tconst walker = urlRange.getWalker( { ignoreElementEnd: true } );\n\n\t\tlet url = '';\n\n\t\tfor ( const node of walker ) {\n\t\t\tif ( node.item.is( '$textProxy' ) ) {\n\t\t\t\turl += node.item.data;\n\t\t\t}\n\t\t}\n\n\t\turl = url.trim();\n\n\t\t// If the URL does not match to universal URL regexp, let's skip that.\n\t\tif ( !url.match( URL_REGEXP ) ) {\n\t\t\turlRange.detach();\n\n\t\t\treturn;\n\t\t}\n\n\t\t// If the URL represents a media, let's use it.\n\t\tif ( !mediaRegistry.hasMedia( url ) ) {\n\t\t\turlRange.detach();\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst mediaEmbedCommand: MediaEmbedCommand = editor.commands.get( 'mediaEmbed' )!;\n\n\t\t// Do not anything if media element cannot be inserted at the current position (#47).\n\t\tif ( !mediaEmbedCommand.isEnabled ) {\n\t\t\turlRange.detach();\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Position won't be available in the `setTimeout` function so let's clone it.\n\t\tthis._positionToInsert = LivePosition.fromPosition( leftPosition );\n\n\t\t// This action mustn't be executed if undo was called between pasting and auto-embedding.\n\t\tthis._timeoutId = global.window.setTimeout( () => {\n\t\t\teditor.model.change( writer => {\n\t\t\t\tthis._timeoutId = null;\n\n\t\t\t\twriter.remove( urlRange );\n\t\t\t\turlRange.detach();\n\n\t\t\t\tlet insertionPosition: LivePosition | null = null;\n\n\t\t\t\t// Check if position where the media element should be inserted is still valid.\n\t\t\t\t// Otherwise leave it as undefined to use document.selection - default behavior of model.insertContent().\n\t\t\t\tif ( this._positionToInsert!.root.rootName !== '$graveyard' ) {\n\t\t\t\t\tinsertionPosition = this._positionToInsert;\n\t\t\t\t}\n\n\t\t\t\tinsertMedia( editor.model, url, insertionPosition, false );\n\n\t\t\t\tthis._positionToInsert!.detach();\n\t\t\t\tthis._positionToInsert = null;\n\t\t\t} );\n\n\t\t\teditor.plugins.get( Delete ).requestUndoOnBackspace();\n\t\t}, 100 );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module media-embed/ui/mediaformview\n */\n\nimport {\n\ttype InputTextView,\n\tLabeledFieldView,\n\tView,\n\tcreateLabeledInputText,\n\tsubmitHandler\n} from 'ckeditor5/src/ui.js';\nimport { FocusTracker, KeystrokeHandler, type Locale } from 'ckeditor5/src/utils.js';\n\n// See: #8833.\n// eslint-disable-next-line ckeditor5-rules/ckeditor-imports\nimport '@ckeditor/ckeditor5-ui/theme/components/responsive-form/responsiveform.css';\nimport '../../theme/mediaform.css';\n\n/**\n * The media form view controller class.\n *\n * See {@link module:media-embed/ui/mediaformview~MediaFormView}.\n */\nexport default class MediaFormView extends View {\n\t/**\n\t * Tracks information about the DOM focus in the form.\n\t */\n\tpublic readonly focusTracker: FocusTracker;\n\n\t/**\n\t * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t */\n\tpublic readonly keystrokes: KeystrokeHandler;\n\n\t/**\n\t * The value of the URL input.\n\t */\n\tdeclare public mediaURLInputValue: string;\n\n\t/**\n\t * The URL input view.\n\t */\n\tpublic urlInputView: LabeledFieldView<InputTextView>;\n\n\t/**\n\t * An array of form validators used by {@link #isValid}.\n\t */\n\tprivate readonly _validators: Array<( v: MediaFormView ) => string | undefined>;\n\n\t/**\n\t * The default info text for the {@link #urlInputView}.\n\t */\n\tprivate _urlInputViewInfoDefault?: string;\n\n\t/**\n\t * The info text with an additional tip for the {@link #urlInputView},\n\t * displayed when the input has some value.\n\t */\n\tprivate _urlInputViewInfoTip?: string;\n\n\t/**\n\t * @param validators Form validators used by {@link #isValid}.\n\t * @param locale The localization services instance.\n\t */\n\tconstructor( validators: Array<( v: MediaFormView ) => string | undefined>, locale: Locale ) {\n\t\tsuper( locale );\n\n\t\tthis.focusTracker = new FocusTracker();\n\t\tthis.keystrokes = new KeystrokeHandler();\n\t\tthis.set( 'mediaURLInputValue', '' );\n\t\tthis.urlInputView = this._createUrlInput();\n\n\t\tthis._validators = validators;\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'form',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-media-form',\n\t\t\t\t\t'ck-responsive-form'\n\t\t\t\t],\n\n\t\t\t\ttabindex: '-1'\n\t\t\t},\n\n\t\t\tchildren: [\n\t\t\t\tthis.urlInputView\n\t\t\t]\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override render(): void {\n\t\tsuper.render();\n\n\t\tsubmitHandler( {\n\t\t\tview: this\n\t\t} );\n\n\t\t// Register the view in the focus tracker.\n\t\tthis.focusTracker.add( this.urlInputView.element! );\n\n\t\t// Start listening for the keystrokes coming from #element.\n\t\tthis.keystrokes.listenTo( this.element! );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override destroy(): void {\n\t\tsuper.destroy();\n\n\t\tthis.focusTracker.destroy();\n\t\tthis.keystrokes.destroy();\n\t}\n\n\t/**\n\t * Focuses the {@link #urlInputView}.\n\t */\n\tpublic focus(): void {\n\t\tthis.urlInputView.focus();\n\t}\n\n\t/**\n\t * The native DOM `value` of the {@link #urlInputView} element.\n\t *\n\t * **Note**: Do not confuse it with the {@link module:ui/inputtext/inputtextview~InputTextView#value}\n\t * which works one way only and may not represent the actual state of the component in the DOM.\n\t */\n\tpublic get url(): string {\n\t\treturn this.urlInputView.fieldView.element!.value.trim();\n\t}\n\n\tpublic set url( url: string ) {\n\t\tthis.urlInputView.fieldView.value = url.trim();\n\t}\n\n\t/**\n\t * Validates the form and returns `false` when some fields are invalid.\n\t */\n\tpublic isValid(): boolean {\n\t\tthis.resetFormStatus();\n\n\t\tfor ( const validator of this._validators ) {\n\t\t\tconst errorText = validator( this );\n\n\t\t\t// One error per field is enough.\n\t\t\tif ( errorText ) {\n\t\t\t\t// Apply updated error.\n\t\t\t\tthis.urlInputView.errorText = errorText;\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Cleans up the supplementary error and information text of the {@link #urlInputView}\n\t * bringing them back to the state when the form has been displayed for the first time.\n\t *\n\t * See {@link #isValid}.\n\t */\n\tpublic resetFormStatus(): void {\n\t\tthis.urlInputView.errorText = null;\n\t\tthis.urlInputView.infoText = this._urlInputViewInfoDefault!;\n\t}\n\n\t/**\n\t * Creates a labeled input view.\n\t *\n\t * @returns Labeled input view instance.\n\t */\n\tprivate _createUrlInput(): LabeledFieldView<InputTextView> {\n\t\tconst t = this.locale!.t;\n\n\t\tconst labeledInput = new LabeledFieldView( this.locale, createLabeledInputText );\n\t\tconst inputField = labeledInput.fieldView;\n\n\t\tthis._urlInputViewInfoDefault = t( 'Paste the media URL in the input.' );\n\t\tthis._urlInputViewInfoTip = t( 'Tip: Paste the URL into the content to embed faster.' );\n\n\t\tlabeledInput.label = t( 'Media URL' );\n\t\tlabeledInput.infoText = this._urlInputViewInfoDefault;\n\n\t\tinputField.inputMode = 'url';\n\t\tinputField.on( 'input', () => {\n\t\t\t// Display the tip text only when there is some value. Otherwise fall back to the default info text.\n\t\t\tlabeledInput.infoText = inputField.element!.value ? this._urlInputViewInfoTip! : this._urlInputViewInfoDefault!;\n\t\t\tthis.mediaURLInputValue = inputField.element!.value.trim();\n\t\t} );\n\n\t\treturn labeledInput;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module media-embed/mediaembedui\n */\n\nimport { Plugin } from 'ckeditor5/src/core.js';\nimport { IconMedia } from 'ckeditor5/src/icons.js';\nimport { ButtonView, CssTransitionDisablerMixin, MenuBarMenuListItemButtonView, Dialog } from 'ckeditor5/src/ui.js';\n\nimport MediaFormView from './ui/mediaformview.js';\nimport MediaEmbedEditing from './mediaembedediting.js';\nimport type { LocaleTranslate } from 'ckeditor5/src/utils.js';\nimport type MediaRegistry from './mediaregistry.js';\n\n/**\n * The media embed UI plugin.\n */\nexport default class MediaEmbedUI extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get requires() {\n\t\treturn [ MediaEmbedEditing, Dialog ] as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get pluginName() {\n\t\treturn 'MediaEmbedUI' as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static override get isOfficialPlugin(): true {\n\t\treturn true;\n\t}\n\n\tprivate _formView: MediaFormView | undefined;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic init(): void {\n\t\tconst editor = this.editor;\n\n\t\teditor.ui.componentFactory.add( 'mediaEmbed', () => {\n\t\t\tconst t = this.editor.locale.t;\n\t\t\tconst button = this._createDialogButton( ButtonView );\n\n\t\t\tbutton.tooltip = true;\n\t\t\tbutton.label = t( 'Insert media' );\n\n\t\t\treturn button;\n\t\t} );\n\n\t\teditor.ui.componentFactory.add( 'menuBar:mediaEmbed', () => {\n\t\t\tconst t = this.editor.locale.t;\n\t\t\tconst button = this._createDialogButton( MenuBarMenuListItemButtonView );\n\n\t\t\tbutton.label = t( 'Media' );\n\n\t\t\treturn button;\n\t\t} );\n\t}\n\n\t/**\n\t * Creates a button for menu bar that will show media embed dialog.\n\t */\n\tprivate _createDialogButton<T extends typeof ButtonView | typeof MenuBarMenuListItemButtonView>( ButtonClass: T ): InstanceType<T> {\n\t\tconst editor = this.editor;\n\t\tconst buttonView = new ButtonClass( editor.locale ) as InstanceType<T>;\n\t\tconst command = editor.commands.get( 'mediaEmbed' )!;\n\t\tconst dialogPlugin = this.editor.plugins.get( 'Dialog' );\n\n\t\tbuttonView.icon = IconMedia;\n\n\t\tbuttonView.bind( 'isEnabled' ).to( command, 'isEnabled' );\n\n\t\tbuttonView.on( 'execute', () => {\n\t\t\tif ( dialogPlugin.id === 'mediaEmbed' ) {\n\t\t\t\tdialogPlugin.hide();\n\t\t\t} else {\n\t\t\t\tthis._showDialog();\n\t\t\t}\n\t\t} );\n\n\t\treturn buttonView;\n\t}\n\n\tprivate _showDialog() {\n\t\tconst editor = this.editor;\n\t\tconst dialog = editor.plugins.get( 'Dialog' );\n\t\tconst command = editor.commands.get( 'mediaEmbed' )!;\n\t\tconst t = editor.locale.t;\n\n\t\tconst isMediaSelected = command.value !== undefined;\n\n\t\tif ( !this._formView ) {\n\t\t\tconst registry = editor.plugins.get( MediaEmbedEditing ).registry;\n\n\t\t\tthis._formView = new ( CssTransitionDisablerMixin( MediaFormView ) )( getFormValidators( editor.t, registry ), editor.locale );\n\t\t\tthis._formView.on( 'submit', () => this._handleSubmitForm() );\n\t\t}\n\n\t\tdialog.show( {\n\t\t\tid: 'mediaEmbed',\n\t\t\ttitle: t( 'Media embed' ),\n\t\t\tcontent: this._formView,\n\t\t\tisModal: true,\n\t\t\tonShow: () => {\n\t\t\t\tthis._formView!.url = command.value || '';\n\t\t\t\tthis._formView!.resetFormStatus();\n\t\t\t\tthis._formView!.urlInputView.fieldView.select();\n\t\t\t},\n\t\t\tactionButtons: [\n\t\t\t\t{\n\t\t\t\t\tlabel: t( 'Cancel' ),\n\t\t\t\t\twithText: true,\n\t\t\t\t\tonExecute: () => dialog.hide()\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: isMediaSelected ? t( 'Save' ) : t( 'Insert' ),\n\t\t\t\t\tclass: 'ck-button-action',\n\t\t\t\t\twithText: true,\n\t\t\t\t\tonExecute: () => this._handleSubmitForm()\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\t}\n\n\tprivate _handleSubmitForm() {\n\t\tconst editor = this.editor;\n\t\tconst dialog = editor.plugins.get( 'Dialog' );\n\n\t\tif ( this._formView!.isValid() ) {\n\t\t\teditor.execute( 'mediaEmbed', this._formView!.url );\n\t\t\tdialog.hide();\n\t\t\teditor.editing.view.focus();\n\t\t}\n\t}\n}\n\nfunction getFormValidators( t: LocaleTranslate, registry: MediaRegistry ): Array<( v: MediaFormView ) => string | undefined> {\n\treturn [\n\t\tform => {\n\t\t\tif ( !form.url.length ) {\n\t\t\t\treturn t( 'The URL must not be empty.' );\n\t\t\t}\n\t\t},\n\t\tform => {\n\t\t\tif ( !registry.hasMedia( form.url ) ) {\n\t\t\t\treturn t( 'This media URL is not supported.' );\n\t\t\t}\n\t\t}\n\t];\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module media-embed/mediaembed\n */\n\nimport { Plugin } from 'ckeditor5/src/core.js';\nimport { Widget } from 'ckeditor5/src/widget.js';\n\nimport MediaEmbedEditing from './mediaembedediting.js';\nimport AutoMediaEmbed from './automediaembed.js';\nimport MediaEmbedUI from './mediaembedui.js';\n\nimport '../theme/mediaembed.css';\n\n/**\n * The media embed plugin.\n *\n * For a detailed overview, check the {@glink features/media-embed Media Embed feature documentation}.\n *\n * This is a \"glue\" plugin which loads the following plugins:\n *\n * * The {@link module:media-embed/mediaembedediting~MediaEmbedEditing media embed editing feature},\n * * The {@link module:media-embed/mediaembedui~MediaEmbedUI media embed UI feature} and\n * * The {@link module:media-embed/automediaembed~AutoMediaEmbed auto-media embed feature}.\n */\nexport default class MediaEmbed extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get requires() {\n\t\treturn [ MediaEmbedEditing, MediaEmbedUI, AutoMediaEmbed, Widget ] as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get pluginName() {\n\t\treturn 'MediaEmbed' as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static override get isOfficialPlugin(): true {\n\t\treturn true;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module media-embed/mediaembedtoolbar\n */\n\nimport { Plugin } from 'ckeditor5/src/core.js';\nimport { WidgetToolbarRepository } from 'ckeditor5/src/widget.js';\n\nimport { getSelectedMediaViewWidget } from './utils.js';\n\nimport './mediaembedconfig.js';\n\n/**\n * The media embed toolbar plugin. It creates a toolbar for media embed that shows up when the media element is selected.\n *\n * Instances of toolbar components (e.g. buttons) are created based on the\n * {@link module:media-embed/mediaembedconfig~MediaEmbedConfig#toolbar `media.toolbar` configuration option}.\n */\nexport default class MediaEmbedToolbar extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get requires() {\n\t\treturn [ WidgetToolbarRepository ] as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get pluginName() {\n\t\treturn 'MediaEmbedToolbar' as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static override get isOfficialPlugin(): true {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic afterInit(): void {\n\t\tconst editor = this.editor;\n\t\tconst t = editor.t;\n\t\tconst widgetToolbarRepository = editor.plugins.get( WidgetToolbarRepository );\n\t\twidgetToolbarRepository.register( 'mediaEmbed', {\n\t\t\tariaLabel: t( 'Media toolbar' ),\n\t\t\titems: editor.config.get( 'mediaEmbed.toolbar' ) || [],\n\t\t\tgetRelatedElement: getSelectedMediaViewWidget\n\t\t} );\n\t}\n}\n"]}