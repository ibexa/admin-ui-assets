{"version":3,"sources":["index.js","../src/showblockscommand.ts","../src/showblocksediting.ts","../src/showblocksui.ts","../src/showblocks.ts"],"names":["ShowBlocksCommand","Command","constructor","editor","affectsData","value","CLASS_NAME","view","editing","change","writer","root","document","roots","hasClass","addClass","removeClass","ShowBlocksEditing","Plugin","pluginName","isOfficialPlugin","commands","add","ShowBlocksUI","ui","componentFactory","buttonView","_createButton","ButtonView","set","tooltip","icon","IconShowBlocks","MenuBarMenuListItemButtonView","ButtonClass","locale","command","get","t","label","isToggleable","role","bind","to","isEnabled","listenTo","execute","focus","ShowBlocks","requires"],"mappings":"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","file":"index.js.map","sourcesContent":["import { Command, Plugin } from '@ckeditor/ckeditor5-core/dist/index.js';\nimport { IconShowBlocks } from '@ckeditor/ckeditor5-icons/dist/index.js';\nimport { ButtonView, MenuBarMenuListItemButtonView } from '@ckeditor/ckeditor5-ui/dist/index.js';\n\n/**\n * The show blocks command.\n *\n * Displays the HTML element names for content blocks.\n */ class ShowBlocksCommand extends Command {\n    /**\n\t * @inheritDoc\n\t */ constructor(editor){\n        super(editor);\n        // It does not affect data so should be enabled in read-only mode.\n        this.affectsData = false;\n        this.value = false;\n    }\n    /**\n\t * Toggles the visibility of content blocks.\n\t */ execute() {\n        const CLASS_NAME = 'ck-show-blocks';\n        const view = this.editor.editing.view;\n        view.change((writer)=>{\n            // Multiroot support.\n            for (const root of view.document.roots){\n                if (!root.hasClass(CLASS_NAME)) {\n                    writer.addClass(CLASS_NAME, root);\n                    this.value = true;\n                } else {\n                    writer.removeClass(CLASS_NAME, root);\n                    this.value = false;\n                }\n            }\n        });\n    }\n}\n\n/**\n * The show blocks editing plugin.\n */ class ShowBlocksEditing extends Plugin {\n    /**\n\t * @inheritDoc\n\t */ static get pluginName() {\n        return 'ShowBlocksEditing';\n    }\n    /**\n\t * @inheritDoc\n\t */ static get isOfficialPlugin() {\n        return true;\n    }\n    /**\n\t * @inheritDoc\n\t */ init() {\n        const { editor } = this;\n        editor.commands.add('showBlocks', new ShowBlocksCommand(editor));\n    }\n}\n\n/**\n * The UI plugin of the show blocks feature.\n *\n * It registers the `'showBlocks'` UI button in the editor's {@link module:ui/componentfactory~ComponentFactory component factory}\n * that toggles the visibility of the HTML element names of content blocks.\n */ class ShowBlocksUI extends Plugin {\n    /**\n\t * @inheritDoc\n\t */ static get pluginName() {\n        return 'ShowBlocksUI';\n    }\n    /**\n\t * @inheritDoc\n\t */ static get isOfficialPlugin() {\n        return true;\n    }\n    /**\n\t * @inheritDoc\n\t */ init() {\n        const editor = this.editor;\n        editor.ui.componentFactory.add('showBlocks', ()=>{\n            const buttonView = this._createButton(ButtonView);\n            buttonView.set({\n                tooltip: true,\n                icon: IconShowBlocks\n            });\n            return buttonView;\n        });\n        editor.ui.componentFactory.add('menuBar:showBlocks', ()=>{\n            return this._createButton(MenuBarMenuListItemButtonView);\n        });\n    }\n    /**\n\t * Creates a button for show blocks command to use either in toolbar or in menu bar.\n\t */ _createButton(ButtonClass) {\n        const editor = this.editor;\n        const locale = editor.locale;\n        const command = editor.commands.get('showBlocks');\n        const view = new ButtonClass(locale);\n        const t = locale.t;\n        view.set({\n            label: t('Show blocks'),\n            isToggleable: true,\n            role: 'menuitemcheckbox'\n        });\n        view.bind('isEnabled').to(command);\n        view.bind('isOn').to(command, 'value', command, 'isEnabled', (value, isEnabled)=>value && isEnabled);\n        // Execute the command.\n        this.listenTo(view, 'execute', ()=>{\n            editor.execute('showBlocks');\n            editor.editing.view.focus();\n        });\n        return view;\n    }\n}\n\n/**\n * The show blocks feature.\n *\n * For a detailed overview, check the {@glink features/show-blocks Show blocks} feature guide.\n */ class ShowBlocks extends Plugin {\n    /**\n\t * @inheritDoc\n\t */ static get pluginName() {\n        return 'ShowBlocks';\n    }\n    /**\n\t * @inheritDoc\n\t */ static get isOfficialPlugin() {\n        return true;\n    }\n    /**\n\t * @inheritDoc\n\t */ static get requires() {\n        return [\n            ShowBlocksEditing,\n            ShowBlocksUI\n        ];\n    }\n}\n\nexport { ShowBlocks, ShowBlocksCommand, ShowBlocksEditing, ShowBlocksUI };\n//# sourceMappingURL=index.js.map\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module show-blocks/showblockscommand\n */\n\nimport { Command, type Editor } from 'ckeditor5/src/core.js';\n\n/**\n * The show blocks command.\n *\n * Displays the HTML element names for content blocks.\n */\nexport default class ShowBlocksCommand extends Command {\n\t/**\n\t * Flag indicating whether the command is active, i.e. content blocks are displayed.\n\t */\n\tdeclare public value: boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor: Editor ) {\n\t\tsuper( editor );\n\n\t\t// It does not affect data so should be enabled in read-only mode.\n\t\tthis.affectsData = false;\n\n\t\tthis.value = false;\n\t}\n\n\t/**\n\t * Toggles the visibility of content blocks.\n\t */\n\tpublic override execute(): void {\n\t\tconst CLASS_NAME = 'ck-show-blocks';\n\t\tconst view = this.editor.editing.view;\n\n\t\tview.change( writer => {\n\t\t\t// Multiroot support.\n\t\t\tfor ( const root of view.document.roots ) {\n\t\t\t\tif ( !root.hasClass( CLASS_NAME ) ) {\n\t\t\t\t\twriter.addClass( CLASS_NAME, root );\n\t\t\t\t\tthis.value = true;\n\t\t\t\t} else {\n\t\t\t\t\twriter.removeClass( CLASS_NAME, root );\n\t\t\t\t\tthis.value = false;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module show-blocks/showblocksediting\n */\n\nimport { Plugin } from 'ckeditor5/src/core.js';\nimport ShowBlocksCommand from './showblockscommand.js';\n\n/**\n * The show blocks editing plugin.\n */\nexport default class ShowBlocksEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get pluginName() {\n\t\treturn 'ShowBlocksEditing' as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static override get isOfficialPlugin(): true {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic init(): void {\n\t\tconst { editor } = this;\n\n\t\teditor.commands.add( 'showBlocks', new ShowBlocksCommand( editor ) );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module show-blocks/showblocksui\n */\n\nimport { Plugin } from 'ckeditor5/src/core.js';\nimport { IconShowBlocks } from 'ckeditor5/src/icons.js';\nimport { ButtonView, MenuBarMenuListItemButtonView } from 'ckeditor5/src/ui.js';\n\nimport '../theme/showblocks.css';\n\n/**\n * The UI plugin of the show blocks feature.\n *\n * It registers the `'showBlocks'` UI button in the editor's {@link module:ui/componentfactory~ComponentFactory component factory}\n * that toggles the visibility of the HTML element names of content blocks.\n */\nexport default class ShowBlocksUI extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get pluginName() {\n\t\treturn 'ShowBlocksUI' as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static override get isOfficialPlugin(): true {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic init(): void {\n\t\tconst editor = this.editor;\n\n\t\teditor.ui.componentFactory.add( 'showBlocks', () => {\n\t\t\tconst buttonView = this._createButton( ButtonView );\n\n\t\t\tbuttonView.set( {\n\t\t\t\ttooltip: true,\n\t\t\t\ticon: IconShowBlocks\n\t\t\t} );\n\n\t\t\treturn buttonView;\n\t\t} );\n\n\t\teditor.ui.componentFactory.add( 'menuBar:showBlocks', () => {\n\t\t\treturn this._createButton( MenuBarMenuListItemButtonView );\n\t\t} );\n\t}\n\n\t/**\n\t * Creates a button for show blocks command to use either in toolbar or in menu bar.\n\t */\n\tprivate _createButton<T extends typeof ButtonView>( ButtonClass: T ): InstanceType<T> {\n\t\tconst editor = this.editor;\n\t\tconst locale = editor.locale;\n\t\tconst command = editor.commands.get( 'showBlocks' )!;\n\t\tconst view = new ButtonClass( locale ) as InstanceType<T>;\n\t\tconst t = locale.t;\n\n\t\tview.set( {\n\t\t\tlabel: t( 'Show blocks' ),\n\t\t\tisToggleable: true,\n\t\t\trole: 'menuitemcheckbox'\n\t\t} );\n\n\t\tview.bind( 'isEnabled' ).to( command );\n\t\tview.bind( 'isOn' ).to( command, 'value', command, 'isEnabled', ( value, isEnabled ) => value && isEnabled );\n\n\t\t// Execute the command.\n\t\tthis.listenTo( view, 'execute', () => {\n\t\t\teditor.execute( 'showBlocks' );\n\t\t\teditor.editing.view.focus();\n\t\t} );\n\n\t\treturn view;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module show-blocks/showblocks\n */\n\nimport { Plugin } from 'ckeditor5/src/core.js';\n\nimport ShowBlocksEditing from './showblocksediting.js';\nimport ShowBlocksUI from './showblocksui.js';\n\n/**\n * The show blocks feature.\n *\n * For a detailed overview, check the {@glink features/show-blocks Show blocks} feature guide.\n */\nexport default class ShowBlocks extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get pluginName() {\n\t\treturn 'ShowBlocks' as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static override get isOfficialPlugin(): true {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get requires() {\n\t\treturn [ ShowBlocksEditing, ShowBlocksUI ] as const;\n\t}\n}\n"]}