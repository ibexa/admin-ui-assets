{"version":3,"sources":["index.js","../src/utils/isemojisupported.ts","../src/emojiutils.ts","../src/emojirepository.ts","../src/emojimention.ts","../src/emojicommand.ts","../src/ui/emojigridview.ts","../src/ui/emojicategoriesview.ts","../src/ui/emojisearchview.ts","../src/ui/emojitoneview.ts","../src/ui/emojipickerview.ts","../src/ui/emojipickerformview.ts","../src/emojipicker.ts","../src/emoji.ts"],"names":["isEmojiSupported","unicode","ctx","getCanvas","CANVAS_HEIGHT","CANVAS_WIDTH","textSize","Math","floor","font","textBaseline","canvas","width","height","clearRect","fillStyle","fillText","a","getImageData","data","count","length","i","x","y","b","measureText","document","createElement","getContext","willReadFrequently","SKIN_TONE_MAP","EMOJI_SUPPORT_LEVEL","BASELINE_EMOJI_WIDTH","EmojiUtils","Plugin","pluginName","isOfficialPlugin","item","emojiSupportedVersionByOs","container","isEmojiVersionSupported","version","hasZwj","emoji","isEmojiZwjSupported","emojiVersion","Object","entries","_isEmojiSupported","includes","emojiWidth","getNodeWidth","node","span","textContent","appendChild","nodeWidth","offsetWidth","removeChild","setAttribute","style","position","left","whiteSpace","fontSize","normalizeEmojiSkinTone","entry","skins","default","forEach","skin","skinTone","tone","isEmojiCategoryAllowed","group","DEFAULT_EMOJI_DATABASE_URL","DEFAULT_EMOJI_VERSION","EmojiRepository","requires","constructor","editor","config","define","undefined","definitionsUrl","useCustomFont","_url","_getUrl","_repositoryPromise","Promise","resolve","_repositoryPromiseResolveCallback","_items","init","_warnAboutCdnUse","_loadAndCacheEmoji","_getItems","logWarning","getEmojiByQuery","searchQuery","searchQueryTokens","split","filter","Boolean","shouldSearch","some","token","fuzzysort","go","threshold","keys","emojiEntry","matchedTags","flatMap","tok","tags","t","startsWith","join","map","result","obj","repository","locale","categories","title","icon","groupId","groups","groupBy","category","items","id","tooltip","get","urlVersion","url","URL","replace","toString","searchParams","set","editorVersion","licenseKey","distributionChannel","Symbol","for","_results","href","fetch","cache","then","response","ok","json","catch","_normalizeEmoji","emojiUtils","plugins","insertableEmoji","getEmojiSupportedVersionByOs","createEmojiWidthTestingContainer","body","results","remove","EMOJI_MENTION_MARKER","EMOJI_SHOW_ALL_OPTION_ID","EMOJI_HINT_OPTION_ID","EmojiMention","Typing","dropdownLimit","_emojiDropdownLimit","_skinTone","_setupMentionConfiguration","mergeFieldsPrefix","mentionFeedsConfigs","isEmojiMarkerUsedByMergeFields","isEmojiMarkerUsedByMention","_isEmojiMarker","marker","isEmojiConfigDefined","emojiMentionFeedConfig","itemRenderer","_customItemRendererFactory","feed","_queryEmojiCallbackFactory","emojiPickerPlugin","has","emojiRepositoryPlugin","_isEmojiRepositoryAvailable","isReady","once","_overrideMentionExecuteListener","bind","itemElement","classList","add","slice","type","tabIndex","labelElement","text","commands","on","event","eventData","stop","mention","range","getItems","is","reduce","model","change","writer","deleteContent","createSelection","showUI","setTimeout","emojiPickerView","focus","execute","priority","emojis","annotation","actionItem","EmojiCommand","Command","schema","selection","isEnabled","checkChild","getFirstPosition","searchValue","EmojiGridView","View","categoryName","emojiCategories","tiles","createCollection","cachedTiles","focusTracker","FocusTracker","keystrokes","KeystrokeHandler","_getEmojiByQuery","bindTemplate","setTemplate","tag","children","attributes","role","class","if","value","addKeyboardHandlingForGrid","keystrokeHandler","gridItems","numberOfColumns","global","window","getComputedStyle","element","firstChild","getPropertyValue","uiLanguageDirection","render","listenTo","destroy","firstTile","first","pattern","matchingItems","allItems","_getItemsByQuery","source","_getItemsByCategory","_updateGrid","resultsCount","totalItemsCount","query","emojiCategory","find","_createTile","name","tile","ButtonView","viewUid","extendTemplate","label","withText","ariaLabel","ariaLabelledBy","fire","EmojiCategoriesView","buttonViews","_createCategoryButton","focusCycler","FocusCycler","focusables","actions","focusPrevious","focusNext","newValue","oldValue","oldCategoryButton","button","isOn","newCategoryButton","buttonView","to","EmojiSearchView","gridView","resultsView","inputView","SearchTextView","queryView","creator","createLabeledInputText","filteredView","infoView","instance","tabindex","delegate","search","regExp","RegExp","escapeRegExp","filteringResults","setInputValue","fieldView","reset","EmojiToneView","skinTones","_skinTones","accessibleLabel","dropdownView","createDropdown","itemDefinitions","Collection","def","ViewModel","tooltipPosition","addListToDropdown","_getSkinTone","evt","EmojiPickerView","SearchInfoView","searchView","categoriesView","toneView","_setupEventListeners","disableCategories","enableCategories","primaryText","secondaryText","isVisible","scrollTo","ev","args","propertyName","getInputValue","EmojiPickerFormView","_focusables","ViewCollection","backButtonView","_createBackButton","_createHeaderView","_focusCycler","childViews","isFocusable","v","isViewWithFocusCycler","chain","focusFirst","backButton","IconPreviousArrow","header","FormHeaderView","VISUAL_SELECTION_MARKER_NAME","EmojiPicker","ContextualBalloon","Dialog","balloonPlugin","command","ui","componentFactory","_createButton","MenuBarMenuListItemButtonView","_setupConversion","_showFakeVisualSelection","_createEmojiPickerView","emojiPickerFormView","_createEmojiPickerFormView","hasView","visibleView","view","_getBalloonPositionData","balloonClassName","ViewClass","IconEmoji","isToggleable","editing","scrollToTheSelection","getEmojiCategories","getSkinTones","textToInsert","_hideUI","updatePosition","cancel","clickOutsideHandler","emitter","contextElements","callback","activator","updateFocus","_hideFakeVisualSelection","conversion","markerToHighlight","classes","markerToElement","markerRange","isCollapsed","markerElement","createUIElement","addClass","viewDocument","target","domConverter","viewRangeToDom","getFirstRange","markers","updateMarker","start","isAtEnd","startPosition","getLastMatchingPosition","isContent","boundaries","addMarker","usingOperation","affectsData","createRange","end","removeMarker","Emoji"],"mappings":"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","file":"index.js.map","sourcesContent":["import { Plugin, Command } from '@ckeditor/ckeditor5-core/dist/index.js';\nimport { logWarning, version, FocusTracker, KeystrokeHandler, global, Collection } from '@ckeditor/ckeditor5-utils/dist/index.js';\nimport { Typing } from '@ckeditor/ckeditor5-typing/dist/index.js';\nimport fuzzysort from 'fuzzysort';\nimport { groupBy, escapeRegExp } from 'es-toolkit/compat';\nimport { View, addKeyboardHandlingForGrid, ButtonView, FocusCycler, SearchTextView, createLabeledInputText, createDropdown, ViewModel, addListToDropdown, SearchInfoView, ViewCollection, isFocusable, isViewWithFocusCycler, FormHeaderView, ContextualBalloon, Dialog, MenuBarMenuListItemButtonView, clickOutsideHandler } from '@ckeditor/ckeditor5-ui/dist/index.js';\nimport { IconPreviousArrow, IconEmoji } from '@ckeditor/ckeditor5-icons/dist/index.js';\n\n/**\n * @license Copyright (c) 2023, Koala Interactive SAS\n * For licensing, see https://github.com/koala-interactive/is-emoji-supported/blob/master/LICENSE.md\n */ /**\n * @module emoji/utils/isemojisupported\n */ /**\n * Checks if the two pixels parts are the same using canvas.\n */ function isEmojiSupported(unicode) {\n    const ctx = getCanvas();\n    /* istanbul ignore next -- @preserve */ if (!ctx) {\n        return false;\n    }\n    const CANVAS_HEIGHT = 25;\n    const CANVAS_WIDTH = 20;\n    const textSize = Math.floor(CANVAS_HEIGHT / 2);\n    // Initialize canvas context.\n    ctx.font = textSize + 'px Arial, Sans-Serif';\n    ctx.textBaseline = 'top';\n    ctx.canvas.width = CANVAS_WIDTH * 2;\n    ctx.canvas.height = CANVAS_HEIGHT;\n    ctx.clearRect(0, 0, CANVAS_WIDTH * 2, CANVAS_HEIGHT);\n    // Draw in red on the left.\n    ctx.fillStyle = '#FF0000';\n    ctx.fillText(unicode, 0, 22);\n    // Draw in blue on right.\n    ctx.fillStyle = '#0000FF';\n    ctx.fillText(unicode, CANVAS_WIDTH, 22);\n    const a = ctx.getImageData(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT).data;\n    const count = a.length;\n    let i = 0;\n    // Search the first visible pixel.\n    for(; i < count && !a[i + 3]; i += 4);\n    // No visible pixel.\n    /* istanbul ignore next -- @preserve */ if (i >= count) {\n        return false;\n    }\n    // Emoji has immutable color, so we check the color of the emoji in two different colors.\n    // the result show be the same.\n    const x = CANVAS_WIDTH + i / 4 % CANVAS_WIDTH;\n    const y = Math.floor(i / 4 / CANVAS_WIDTH);\n    const b = ctx.getImageData(x, y, 1, 1).data;\n    /* istanbul ignore next -- @preserve */ if (a[i] !== b[0] || a[i + 2] !== b[2]) {\n        return false;\n    }\n    //Some emojis consist of different ones, so they will show multiple characters if they are not supported.\n    /* istanbul ignore next -- @preserve */ if (ctx.measureText(unicode).width >= CANVAS_WIDTH) {\n        return false;\n    }\n    // Supported.\n    return true;\n}\nfunction getCanvas() {\n    try {\n        return document.createElement('canvas').getContext('2d', {\n            willReadFrequently: true\n        });\n    } catch  {\n        /* istanbul ignore next -- @preserve */ return null;\n    }\n}\n\n/**\n * @module emoji/emojiutils\n */ const SKIN_TONE_MAP = {\n    0: 'default',\n    1: 'light',\n    2: 'medium-light',\n    3: 'medium',\n    4: 'medium-dark',\n    5: 'dark'\n};\n/**\n * A map representing an emoji and its release version.\n * It's used to identify a user's minimal supported emoji level.\n * We skip versions with older patches, such as 15.0 instead of 15.1 etc.\n */ const EMOJI_SUPPORT_LEVEL = {\n    '🫩': 16,\n    '🫨': 15.1,\n    '🫠': 14,\n    '😶‍🌫️': 13.1,\n    '🧑‍💻': 12.1,\n    '🥰': 11,\n    '🤪': 5,\n    '⚕️': 4,\n    '🤣': 3,\n    '👋🏽': 2,\n    '😀': 1,\n    '😐': 0.7,\n    '😂': 0.6 // Face with Tears of Joy.\n};\nconst BASELINE_EMOJI_WIDTH = 24;\n/**\n * The Emoji utilities plugin.\n */ class EmojiUtils extends Plugin {\n    /**\n\t * @inheritDoc\n\t */ static get pluginName() {\n        return 'EmojiUtils';\n    }\n    /**\n\t * @inheritDoc\n\t */ static get isOfficialPlugin() {\n        return true;\n    }\n    /**\n\t * Checks if the emoji is supported by verifying the emoji version supported by the system first.\n\t * Then checks if emoji contains a zero width joiner (ZWJ), and if yes, then checks if it is supported by the system.\n\t */ isEmojiSupported(item, emojiSupportedVersionByOs, container) {\n        const isEmojiVersionSupported = item.version <= emojiSupportedVersionByOs;\n        if (!isEmojiVersionSupported) {\n            return false;\n        }\n        if (!this.hasZwj(item.emoji)) {\n            return true;\n        }\n        return this.isEmojiZwjSupported(item, container);\n    }\n    /**\n\t * Checks the supported emoji version by the OS, by sampling some representatives from different emoji releases.\n\t */ getEmojiSupportedVersionByOs() {\n        for (const [emoji, emojiVersion] of Object.entries(EMOJI_SUPPORT_LEVEL)){\n            if (EmojiUtils._isEmojiSupported(emoji)) {\n                return emojiVersion;\n            }\n        }\n        return 0;\n    }\n    /**\n\t * Check for ZWJ (zero width joiner) character.\n\t */ hasZwj(emoji) {\n        return emoji.includes('\\u200d');\n    }\n    /**\n\t * Checks whether the emoji is supported in the operating system.\n\t */ isEmojiZwjSupported(item, container) {\n        const emojiWidth = this.getNodeWidth(container, item.emoji);\n        // On Windows, some supported emoji are ~50% bigger than the baseline emoji, but what we really want to guard\n        // against are the ones that are 2x the size, because those are truly broken (person with red hair = person with\n        // floating red wig, black cat = cat with black square, polar bear = bear with snowflake, etc.)\n        // So here we set the threshold at 1.8 times the size of the baseline emoji.\n        return emojiWidth < BASELINE_EMOJI_WIDTH * 1.8;\n    }\n    /**\n\t * Returns the width of the provided node.\n\t */ getNodeWidth(container, node) {\n        const span = document.createElement('span');\n        span.textContent = node;\n        container.appendChild(span);\n        const nodeWidth = span.offsetWidth;\n        container.removeChild(span);\n        return nodeWidth;\n    }\n    /**\n\t * Creates a div for emoji width testing purposes.\n\t */ createEmojiWidthTestingContainer() {\n        const container = document.createElement('div');\n        container.setAttribute('aria-hidden', 'true');\n        container.style.position = 'absolute';\n        container.style.left = '-9999px';\n        container.style.whiteSpace = 'nowrap';\n        container.style.fontSize = BASELINE_EMOJI_WIDTH + 'px';\n        return container;\n    }\n    /**\n\t * Adds default skin tone property to each emoji. If emoji defines other skin tones, they are added as well.\n\t */ normalizeEmojiSkinTone(item) {\n        const entry = {\n            ...item,\n            skins: {\n                default: item.emoji\n            }\n        };\n        if (item.skins) {\n            item.skins.forEach((skin)=>{\n                const skinTone = SKIN_TONE_MAP[skin.tone];\n                entry.skins[skinTone] = skin.emoji;\n            });\n        }\n        return entry;\n    }\n    /**\n\t * Checks whether the emoji belongs to a group that is allowed.\n\t */ isEmojiCategoryAllowed(item) {\n        // Category group=2 contains skin tones only, which we do not want to render.\n        return item.group !== 2;\n    }\n    /**\n\t * A function used to determine if emoji is supported by detecting pixels.\n\t *\n\t * Referenced for unit testing purposes. Kept in a separate file because of licensing.\n\t */ static _isEmojiSupported = isEmojiSupported;\n}\n\n// An endpoint from which the emoji data will be downloaded during plugin initialization.\n// The `{version}` placeholder is replaced with the value from editor config.\nconst DEFAULT_EMOJI_DATABASE_URL = 'https://cdn.ckeditor.com/ckeditor5/data/emoji/{version}/en.json';\nconst DEFAULT_EMOJI_VERSION = 16;\n/**\n * The emoji repository plugin.\n *\n * Loads the emoji repository from URL during plugin initialization and provides utility methods to search it.\n */ class EmojiRepository extends Plugin {\n    /**\n\t * Emoji repository in a configured version.\n\t */ _items;\n    /**\n\t * The resolved URL from which the emoji repository is downloaded.\n\t */ _url;\n    /**\n\t * A promise resolved after downloading the emoji collection.\n\t * The promise resolves with `true` when the repository is successfully downloaded or `false` otherwise.\n\t */ _repositoryPromise;\n    /**\n\t * @inheritDoc\n\t */ static get requires() {\n        return [\n            EmojiUtils\n        ];\n    }\n    /**\n\t * @inheritDoc\n\t */ static get pluginName() {\n        return 'EmojiRepository';\n    }\n    /**\n\t * @inheritDoc\n\t */ static get isOfficialPlugin() {\n        return true;\n    }\n    /**\n\t * @inheritDoc\n\t */ constructor(editor){\n        super(editor);\n        editor.config.define('emoji', {\n            version: undefined,\n            skinTone: 'default',\n            definitionsUrl: undefined,\n            useCustomFont: false\n        });\n        this._url = this._getUrl();\n        this._repositoryPromise = new Promise((resolve)=>{\n            this._repositoryPromiseResolveCallback = resolve;\n        });\n        this._items = null;\n    }\n    /**\n\t * @inheritDoc\n\t */ async init() {\n        this._warnAboutCdnUse();\n        await this._loadAndCacheEmoji();\n        this._items = this._getItems();\n        if (!this._items) {\n            /**\n\t\t\t * Unable to identify the available emoji to display.\n\t\t\t *\n\t\t\t * See the {@glink features/emoji#troubleshooting troubleshooting} section in the {@glink features/emoji Emoji feature} guide\n\t\t\t * for more details.\n\t\t\t *\n\t\t\t * @error emoji-repository-empty\n\t\t\t */ logWarning('emoji-repository-empty');\n            return this._repositoryPromiseResolveCallback(false);\n        }\n        return this._repositoryPromiseResolveCallback(true);\n    }\n    /**\n\t * Returns an array of emoji entries that match the search query.\n\t * If the emoji repository is not loaded this method returns an empty array.\n\t *\n\t * @param searchQuery A search query to match emoji.\n\t * @returns An array of emoji entries that match the search query.\n\t */ getEmojiByQuery(searchQuery) {\n        if (!this._items) {\n            return [];\n        }\n        const searchQueryTokens = searchQuery.split(/\\s/).filter(Boolean);\n        // Perform the search only if there is at least two non-white characters next to each other.\n        const shouldSearch = searchQueryTokens.some((token)=>token.length >= 2);\n        if (!shouldSearch) {\n            return [];\n        }\n        return fuzzysort.go(searchQuery, this._items, {\n            threshold: 0.6,\n            keys: [\n                'emoticon',\n                'annotation',\n                (emojiEntry)=>{\n                    // Instead of searching over all tags, let's use only those that matches the query.\n                    // It enables searching in tags with the space character in names.\n                    const searchQueryTokens = searchQuery.split(/\\s/).filter(Boolean);\n                    const matchedTags = searchQueryTokens.flatMap((tok)=>{\n                        return emojiEntry.tags?.filter((t)=>t.startsWith(tok));\n                    });\n                    return matchedTags.join();\n                }\n            ]\n        }).map((result)=>result.obj);\n    }\n    /**\n\t * Groups all emojis by categories.\n\t * If the emoji repository is not loaded, it returns an empty array.\n\t *\n\t * @returns An array of emoji entries grouped by categories.\n\t */ getEmojiCategories() {\n        const repository = this._getItems();\n        if (!repository) {\n            return [];\n        }\n        const { t } = this.editor.locale;\n        const categories = [\n            {\n                title: t('Smileys & Expressions'),\n                icon: '😄',\n                groupId: 0\n            },\n            {\n                title: t('Gestures & People'),\n                icon: '👋',\n                groupId: 1\n            },\n            {\n                title: t('Animals & Nature'),\n                icon: '🐻',\n                groupId: 3\n            },\n            {\n                title: t('Food & Drinks'),\n                icon: '🍎',\n                groupId: 4\n            },\n            {\n                title: t('Travel & Places'),\n                icon: '🚘',\n                groupId: 5\n            },\n            {\n                title: t('Activities'),\n                icon: '🏀',\n                groupId: 6\n            },\n            {\n                title: t('Objects'),\n                icon: '💡',\n                groupId: 7\n            },\n            {\n                title: t('Symbols'),\n                icon: '🔵',\n                groupId: 8\n            },\n            {\n                title: t('Flags'),\n                icon: '🏁',\n                groupId: 9\n            }\n        ];\n        const groups = groupBy(repository, (item)=>item.group);\n        return categories.map((category)=>{\n            return {\n                ...category,\n                items: groups[category.groupId]\n            };\n        });\n    }\n    /**\n\t * Returns an array of available skin tones.\n\t */ getSkinTones() {\n        const { t } = this.editor.locale;\n        return [\n            {\n                id: 'default',\n                icon: '👋',\n                tooltip: t('Default skin tone')\n            },\n            {\n                id: 'light',\n                icon: '👋🏻',\n                tooltip: t('Light skin tone')\n            },\n            {\n                id: 'medium-light',\n                icon: '👋🏼',\n                tooltip: t('Medium Light skin tone')\n            },\n            {\n                id: 'medium',\n                icon: '👋🏽',\n                tooltip: t('Medium skin tone')\n            },\n            {\n                id: 'medium-dark',\n                icon: '👋🏾',\n                tooltip: t('Medium Dark skin tone')\n            },\n            {\n                id: 'dark',\n                icon: '👋🏿',\n                tooltip: t('Dark skin tone')\n            }\n        ];\n    }\n    /**\n\t * Indicates whether the emoji repository has been successfully downloaded and the plugin is operational.\n\t */ isReady() {\n        return this._repositoryPromise;\n    }\n    /**\n\t * Returns the URL from which the emoji repository is downloaded. If the URL is not provided\n\t * in the configuration, the default URL is used with the version from the configuration.\n\t *\n\t * If both the URL and version are provided, a warning is logged.\n\t */ _getUrl() {\n        const { definitionsUrl, version: version$1 } = this.editor.config.get('emoji');\n        if (!definitionsUrl || definitionsUrl === 'cdn') {\n            // URL was not provided or is set to 'cdn', so we use the default CDN URL.\n            const urlVersion = version$1 || DEFAULT_EMOJI_VERSION;\n            const url = new URL(DEFAULT_EMOJI_DATABASE_URL.replace('{version}', urlVersion.toString()));\n            url.searchParams.set('editorVersion', version);\n            return url;\n        }\n        if (version$1) {\n            /**\n\t\t\t * Both {@link module:emoji/emojiconfig~EmojiConfig#definitionsUrl `emoji.definitionsUrl`} and\n\t\t\t * {@link module:emoji/emojiconfig~EmojiConfig#version `emoji.version`} configuration options\n\t\t\t * are set. Only the `emoji.definitionsUrl` option will be used.\n\t\t\t *\n\t\t\t * The `emoji.version` option will be ignored and should be removed from the configuration.\n\t\t\t *\n\t\t\t * @error emoji-repository-redundant-version\n\t\t\t */ logWarning('emoji-repository-redundant-version');\n        }\n        return new URL(definitionsUrl);\n    }\n    /**\n\t * Warn users on self-hosted installations that this plugin uses a CDN to fetch the emoji repository.\n\t */ _warnAboutCdnUse() {\n        const editor = this.editor;\n        const config = editor.config.get('emoji');\n        const licenseKey = editor.config.get('licenseKey');\n        const distributionChannel = window[Symbol.for('cke distribution')];\n        if (licenseKey === 'GPL') {\n            // Don't warn GPL users.\n            return;\n        }\n        if (distributionChannel === 'cloud') {\n            // Don't warn cloud users, because they already use our CDN.\n            return;\n        }\n        if (config && config.definitionsUrl) {\n            // Don't warn users who have configured their own definitions URL.\n            return;\n        }\n        /**\n\t\t * It was detected that your installation uses a commercial license key,\n\t\t * and the default {@glink features/emoji#emoji-source CKEditor CDN for Emoji plugin data}.\n\t\t *\n\t\t * To avoid this, you can use the {@link module:emoji/emojiconfig~EmojiConfig#definitionsUrl `emoji.definitionsUrl`}\n\t\t * configuration option to provide a URL to your own emoji repository.\n\t\t *\n\t\t * If you want to suppress this warning, while using the default CDN, set this configuration option to `cdn`.\n\t\t *\n\t\t * @error emoji-repository-cdn-use\n\t\t */ logWarning('emoji-repository-cdn-use');\n    }\n    /**\n\t * Returns the emoji repository in a configured version if it is a non-empty array. Returns `null` otherwise.\n\t */ _getItems() {\n        const repository = EmojiRepository._results[this._url.href];\n        return repository && repository.length ? repository : null;\n    }\n    /**\n\t * Loads the emoji repository. If the repository is already loaded, it returns the cached result.\n\t * Otherwise, it fetches the repository from the URL and adds it to the cache.\n\t */ async _loadAndCacheEmoji() {\n        if (EmojiRepository._results[this._url.href]) {\n            // The repository has already been downloaded.\n            return;\n        }\n        const result = await fetch(this._url, {\n            cache: 'force-cache'\n        }).then((response)=>{\n            if (!response.ok) {\n                return [];\n            }\n            return response.json();\n        }).catch(()=>{\n            return [];\n        });\n        EmojiRepository._results[this._url.href] = this._normalizeEmoji(result);\n    }\n    /**\n\t * Normalizes the raw data fetched from CDN. By normalization, we meant:\n\t *\n\t *  * Filter out unsupported emoji (these that will not render correctly),\n\t *  * Prepare skin tone variants if an emoji defines them.\n\t */ _normalizeEmoji(data) {\n        const editor = this.editor;\n        const useCustomFont = editor.config.get('emoji.useCustomFont');\n        const emojiUtils = editor.plugins.get('EmojiUtils');\n        const insertableEmoji = data.filter((item)=>emojiUtils.isEmojiCategoryAllowed(item));\n        // When using a custom font, the feature does not filter any emoji.\n        if (useCustomFont) {\n            return insertableEmoji.map((item)=>emojiUtils.normalizeEmojiSkinTone(item));\n        }\n        const emojiSupportedVersionByOs = emojiUtils.getEmojiSupportedVersionByOs();\n        const container = emojiUtils.createEmojiWidthTestingContainer();\n        document.body.appendChild(container);\n        const results = insertableEmoji.filter((item)=>emojiUtils.isEmojiSupported(item, emojiSupportedVersionByOs, container)).map((item)=>emojiUtils.normalizeEmojiSkinTone(item));\n        container.remove();\n        return results;\n    }\n    /**\n\t * Versioned emoji repository.\n\t */ static _results = {};\n}\n /**\n * Unable to load the emoji repository from the URL.\n *\n * If the URL works properly and there is no disruption of communication, please check your\n * {@glink getting-started/setup/csp Content Security Policy (CSP)} setting and make sure\n * the URL connection is allowed by the editor.\n *\n * @error emoji-repository-load-failed\n */\n\nconst EMOJI_MENTION_MARKER = ':';\nconst EMOJI_SHOW_ALL_OPTION_ID = ':__EMOJI_SHOW_ALL:';\nconst EMOJI_HINT_OPTION_ID = ':__EMOJI_HINT:';\n/**\n * The emoji mention plugin.\n *\n * Introduces the autocomplete of emojis while typing.\n */ class EmojiMention extends Plugin {\n    /**\n\t * Defines a number of displayed items in the auto complete dropdown.\n\t *\n\t * It includes the \"Show all emoji...\" option if the `EmojiPicker` plugin is loaded.\n\t */ _emojiDropdownLimit;\n    /**\n\t * Defines a skin tone that is set in the emoji config.\n\t */ _skinTone;\n    /**\n\t * @inheritDoc\n\t */ static get requires() {\n        return [\n            EmojiRepository,\n            Typing,\n            'Mention'\n        ];\n    }\n    /**\n\t * @inheritDoc\n\t */ static get pluginName() {\n        return 'EmojiMention';\n    }\n    /**\n\t * @inheritDoc\n\t */ static get isOfficialPlugin() {\n        return true;\n    }\n    /**\n\t * @inheritDoc\n\t */ constructor(editor){\n        super(editor);\n        this.editor.config.define('emoji', {\n            dropdownLimit: 6\n        });\n        this._emojiDropdownLimit = editor.config.get('emoji.dropdownLimit');\n        this._skinTone = editor.config.get('emoji.skinTone');\n        this._setupMentionConfiguration(editor);\n    }\n    /**\n\t * Initializes the configuration for emojis in the mention feature.\n\t * If the marker used by emoji mention is already registered, it displays a warning.\n\t * If emoji mention configuration is detected, it does not register it for a second time.\n\t */ _setupMentionConfiguration(editor) {\n        const mergeFieldsPrefix = editor.config.get('mergeFields.prefix');\n        const mentionFeedsConfigs = editor.config.get('mention.feeds');\n        const isEmojiMarkerUsedByMergeFields = mergeFieldsPrefix ? mergeFieldsPrefix[0] === EMOJI_MENTION_MARKER : false;\n        const isEmojiMarkerUsedByMention = mentionFeedsConfigs.filter((config)=>!config._isEmojiMarker).some((config)=>config.marker === EMOJI_MENTION_MARKER);\n        if (isEmojiMarkerUsedByMention || isEmojiMarkerUsedByMergeFields) {\n            /**\n\t\t\t * The `marker` in the `emoji` config is already used by other plugin configuration.\n\t\t\t *\n\t\t\t * @error emoji-config-marker-already-used\n\t\t\t * @param {string} marker Used marker.\n\t\t\t */ logWarning('emoji-config-marker-already-used', {\n                marker: EMOJI_MENTION_MARKER\n            });\n            return;\n        }\n        const isEmojiConfigDefined = mentionFeedsConfigs.some((config)=>config._isEmojiMarker);\n        if (isEmojiConfigDefined) {\n            return;\n        }\n        const emojiMentionFeedConfig = {\n            _isEmojiMarker: true,\n            marker: EMOJI_MENTION_MARKER,\n            dropdownLimit: this._emojiDropdownLimit,\n            itemRenderer: this._customItemRendererFactory(this.editor.t),\n            feed: this._queryEmojiCallbackFactory()\n        };\n        this.editor.config.set('mention.feeds', [\n            ...mentionFeedsConfigs,\n            emojiMentionFeedConfig\n        ]);\n    }\n    /**\n\t * @inheritDoc\n\t */ async init() {\n        const editor = this.editor;\n        this.emojiPickerPlugin = editor.plugins.has('EmojiPicker') ? editor.plugins.get('EmojiPicker') : null;\n        this.emojiRepositoryPlugin = editor.plugins.get('EmojiRepository');\n        this._isEmojiRepositoryAvailable = await this.emojiRepositoryPlugin.isReady();\n        // Override the `mention` command listener if the emoji repository is ready.\n        if (this._isEmojiRepositoryAvailable) {\n            editor.once('ready', this._overrideMentionExecuteListener.bind(this));\n        }\n    }\n    /**\n\t * Returns the `itemRenderer()` callback for mention config.\n\t */ _customItemRendererFactory(t) {\n        return (item)=>{\n            const itemElement = document.createElement('button');\n            itemElement.classList.add('ck');\n            itemElement.classList.add('ck-button');\n            itemElement.classList.add('ck-button_with-text');\n            itemElement.id = `mention-list-item-id${item.id.slice(0, -1)}`;\n            itemElement.type = 'button';\n            itemElement.tabIndex = -1;\n            const labelElement = document.createElement('span');\n            labelElement.classList.add('ck');\n            labelElement.classList.add('ck-button__label');\n            itemElement.appendChild(labelElement);\n            if (item.id === EMOJI_HINT_OPTION_ID) {\n                itemElement.classList.add('ck-list-item-button');\n                itemElement.classList.add('ck-disabled');\n                labelElement.textContent = t('Keep on typing to see the emoji.');\n            } else if (item.id === EMOJI_SHOW_ALL_OPTION_ID) {\n                labelElement.textContent = t('Show all emoji...');\n            } else {\n                labelElement.textContent = `${item.text} ${item.id}`;\n            }\n            return itemElement;\n        };\n    }\n    /**\n\t * Overrides the default mention execute listener to insert an emoji as plain text instead.\n\t */ _overrideMentionExecuteListener() {\n        const editor = this.editor;\n        editor.commands.get('mention').on('execute', (event, data)=>{\n            const eventData = data[0];\n            // Ignore non-emoji auto-complete actions.\n            if (eventData.marker !== EMOJI_MENTION_MARKER) {\n                return;\n            }\n            // Do not propagate the event.\n            event.stop();\n            // Do nothing when executing after selecting a hint message.\n            if (eventData.mention.id === EMOJI_HINT_OPTION_ID) {\n                return;\n            }\n            // Trigger the picker UI.\n            if (eventData.mention.id === EMOJI_SHOW_ALL_OPTION_ID) {\n                const text = [\n                    ...eventData.range.getItems()\n                ].filter((item)=>item.is('$textProxy')).map((item)=>item.data).reduce((result, text)=>result + text, '');\n                editor.model.change((writer)=>{\n                    editor.model.deleteContent(writer.createSelection(eventData.range));\n                });\n                const emojiPickerPlugin = this.emojiPickerPlugin;\n                emojiPickerPlugin.showUI(text.slice(1));\n                setTimeout(()=>{\n                    emojiPickerPlugin.emojiPickerView.focus();\n                });\n            } else {\n                editor.execute('insertText', {\n                    text: eventData.mention.text,\n                    range: eventData.range\n                });\n            }\n        }, {\n            priority: 'high'\n        });\n    }\n    /**\n\t * Returns the `feed()` callback for mention config.\n\t */ _queryEmojiCallbackFactory() {\n        return (searchQuery)=>{\n            // Do not show anything when a query starts with a space.\n            if (searchQuery.startsWith(' ')) {\n                return [];\n            }\n            // Do not show anything when a query starts with a marker character.\n            if (searchQuery.startsWith(EMOJI_MENTION_MARKER)) {\n                return [];\n            }\n            // If the repository plugin is not available, return an empty feed to avoid confusion. See: #17842.\n            if (!this._isEmojiRepositoryAvailable) {\n                return [];\n            }\n            const emojis = this.emojiRepositoryPlugin.getEmojiByQuery(searchQuery).map((emoji)=>{\n                let text = emoji.skins[this._skinTone] || emoji.skins.default;\n                if (this.emojiPickerPlugin) {\n                    text = emoji.skins[this.emojiPickerPlugin.skinTone] || emoji.skins.default;\n                }\n                return {\n                    id: `:${emoji.annotation}:`,\n                    text\n                };\n            });\n            if (!this.emojiPickerPlugin) {\n                return emojis.slice(0, this._emojiDropdownLimit);\n            }\n            const actionItem = {\n                id: searchQuery.length > 1 ? EMOJI_SHOW_ALL_OPTION_ID : EMOJI_HINT_OPTION_ID\n            };\n            return [\n                ...emojis.slice(0, this._emojiDropdownLimit - 1),\n                actionItem\n            ];\n        };\n    }\n}\n\n/**\n * Command that shows the emoji user interface.\n */ class EmojiCommand extends Command {\n    /**\n\t * Updates the command's {@link #isEnabled} based on the current selection.\n\t */ refresh() {\n        const editor = this.editor;\n        const model = editor.model;\n        const schema = model.schema;\n        const selection = model.document.selection;\n        this.isEnabled = schema.checkChild(selection.getFirstPosition(), '$text');\n    }\n    /**\n\t * Opens emoji user interface for the current document selection.\n\t *\n\t * @fires execute\n\t * @param [searchValue=''] A default query used to filer the grid when opening the UI.\n\t */ execute(searchValue = '') {\n        const emojiPickerPlugin = this.editor.plugins.get('EmojiPicker');\n        emojiPickerPlugin.showUI(searchValue);\n    }\n}\n\n/**\n * A grid of emoji tiles. It allows browsing emojis and selecting them to be inserted into the content.\n */ class EmojiGridView extends View {\n    /**\n\t * A collection of the child tile views. Each tile represents a particular emoji.\n\t */ tiles;\n    /**\n\t * Tracks information about the DOM focus in the grid.\n\t */ focusTracker;\n    /**\n\t * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t */ keystrokes;\n    /**\n\t * An array containing all emojis grouped by their categories.\n\t */ emojiCategories;\n    /**\n\t * A collection of all already created tile views. Each tile represents a particular emoji.\n\t * The cached tiles collection is used for efficiency purposes to avoid re-creating a particular\n\t * tile again when the grid view has changed.\n\t */ cachedTiles;\n    /**\n\t * A callback used to filter grid items by a specified query.\n\t */ _getEmojiByQuery;\n    /**\n\t * @inheritDoc\n\t */ constructor(locale, { categoryName, emojiCategories, getEmojiByQuery, skinTone }){\n        super(locale);\n        this.set('isEmpty', true);\n        this.set('categoryName', categoryName);\n        this.set('skinTone', skinTone);\n        this.tiles = this.createCollection();\n        this.cachedTiles = this.createCollection();\n        this.focusTracker = new FocusTracker();\n        this.keystrokes = new KeystrokeHandler();\n        this._getEmojiByQuery = getEmojiByQuery;\n        this.emojiCategories = emojiCategories;\n        const bind = this.bindTemplate;\n        this.setTemplate({\n            tag: 'div',\n            children: [\n                {\n                    tag: 'div',\n                    attributes: {\n                        role: 'grid',\n                        class: [\n                            'ck',\n                            'ck-emoji__grid'\n                        ]\n                    },\n                    children: this.tiles\n                }\n            ],\n            attributes: {\n                role: 'tabpanel',\n                class: [\n                    'ck',\n                    'ck-emoji__tiles',\n                    // To avoid issues with focus cycling, ignore a grid when it's empty.\n                    bind.if('isEmpty', 'ck-hidden', (value)=>value)\n                ]\n            }\n        });\n        addKeyboardHandlingForGrid({\n            keystrokeHandler: this.keystrokes,\n            focusTracker: this.focusTracker,\n            gridItems: this.tiles,\n            numberOfColumns: ()=>global.window.getComputedStyle(this.element.firstChild) // Responsive `.ck-emoji-grid__tiles`.\n                .getPropertyValue('grid-template-columns').split(' ').length,\n            uiLanguageDirection: this.locale && this.locale.uiLanguageDirection\n        });\n    }\n    /**\n\t * @inheritDoc\n\t */ render() {\n        super.render();\n        this.keystrokes.listenTo(this.element);\n    }\n    /**\n\t * @inheritDoc\n\t */ destroy() {\n        super.destroy();\n        this.keystrokes.destroy();\n        this.focusTracker.destroy();\n    }\n    /**\n\t * Focuses the first focusable in {@link ~EmojiGridView#tiles} if available.\n\t */ focus() {\n        const firstTile = this.tiles.first;\n        if (firstTile) {\n            firstTile.focus();\n        }\n    }\n    /**\n\t * Filters the grid view by the given regular expression.\n\t *\n\t * It filters either by the pattern or an emoji category, but never both.\n\t *\n\t * @param pattern Expression to search or `null` when filter by category name.\n\t */ filter(pattern) {\n        const { matchingItems, allItems } = pattern ? this._getItemsByQuery(pattern.source) : this._getItemsByCategory();\n        this._updateGrid(matchingItems);\n        this.set('isEmpty', matchingItems.length === 0);\n        return {\n            resultsCount: matchingItems.length,\n            totalItemsCount: allItems.length\n        };\n    }\n    /**\n\t * Filters emojis to show based on the specified query phrase.\n\t *\n\t * @param query A query used to filter the grid.\n\t */ _getItemsByQuery(query) {\n        return {\n            matchingItems: this._getEmojiByQuery(query),\n            allItems: this.emojiCategories.flatMap((group)=>group.items)\n        };\n    }\n    /**\n\t * Returns emojis that belong to the specified category.\n\t */ _getItemsByCategory() {\n        const emojiCategory = this.emojiCategories.find((item)=>item.title === this.categoryName);\n        const { items } = emojiCategory;\n        return {\n            matchingItems: items,\n            allItems: items\n        };\n    }\n    /**\n\t * Updates the grid by removing the existing items and insert the new ones.\n\t *\n\t * @param items An array of items to insert.\n\t */ _updateGrid(items) {\n        // Clean-up.\n        [\n            ...this.tiles\n        ].forEach((item)=>{\n            this.focusTracker.remove(item);\n            this.tiles.remove(item);\n        });\n        items// Create tiles from matching results.\n        .map((item)=>{\n            const emoji = item.skins[this.skinTone] || item.skins.default;\n            return this.cachedTiles.get(emoji) || this._createTile(emoji, item.annotation);\n        })// Insert new elements.\n        .forEach((item)=>{\n            this.tiles.add(item);\n            this.focusTracker.add(item);\n        });\n    }\n    /**\n\t * Creates a new tile for the grid. Created tile is added to the {@link #cachedTiles} collection for further usage, if needed.\n\t *\n\t * @param emoji The emoji itself.\n\t * @param name The name of the emoji (e.g. \"Smiling Face with Smiling Eyes\").\n\t */ _createTile(emoji, name) {\n        const tile = new ButtonView(this.locale);\n        tile.viewUid = emoji;\n        tile.extendTemplate({\n            attributes: {\n                class: [\n                    'ck-emoji__tile'\n                ]\n            }\n        });\n        tile.set({\n            label: emoji,\n            tooltip: name,\n            withText: true,\n            ariaLabel: name,\n            // To improve accessibility, disconnect a button and its label connection so that screen\n            // readers can read the `[aria-label]` attribute directly from the more descriptive button.\n            ariaLabelledBy: undefined\n        });\n        tile.on('execute', ()=>{\n            this.fire('execute', {\n                name,\n                emoji\n            });\n        });\n        this.cachedTiles.add(tile);\n        return tile;\n    }\n}\n\n/**\n * A class representing the navigation part of the emoji UI.\n * It is responsible allowing the user to select a particular emoji category.\n */ class EmojiCategoriesView extends View {\n    /**\n\t * Tracks information about the DOM focus in the grid.\n\t */ focusTracker;\n    /**\n\t * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t */ keystrokes;\n    /**\n\t * Helps cycling over focusable children in the input view.\n\t */ focusCycler;\n    /**\n\t * A collection of the categories buttons.\n\t */ buttonViews;\n    /**\n\t * @inheritDoc\n\t */ constructor(locale, { emojiCategories, categoryName }){\n        super(locale);\n        this.buttonViews = this.createCollection(emojiCategories.map((emojiCategory)=>this._createCategoryButton(emojiCategory)));\n        this.focusTracker = new FocusTracker();\n        this.keystrokes = new KeystrokeHandler();\n        this.focusCycler = new FocusCycler({\n            focusables: this.buttonViews,\n            focusTracker: this.focusTracker,\n            keystrokeHandler: this.keystrokes,\n            actions: {\n                focusPrevious: 'arrowleft',\n                focusNext: 'arrowright'\n            }\n        });\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-emoji__categories-list'\n                ],\n                role: 'tablist'\n            },\n            children: this.buttonViews\n        });\n        this.on('change:categoryName', (event, name, newValue, oldValue)=>{\n            const oldCategoryButton = this.buttonViews.find((button)=>button.tooltip === oldValue);\n            if (oldCategoryButton) {\n                oldCategoryButton.isOn = false;\n            }\n            const newCategoryButton = this.buttonViews.find((button)=>button.tooltip === newValue);\n            newCategoryButton.isOn = true;\n        });\n        this.set('categoryName', categoryName);\n    }\n    /**\n\t * @inheritDoc\n\t */ render() {\n        super.render();\n        this.buttonViews.forEach((buttonView)=>{\n            this.focusTracker.add(buttonView);\n        });\n        this.keystrokes.listenTo(this.element);\n    }\n    /**\n\t * @inheritDoc\n\t */ destroy() {\n        super.destroy();\n        this.focusTracker.destroy();\n        this.keystrokes.destroy();\n        this.buttonViews.destroy();\n    }\n    /**\n\t * @inheritDoc\n\t */ focus() {\n        this.buttonViews.first.focus();\n    }\n    /**\n\t * Marks all categories buttons as enabled (clickable).\n\t */ enableCategories() {\n        this.buttonViews.forEach((buttonView)=>{\n            buttonView.isEnabled = true;\n        });\n    }\n    /**\n\t * Marks all categories buttons as disabled (non-clickable).\n\t */ disableCategories() {\n        this.buttonViews.forEach((buttonView)=>{\n            buttonView.set({\n                class: '',\n                isEnabled: false,\n                isOn: false\n            });\n        });\n    }\n    /**\n\t * Creates a button representing a category item.\n\t */ _createCategoryButton(emojiCategory) {\n        const buttonView = new ButtonView();\n        const bind = buttonView.bindTemplate;\n        // A `[role=\"tab\"]` element requires also the `[aria-selected]` attribute with its state.\n        buttonView.extendTemplate({\n            attributes: {\n                'aria-selected': bind.to('isOn', (value)=>value.toString()),\n                class: [\n                    'ck-emoji__category-item'\n                ]\n            }\n        });\n        buttonView.set({\n            ariaLabel: emojiCategory.title,\n            label: emojiCategory.icon,\n            role: 'tab',\n            tooltip: emojiCategory.title,\n            withText: true,\n            // To improve accessibility, disconnect a button and its label connection so that screen\n            // readers can read the `[aria-label]` attribute directly from the more descriptive button.\n            ariaLabelledBy: undefined\n        });\n        buttonView.on('execute', ()=>{\n            this.categoryName = emojiCategory.title;\n        });\n        buttonView.on('change:isEnabled', ()=>{\n            if (buttonView.isEnabled && buttonView.tooltip === this.categoryName) {\n                buttonView.isOn = true;\n            }\n        });\n        return buttonView;\n    }\n}\n\n/**\n * A view responsible for providing an input element that allows filtering emoji by the provided query.\n */ class EmojiSearchView extends View {\n    /**\n\t * The find in text input view that stores the searched string.\n\t */ inputView;\n    /**\n\t * An instance of the `EmojiGridView`.\n\t */ gridView;\n    /**\n\t * @inheritDoc\n\t */ constructor(locale, { gridView, resultsView }){\n        super(locale);\n        this.gridView = gridView;\n        const t = locale.t;\n        this.inputView = new SearchTextView(this.locale, {\n            queryView: {\n                label: t('Find an emoji (min. 2 characters)'),\n                creator: createLabeledInputText\n            },\n            filteredView: this.gridView,\n            infoView: {\n                instance: resultsView\n            }\n        });\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-search'\n                ],\n                tabindex: '-1'\n            },\n            children: [\n                this.inputView.queryView\n            ]\n        });\n        // Pass through the `search` event to handle it by a parent view.\n        this.inputView.delegate('search').to(this);\n    }\n    /**\n\t * @inheritDoc\n\t */ destroy() {\n        super.destroy();\n        this.inputView.destroy();\n    }\n    /**\n\t * Searches the {@link #gridView} for the given query.\n\t *\n\t * @param query The search query string.\n\t */ search(query) {\n        const regExp = query ? new RegExp(escapeRegExp(query), 'ig') : null;\n        const filteringResults = this.gridView.filter(regExp);\n        this.inputView.fire('search', {\n            query,\n            ...filteringResults\n        });\n    }\n    /**\n\t * Allows defining the default value in the search text field.\n\t *\n\t * @param value The new value.\n\t */ setInputValue(value) {\n        if (!value) {\n            this.inputView.queryView.fieldView.reset();\n        } else {\n            this.inputView.queryView.fieldView.value = value;\n        }\n    }\n    /**\n\t * Returns an input provided by a user in the search text field.\n\t */ getInputValue() {\n        return this.inputView.queryView.fieldView.element.value;\n    }\n    /**\n\t * @inheritDoc\n\t */ focus() {\n        this.inputView.focus();\n    }\n}\n\n/**\n * A view responsible for selecting a skin tone for an emoji.\n */ class EmojiToneView extends View {\n    /**\n\t * A dropdown element for selecting an active skin tone.\n\t */ dropdownView;\n    /**\n\t * An array of available skin tones.\n\t */ _skinTones;\n    /**\n\t * @inheritDoc\n\t */ constructor(locale, { skinTone, skinTones }){\n        super(locale);\n        this.set('skinTone', skinTone);\n        this._skinTones = skinTones;\n        const t = locale.t;\n        const accessibleLabel = t('Select skin tone');\n        const dropdownView = createDropdown(locale);\n        const itemDefinitions = new Collection();\n        for (const { id, icon, tooltip } of this._skinTones){\n            const def = {\n                type: 'button',\n                model: new ViewModel({\n                    value: id,\n                    label: icon,\n                    ariaLabel: tooltip,\n                    tooltip,\n                    tooltipPosition: 'e',\n                    role: 'menuitemradio',\n                    withText: true,\n                    // To improve accessibility, disconnect a button and its label connection so that screen\n                    // readers can read the `[aria-label]` attribute directly from the more descriptive button.\n                    ariaLabelledBy: undefined\n                })\n            };\n            def.model.bind('isOn').to(this, 'skinTone', (value)=>value === id);\n            itemDefinitions.add(def);\n        }\n        addListToDropdown(dropdownView, itemDefinitions, {\n            ariaLabel: accessibleLabel,\n            role: 'menu'\n        });\n        dropdownView.buttonView.set({\n            label: this._getSkinTone().icon,\n            ariaLabel: accessibleLabel,\n            ariaLabelledBy: undefined,\n            isOn: false,\n            withText: true,\n            tooltip: accessibleLabel\n        });\n        this.dropdownView = dropdownView;\n        // Execute command when an item from the dropdown is selected.\n        this.listenTo(dropdownView, 'execute', (evt)=>{\n            this.skinTone = evt.source.value;\n        });\n        dropdownView.buttonView.bind('label').to(this, 'skinTone', ()=>{\n            return this._getSkinTone().icon;\n        });\n        dropdownView.buttonView.bind('ariaLabel').to(this, 'skinTone', ()=>{\n            // Render a current state, but also what the dropdown does.\n            return `${this._getSkinTone().tooltip}, ${accessibleLabel}`;\n        });\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-emoji__skin-tone'\n                ]\n            },\n            children: [\n                dropdownView\n            ]\n        });\n    }\n    /**\n\t * @inheritDoc\n\t */ focus() {\n        this.dropdownView.buttonView.focus();\n    }\n    /**\n\t * Helper method for receiving an object describing the active skin tone.\n\t */ _getSkinTone() {\n        return this._skinTones.find((tone)=>tone.id === this.skinTone);\n    }\n}\n\n/**\n * A view that glues pieces of the emoji panel together.\n */ class EmojiPickerView extends View {\n    /**\n\t * A collection of the focusable children of the view.\n\t */ items;\n    /**\n\t * Tracks information about the DOM focus in the view.\n\t */ focusTracker;\n    /**\n\t * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t */ keystrokes;\n    /**\n\t * Helps cycling over focusable {@link #items} in the view.\n\t */ focusCycler;\n    /**\n\t * An instance of the `EmojiSearchView`.\n\t */ searchView;\n    /**\n\t * An instance of the `EmojiToneView`.\n\t */ toneView;\n    /**\n\t * An instance of the `EmojiCategoriesView`.\n\t */ categoriesView;\n    /**\n\t * An instance of the `EmojiGridView`.\n\t */ gridView;\n    /**\n\t * An instance of the `EmojiGridView`.\n\t */ infoView;\n    /**\n\t * @inheritDoc\n\t */ constructor(locale, { emojiCategories, getEmojiByQuery, skinTone, skinTones }){\n        super(locale);\n        const categoryName = emojiCategories[0].title;\n        this.gridView = new EmojiGridView(locale, {\n            categoryName,\n            emojiCategories,\n            getEmojiByQuery,\n            skinTone\n        });\n        this.infoView = new SearchInfoView();\n        this.searchView = new EmojiSearchView(locale, {\n            gridView: this.gridView,\n            resultsView: this.infoView\n        });\n        this.categoriesView = new EmojiCategoriesView(locale, {\n            emojiCategories,\n            categoryName\n        });\n        this.toneView = new EmojiToneView(locale, {\n            skinTone,\n            skinTones\n        });\n        this.items = this.createCollection([\n            this.searchView,\n            this.toneView,\n            this.categoriesView,\n            this.gridView,\n            this.infoView\n        ]);\n        this.focusTracker = new FocusTracker();\n        this.keystrokes = new KeystrokeHandler();\n        this.focusCycler = new FocusCycler({\n            focusables: this.items,\n            focusTracker: this.focusTracker,\n            keystrokeHandler: this.keystrokes,\n            actions: {\n                focusPrevious: 'shift + tab',\n                focusNext: 'tab'\n            }\n        });\n        this.setTemplate({\n            tag: 'div',\n            children: [\n                {\n                    tag: 'div',\n                    children: [\n                        this.searchView,\n                        this.toneView\n                    ],\n                    attributes: {\n                        class: [\n                            'ck',\n                            'ck-emoji__search'\n                        ]\n                    }\n                },\n                this.categoriesView,\n                this.gridView,\n                {\n                    tag: 'div',\n                    children: [\n                        this.infoView\n                    ],\n                    attributes: {\n                        class: [\n                            'ck',\n                            'ck-search__results'\n                        ]\n                    }\n                }\n            ],\n            attributes: {\n                tabindex: '-1',\n                class: [\n                    'ck',\n                    'ck-emoji',\n                    'ck-search'\n                ]\n            }\n        });\n        this._setupEventListeners();\n    }\n    /**\n\t * @inheritDoc\n\t */ render() {\n        super.render();\n        this.focusTracker.add(this.searchView.element);\n        this.focusTracker.add(this.toneView.element);\n        this.focusTracker.add(this.categoriesView.element);\n        this.focusTracker.add(this.gridView.element);\n        this.focusTracker.add(this.infoView.element);\n        // Start listening for the keystrokes coming from #element.\n        this.keystrokes.listenTo(this.element);\n    }\n    /**\n\t * @inheritDoc\n\t */ destroy() {\n        super.destroy();\n        this.focusTracker.destroy();\n        this.keystrokes.destroy();\n    }\n    /**\n\t * Focuses the search input.\n\t */ focus() {\n        this.searchView.focus();\n    }\n    /**\n\t * Initializes interactions between sub-views.\n\t */ _setupEventListeners() {\n        const t = this.locale.t;\n        // Disable the category switcher when filtering by a query.\n        this.searchView.on('search', (evt, data)=>{\n            if (data.query) {\n                this.categoriesView.disableCategories();\n            } else {\n                this.categoriesView.enableCategories();\n            }\n        });\n        // Show a user-friendly message depending on the search query.\n        this.searchView.on('search', (evt, data)=>{\n            if (data.query.length === 1) {\n                this.infoView.set({\n                    primaryText: t('Keep on typing to see the emoji.'),\n                    secondaryText: t('The query must contain at least two characters.'),\n                    isVisible: true\n                });\n            } else if (!data.resultsCount) {\n                this.infoView.set({\n                    primaryText: t('No emojis were found matching \"%0\".', data.query),\n                    secondaryText: t('Please try a different phrase or check the spelling.'),\n                    isVisible: true\n                });\n            } else {\n                this.infoView.set({\n                    isVisible: false\n                });\n            }\n        });\n        // Emit an update event to react to balloon dimensions changes.\n        this.searchView.on('search', ()=>{\n            this.fire('update');\n            this.gridView.element.scrollTo(0, 0);\n        });\n        // Update the grid of emojis when the selected category is changed.\n        this.categoriesView.on('change:categoryName', (ev, args, categoryName)=>{\n            this.gridView.categoryName = categoryName;\n            this.searchView.search('');\n        });\n        // Update the grid of emojis when the selected skin tone is changed.\n        // In such a case, the displayed emoji should use an updated skin tone value.\n        this.toneView.on('change:skinTone', (evt, propertyName, newValue)=>{\n            this.gridView.skinTone = newValue;\n            this.searchView.search(this.searchView.getInputValue());\n        });\n    }\n}\n\n/**\n * The emoji picker form view.\n */ class EmojiPickerFormView extends View {\n    /**\n\t * The Back button view displayed in the header.\n\t */ backButtonView;\n    /**\n\t * Tracks information about DOM focus in the form.\n\t */ focusTracker = new FocusTracker();\n    /**\n\t * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t */ keystrokes = new KeystrokeHandler();\n    /**\n\t * A collection of child views.\n\t */ children;\n    /**\n\t * A collection of views that can be focused in the form.\n\t */ _focusables = new ViewCollection();\n    /**\n\t * Helps cycling over {@link #_focusables} in the form.\n\t */ _focusCycler;\n    /**\n\t * Creates an instance of the {@link module:emoji/ui/emojipickerformview~EmojiPickerFormView} class.\n\t *\n\t * Also see {@link #render}.\n\t *\n\t * @param locale The localization services instance.\n\t */ constructor(locale){\n        super(locale);\n        this.backButtonView = this._createBackButton();\n        this.children = this.createCollection([\n            this._createHeaderView()\n        ]);\n        this._focusCycler = new FocusCycler({\n            focusables: this._focusables,\n            focusTracker: this.focusTracker,\n            keystrokeHandler: this.keystrokes,\n            actions: {\n                // Navigate form fields backward using the Shift + Tab keystroke.\n                focusPrevious: 'shift + tab',\n                // Navigate form fields forwards using the Tab key.\n                focusNext: 'tab'\n            }\n        });\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-form',\n                    'ck-emoji-picker-form',\n                    'ck-responsive-form'\n                ],\n                // https://github.com/ckeditor/ckeditor5-link/issues/90\n                tabindex: '-1'\n            },\n            children: this.children\n        });\n    }\n    /**\n\t * @inheritDoc\n\t */ render() {\n        super.render();\n        const childViews = [\n            ...this.children.filter(isFocusable),\n            this.backButtonView\n        ];\n        childViews.forEach((v)=>{\n            // Register the view as focusable.\n            this._focusables.add(v);\n            // Register the view in the focus tracker.\n            this.focusTracker.add(v.element);\n            // Register the view in the focus cycler to avoid nested focus cycles traps.\n            if (isViewWithFocusCycler(v)) {\n                this._focusCycler.chain(v.focusCycler);\n            }\n        });\n        // Start listening for the keystrokes coming from #element.\n        this.keystrokes.listenTo(this.element);\n    }\n    /**\n\t * @inheritDoc\n\t */ destroy() {\n        super.destroy();\n        this.focusTracker.destroy();\n        this.keystrokes.destroy();\n    }\n    /**\n\t * Focuses the fist {@link #_focusables} in the form.\n\t */ focus() {\n        this._focusCycler.focusFirst();\n    }\n    /**\n\t * Creates a back button view that cancels the form.\n\t */ _createBackButton() {\n        const t = this.locale.t;\n        const backButton = new ButtonView(this.locale);\n        backButton.set({\n            class: 'ck-button-back',\n            label: t('Back'),\n            icon: IconPreviousArrow,\n            tooltip: true\n        });\n        backButton.delegate('execute').to(this, 'cancel');\n        return backButton;\n    }\n    /**\n\t * Creates a header view for the form.\n\t */ _createHeaderView() {\n        const t = this.locale.t;\n        const header = new FormHeaderView(this.locale, {\n            label: t('Emoji picker')\n        });\n        header.children.add(this.backButtonView, 0);\n        return header;\n    }\n}\n\nconst VISUAL_SELECTION_MARKER_NAME = 'emoji-picker';\n/**\n * The emoji picker plugin.\n *\n * Introduces the `'emoji'` dropdown.\n */ class EmojiPicker extends Plugin {\n    /**\n\t * @inheritDoc\n\t */ static get requires() {\n        return [\n            EmojiRepository,\n            ContextualBalloon,\n            Dialog,\n            Typing\n        ];\n    }\n    /**\n\t * @inheritDoc\n\t */ static get pluginName() {\n        return 'EmojiPicker';\n    }\n    /**\n\t * @inheritDoc\n\t */ static get isOfficialPlugin() {\n        return true;\n    }\n    /**\n\t * @inheritDoc\n\t */ async init() {\n        const editor = this.editor;\n        this.balloonPlugin = editor.plugins.get('ContextualBalloon');\n        this.emojiRepositoryPlugin = editor.plugins.get('EmojiRepository');\n        // Skip registering a button in the toolbar and list item in the menu bar if the emoji repository is not ready.\n        if (!await this.emojiRepositoryPlugin.isReady()) {\n            return;\n        }\n        const command = new EmojiCommand(editor);\n        editor.commands.add('emoji', command);\n        editor.ui.componentFactory.add('emoji', ()=>{\n            const button = this._createButton(ButtonView, command);\n            button.set({\n                tooltip: true\n            });\n            return button;\n        });\n        editor.ui.componentFactory.add('menuBar:emoji', ()=>{\n            return this._createButton(MenuBarMenuListItemButtonView, command);\n        });\n        this._setupConversion();\n    }\n    /**\n\t * @inheritDoc\n\t */ destroy() {\n        super.destroy();\n        if (this.emojiPickerView) {\n            this.emojiPickerView.destroy();\n        }\n    }\n    /**\n\t * Represents an active skin tone. Its value depends on the emoji UI plugin.\n\t *\n\t * Before opening the UI for the first time, the returned value is read from the editor configuration.\n\t * Otherwise, it reflects the user's intention.\n\t */ get skinTone() {\n        if (!this.emojiPickerView) {\n            return this.editor.config.get('emoji.skinTone');\n        }\n        return this.emojiPickerView.gridView.skinTone;\n    }\n    /**\n\t * Displays the balloon with the emoji picker.\n\t *\n\t * @param [searchValue=''] A default query used to filer the grid when opening the UI.\n\t */ showUI(searchValue = '') {\n        // Show visual selection on a text when the contextual balloon is displayed.\n        // See #17654.\n        this._showFakeVisualSelection();\n        if (!this.emojiPickerView) {\n            this.emojiPickerView = this._createEmojiPickerView();\n        }\n        if (searchValue) {\n            this.emojiPickerView.searchView.setInputValue(searchValue);\n        }\n        this.emojiPickerView.searchView.search(searchValue);\n        if (!this.emojiPickerFormView) {\n            this.emojiPickerFormView = this._createEmojiPickerFormView();\n        }\n        if (!this.balloonPlugin.hasView(this.emojiPickerFormView)) {\n            // Show back button if there is another balloon view visible.\n            this.emojiPickerFormView.backButtonView.isVisible = !!this.balloonPlugin.visibleView;\n            this.balloonPlugin.add({\n                view: this.emojiPickerFormView,\n                position: this._getBalloonPositionData(),\n                balloonClassName: 'ck-emoji-picker-balloon'\n            });\n        }\n        this.emojiPickerView.focus();\n    }\n    /**\n\t * Creates a button for toolbar and menu bar that will show the emoji dialog.\n\t */ _createButton(ViewClass, command) {\n        const buttonView = new ViewClass(this.editor.locale);\n        const t = this.editor.locale.t;\n        buttonView.bind('isEnabled').to(command, 'isEnabled');\n        buttonView.set({\n            label: t('Emoji'),\n            icon: IconEmoji,\n            isToggleable: true\n        });\n        buttonView.on('execute', ()=>{\n            this.editor.editing.view.scrollToTheSelection();\n            this.showUI();\n        });\n        return buttonView;\n    }\n    /**\n\t * Creates an instance of the `EmojiPickerView` class that represents an emoji balloon.\n\t */ _createEmojiPickerView() {\n        const emojiPickerView = new EmojiPickerView(this.editor.locale, {\n            emojiCategories: this.emojiRepositoryPlugin.getEmojiCategories(),\n            skinTone: this.editor.config.get('emoji.skinTone'),\n            skinTones: this.emojiRepositoryPlugin.getSkinTones(),\n            getEmojiByQuery: (query)=>{\n                return this.emojiRepositoryPlugin.getEmojiByQuery(query);\n            }\n        });\n        // Insert an emoji on a tile click.\n        this.listenTo(emojiPickerView.gridView, 'execute', (evt, data)=>{\n            const editor = this.editor;\n            const textToInsert = data.emoji;\n            this._hideUI();\n            editor.execute('insertText', {\n                text: textToInsert\n            });\n        });\n        return emojiPickerView;\n    }\n    /**\n\t * Creates an instance of the `EmojiPickerFormView` class that represents a balloon with the emoji picker.\n\t */ _createEmojiPickerFormView() {\n        const emojiPickerFormView = new EmojiPickerFormView(this.editor.locale);\n        emojiPickerFormView.children.add(this.emojiPickerView);\n        // Update the balloon position when layout is changed.\n        this.listenTo(this.emojiPickerView, 'update', ()=>{\n            if (this.balloonPlugin.visibleView === emojiPickerFormView) {\n                this.balloonPlugin.updatePosition();\n            }\n        });\n        // Close the dialog when the back button is clicked.\n        this.listenTo(emojiPickerFormView, 'cancel', ()=>{\n            this._hideUI();\n        });\n        // Close the panel on `Esc` key press when the **actions have focus**.\n        emojiPickerFormView.keystrokes.set('Esc', (data, cancel)=>{\n            this._hideUI();\n            cancel();\n        });\n        // Close the dialog when clicking outside of it.\n        clickOutsideHandler({\n            emitter: emojiPickerFormView,\n            contextElements: [\n                this.balloonPlugin.view.element\n            ],\n            callback: ()=>{\n                // Focusing on the editable during a click outside the balloon panel might\n                // cause the selection to move to the beginning of the editable, so we avoid\n                // focusing on it during this action.\n                // See: https://github.com/ckeditor/ckeditor5/issues/18253\n                this._hideUI(false);\n            },\n            activator: ()=>this.balloonPlugin.visibleView === emojiPickerFormView\n        });\n        return emojiPickerFormView;\n    }\n    /**\n\t * Hides the balloon with the emoji picker.\n\t *\n\t * @param updateFocus Whether to focus the editor after closing the emoji picker.\n\t */ _hideUI(updateFocus = true) {\n        this.balloonPlugin.remove(this.emojiPickerFormView);\n        this.emojiPickerView.searchView.setInputValue('');\n        if (updateFocus) {\n            this.editor.editing.view.focus();\n        }\n        this._hideFakeVisualSelection();\n    }\n    /**\n\t * Registers converters.\n\t */ _setupConversion() {\n        const editor = this.editor;\n        // Renders a fake visual selection marker on an expanded selection.\n        editor.conversion.for('editingDowncast').markerToHighlight({\n            model: VISUAL_SELECTION_MARKER_NAME,\n            view: {\n                classes: [\n                    'ck-fake-emoji-selection'\n                ]\n            }\n        });\n        // Renders a fake visual selection marker on a collapsed selection.\n        editor.conversion.for('editingDowncast').markerToElement({\n            model: VISUAL_SELECTION_MARKER_NAME,\n            view: (data, { writer })=>{\n                if (!data.markerRange.isCollapsed) {\n                    return null;\n                }\n                const markerElement = writer.createUIElement('span');\n                writer.addClass([\n                    'ck-fake-emoji-selection',\n                    'ck-fake-emoji-selection_collapsed'\n                ], markerElement);\n                return markerElement;\n            }\n        });\n    }\n    /**\n\t * Returns positioning options for the {@link #balloonPlugin}. They control the way the balloon is attached\n\t * to the target element or selection.\n\t */ _getBalloonPositionData() {\n        const view = this.editor.editing.view;\n        const viewDocument = view.document;\n        // Set a target position by converting view selection range to DOM.\n        const target = ()=>view.domConverter.viewRangeToDom(viewDocument.selection.getFirstRange());\n        return {\n            target\n        };\n    }\n    /**\n\t * Displays a fake visual selection when the contextual balloon is displayed.\n\t *\n\t * This adds an 'emoji-picker' marker into the document that is rendered as a highlight on selected text fragment.\n\t */ _showFakeVisualSelection() {\n        const model = this.editor.model;\n        model.change((writer)=>{\n            const range = model.document.selection.getFirstRange();\n            if (model.markers.has(VISUAL_SELECTION_MARKER_NAME)) {\n                writer.updateMarker(VISUAL_SELECTION_MARKER_NAME, {\n                    range\n                });\n            } else {\n                if (range.start.isAtEnd) {\n                    const startPosition = range.start.getLastMatchingPosition(({ item })=>!model.schema.isContent(item), {\n                        boundaries: range\n                    });\n                    writer.addMarker(VISUAL_SELECTION_MARKER_NAME, {\n                        usingOperation: false,\n                        affectsData: false,\n                        range: writer.createRange(startPosition, range.end)\n                    });\n                } else {\n                    writer.addMarker(VISUAL_SELECTION_MARKER_NAME, {\n                        usingOperation: false,\n                        affectsData: false,\n                        range\n                    });\n                }\n            }\n        });\n    }\n    /**\n\t * Hides the fake visual selection.\n\t */ _hideFakeVisualSelection() {\n        const model = this.editor.model;\n        if (model.markers.has(VISUAL_SELECTION_MARKER_NAME)) {\n            model.change((writer)=>{\n                writer.removeMarker(VISUAL_SELECTION_MARKER_NAME);\n            });\n        }\n    }\n}\n\n/**\n * The emoji plugin.\n *\n * This is a \"glue\" plugin which loads the following plugins:\n *\n * * {@link module:emoji/emojimention~EmojiMention},\n * * {@link module:emoji/emojipicker~EmojiPicker},\n */ class Emoji extends Plugin {\n    /**\n\t * @inheritDoc\n\t */ static get requires() {\n        return [\n            EmojiMention,\n            EmojiPicker\n        ];\n    }\n    /**\n\t * @inheritDoc\n\t */ static get pluginName() {\n        return 'Emoji';\n    }\n    /**\n\t * @inheritDoc\n\t */ static get isOfficialPlugin() {\n        return true;\n    }\n}\n\nexport { Emoji, EmojiCommand, EmojiMention, EmojiPicker, EmojiRepository, EmojiUtils };\n//# sourceMappingURL=index.js.map\n","/**\n * @license Copyright (c) 2023, Koala Interactive SAS\n * For licensing, see https://github.com/koala-interactive/is-emoji-supported/blob/master/LICENSE.md\n */\n\n/**\n * @module emoji/utils/isemojisupported\n */\n\n/**\n * Checks if the two pixels parts are the same using canvas.\n */\nexport default function isEmojiSupported( unicode: string ): boolean {\n\tconst ctx = getCanvas();\n\n\t/* istanbul ignore next -- @preserve */\n\tif ( !ctx ) {\n\t\treturn false;\n\t}\n\n\tconst CANVAS_HEIGHT = 25;\n\tconst CANVAS_WIDTH = 20;\n\tconst textSize = Math.floor( CANVAS_HEIGHT / 2 );\n\n\t// Initialize canvas context.\n\tctx.font = textSize + 'px Arial, Sans-Serif';\n\tctx.textBaseline = 'top';\n\tctx.canvas.width = CANVAS_WIDTH * 2;\n\tctx.canvas.height = CANVAS_HEIGHT;\n\n\tctx.clearRect( 0, 0, CANVAS_WIDTH * 2, CANVAS_HEIGHT );\n\n\t// Draw in red on the left.\n\tctx.fillStyle = '#FF0000';\n\tctx.fillText( unicode, 0, 22 );\n\n\t// Draw in blue on right.\n\tctx.fillStyle = '#0000FF';\n\tctx.fillText( unicode, CANVAS_WIDTH, 22 );\n\n\tconst a = ctx.getImageData( 0, 0, CANVAS_WIDTH, CANVAS_HEIGHT ).data;\n\tconst count = a.length;\n\tlet i = 0;\n\n\t// Search the first visible pixel.\n\tfor ( ; i < count && !a[ i + 3 ]; i += 4 );\n\n\t// No visible pixel.\n\t/* istanbul ignore next -- @preserve */\n\tif ( i >= count ) {\n\t\treturn false;\n\t}\n\n\t// Emoji has immutable color, so we check the color of the emoji in two different colors.\n\t// the result show be the same.\n\tconst x = CANVAS_WIDTH + ( ( i / 4 ) % CANVAS_WIDTH );\n\tconst y = Math.floor( i / 4 / CANVAS_WIDTH );\n\tconst b = ctx.getImageData( x, y, 1, 1 ).data;\n\n\t/* istanbul ignore next -- @preserve */\n\tif ( a[ i ] !== b[ 0 ] || a[ i + 2 ] !== b[ 2 ]) {\n\t\treturn false;\n\t}\n\n\t//Some emojis consist of different ones, so they will show multiple characters if they are not supported.\n\t/* istanbul ignore next -- @preserve */\n\tif ( ctx.measureText( unicode ).width >= CANVAS_WIDTH ) {\n\t\treturn false;\n\t}\n\n\t// Supported.\n\treturn true;\n};\n\nfunction getCanvas(): CanvasRenderingContext2D | null {\n\ttry {\n\t\treturn document.createElement( 'canvas' ).getContext( '2d', { willReadFrequently: true } );\n\t} catch {\n\t\t/* istanbul ignore next -- @preserve */\n\t\treturn null;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\nimport { Plugin } from 'ckeditor5/src/core.js';\nimport type { EmojiCdnResource, EmojiEntry } from './emojirepository.js';\nimport type { SkinToneId } from './emojiconfig.js';\nimport isEmojiSupported from './utils/isemojisupported.js';\n\n/**\n * @module emoji/emojiutils\n */\n\nconst SKIN_TONE_MAP: Record<number, SkinToneId> = {\n\t0: 'default',\n\t1: 'light',\n\t2: 'medium-light',\n\t3: 'medium',\n\t4: 'medium-dark',\n\t5: 'dark'\n};\n\n/**\n * A map representing an emoji and its release version.\n * It's used to identify a user's minimal supported emoji level.\n * We skip versions with older patches, such as 15.0 instead of 15.1 etc.\n */\nconst EMOJI_SUPPORT_LEVEL: Record<string, number> = {\n\t'🫩': 16, // Face with bags under eyes.\n\t'🫨': 15.1, // Shaking Face.\n\t'🫠': 14, // Melting Face.\n\t'😶‍🌫️': 13.1, // Face in Clouds.\n\t'🧑‍💻': 12.1, // Technologist.\n\t'🥰': 11, // Smiling Face with Hearts.\n\t'🤪': 5, // Zany Face.\n\t'⚕️': 4, // Medical Symbol.\n\t'🤣': 3, // Rolling on the Floor Laughing.\n\t'👋🏽': 2, // Waving Hand: Medium Skin Tone.\n\t'😀': 1, // Grinning Face.\n\t'😐': 0.7, // Neutral Face.\n\t'😂': 0.6 // Face with Tears of Joy.\n};\n\nconst BASELINE_EMOJI_WIDTH = 24;\n\n/**\n * The Emoji utilities plugin.\n */\nexport default class EmojiUtils extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get pluginName() {\n\t\treturn 'EmojiUtils' as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static override get isOfficialPlugin(): true {\n\t\treturn true;\n\t}\n\n\t/**\n\t * Checks if the emoji is supported by verifying the emoji version supported by the system first.\n\t * Then checks if emoji contains a zero width joiner (ZWJ), and if yes, then checks if it is supported by the system.\n\t */\n\tpublic isEmojiSupported( item: EmojiCdnResource, emojiSupportedVersionByOs: number, container: HTMLDivElement ): boolean {\n\t\tconst isEmojiVersionSupported = item.version <= emojiSupportedVersionByOs;\n\n\t\tif ( !isEmojiVersionSupported ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( !this.hasZwj( item.emoji ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.isEmojiZwjSupported( item, container );\n\t}\n\n\t/**\n\t * Checks the supported emoji version by the OS, by sampling some representatives from different emoji releases.\n\t */\n\tpublic getEmojiSupportedVersionByOs(): number {\n\t\tfor ( const [ emoji, emojiVersion ] of Object.entries( EMOJI_SUPPORT_LEVEL ) ) {\n\t\t\tif ( EmojiUtils._isEmojiSupported( emoji ) ) {\n\t\t\t\treturn emojiVersion;\n\t\t\t}\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Check for ZWJ (zero width joiner) character.\n\t */\n\tpublic hasZwj( emoji: string ): boolean {\n\t\treturn emoji.includes( '\\u200d' );\n\t}\n\n\t/**\n\t * Checks whether the emoji is supported in the operating system.\n\t */\n\tpublic isEmojiZwjSupported( item: EmojiCdnResource, container: HTMLDivElement ): boolean {\n\t\tconst emojiWidth = this.getNodeWidth( container, item.emoji );\n\n\t\t// On Windows, some supported emoji are ~50% bigger than the baseline emoji, but what we really want to guard\n\t\t// against are the ones that are 2x the size, because those are truly broken (person with red hair = person with\n\t\t// floating red wig, black cat = cat with black square, polar bear = bear with snowflake, etc.)\n\t\t// So here we set the threshold at 1.8 times the size of the baseline emoji.\n\t\treturn emojiWidth < BASELINE_EMOJI_WIDTH * 1.8;\n\t}\n\n\t/**\n\t * Returns the width of the provided node.\n\t */\n\tpublic getNodeWidth( container: HTMLDivElement, node: string ): number {\n\t\tconst span = document.createElement( 'span' );\n\t\tspan.textContent = node;\n\t\tcontainer.appendChild( span );\n\t\tconst nodeWidth = span.offsetWidth;\n\t\tcontainer.removeChild( span );\n\n\t\treturn nodeWidth;\n\t}\n\n\t/**\n\t * Creates a div for emoji width testing purposes.\n\t */\n\tpublic createEmojiWidthTestingContainer(): HTMLDivElement {\n\t\tconst container = document.createElement( 'div' );\n\n\t\tcontainer.setAttribute( 'aria-hidden', 'true' );\n\t\tcontainer.style.position = 'absolute';\n\t\tcontainer.style.left = '-9999px';\n\t\tcontainer.style.whiteSpace = 'nowrap';\n\t\tcontainer.style.fontSize = BASELINE_EMOJI_WIDTH + 'px';\n\n\t\treturn container;\n\t}\n\n\t/**\n\t * Adds default skin tone property to each emoji. If emoji defines other skin tones, they are added as well.\n\t */\n\tpublic normalizeEmojiSkinTone( item: EmojiCdnResource ): EmojiEntry {\n\t\tconst entry: EmojiEntry = {\n\t\t\t...item,\n\t\t\tskins: {\n\t\t\t\tdefault: item.emoji\n\t\t\t}\n\t\t};\n\n\t\tif ( item.skins ) {\n\t\t\titem.skins.forEach( skin => {\n\t\t\t\tconst skinTone = SKIN_TONE_MAP[ skin.tone ];\n\n\t\t\t\tentry.skins[ skinTone ] = skin.emoji;\n\t\t\t} );\n\t\t}\n\n\t\treturn entry;\n\t}\n\n\t/**\n\t * Checks whether the emoji belongs to a group that is allowed.\n\t */\n\tpublic isEmojiCategoryAllowed( item: EmojiCdnResource ): boolean {\n\t\t// Category group=2 contains skin tones only, which we do not want to render.\n\t\treturn item.group !== 2;\n\t}\n\n\t/**\n\t * A function used to determine if emoji is supported by detecting pixels.\n\t *\n\t * Referenced for unit testing purposes. Kept in a separate file because of licensing.\n\t */\n\tprivate static _isEmojiSupported = isEmojiSupported;\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module emoji/emojirepository\n */\n\nimport fuzzysort from 'fuzzysort';\nimport { groupBy } from 'es-toolkit/compat';\n\nimport { type Editor, Plugin } from 'ckeditor5/src/core.js';\nimport { logWarning, version as editorVersion } from 'ckeditor5/src/utils.js';\nimport EmojiUtils from './emojiutils.js';\nimport type { SkinToneId } from './emojiconfig.js';\n\n// An endpoint from which the emoji data will be downloaded during plugin initialization.\n// The `{version}` placeholder is replaced with the value from editor config.\nconst DEFAULT_EMOJI_DATABASE_URL = 'https://cdn.ckeditor.com/ckeditor5/data/emoji/{version}/en.json';\n\nconst DEFAULT_EMOJI_VERSION = 16;\n\n/**\n * The emoji repository plugin.\n *\n * Loads the emoji repository from URL during plugin initialization and provides utility methods to search it.\n */\nexport default class EmojiRepository extends Plugin {\n\t/**\n\t * A callback to resolve the {@link #_repositoryPromise} to control the return value of this promise.\n\t */\n\tdeclare private _repositoryPromiseResolveCallback: ( value: boolean ) => void;\n\n\t/**\n\t * Emoji repository in a configured version.\n\t */\n\tprivate _items: Array<EmojiEntry> | null;\n\n\t/**\n\t * The resolved URL from which the emoji repository is downloaded.\n\t */\n\tprivate readonly _url: URL;\n\n\t/**\n\t * A promise resolved after downloading the emoji collection.\n\t * The promise resolves with `true` when the repository is successfully downloaded or `false` otherwise.\n\t */\n\tprivate readonly _repositoryPromise: Promise<boolean>;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get requires() {\n\t\treturn [ EmojiUtils ] as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get pluginName() {\n\t\treturn 'EmojiRepository' as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static override get isOfficialPlugin(): true {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor: Editor ) {\n\t\tsuper( editor );\n\n\t\teditor.config.define( 'emoji', {\n\t\t\tversion: undefined,\n\t\t\tskinTone: 'default',\n\t\t\tdefinitionsUrl: undefined,\n\t\t\tuseCustomFont: false\n\t\t} );\n\n\t\tthis._url = this._getUrl();\n\n\t\tthis._repositoryPromise = new Promise<boolean>( resolve => {\n\t\t\tthis._repositoryPromiseResolveCallback = resolve;\n\t\t} );\n\n\t\tthis._items = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic async init(): Promise<void> {\n\t\tthis._warnAboutCdnUse();\n\n\t\tawait this._loadAndCacheEmoji();\n\n\t\tthis._items = this._getItems();\n\n\t\tif ( !this._items ) {\n\t\t\t/**\n\t\t\t * Unable to identify the available emoji to display.\n\t\t\t *\n\t\t\t * See the {@glink features/emoji#troubleshooting troubleshooting} section in the {@glink features/emoji Emoji feature} guide\n\t\t\t * for more details.\n\t\t\t *\n\t\t\t * @error emoji-repository-empty\n\t\t\t */\n\t\t\tlogWarning( 'emoji-repository-empty' );\n\n\t\t\treturn this._repositoryPromiseResolveCallback( false );\n\t\t}\n\n\t\treturn this._repositoryPromiseResolveCallback( true );\n\t}\n\n\t/**\n\t * Returns an array of emoji entries that match the search query.\n\t * If the emoji repository is not loaded this method returns an empty array.\n\t *\n\t * @param searchQuery A search query to match emoji.\n\t * @returns An array of emoji entries that match the search query.\n\t */\n\tpublic getEmojiByQuery( searchQuery: string ): Array<EmojiEntry> {\n\t\tif ( !this._items ) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst searchQueryTokens = searchQuery.split( /\\s/ ).filter( Boolean );\n\n\t\t// Perform the search only if there is at least two non-white characters next to each other.\n\t\tconst shouldSearch = searchQueryTokens.some( token => token.length >= 2 );\n\n\t\tif ( !shouldSearch ) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn fuzzysort\n\t\t\t.go( searchQuery, this._items, {\n\t\t\t\tthreshold: 0.6,\n\t\t\t\tkeys: [\n\t\t\t\t\t'emoticon',\n\t\t\t\t\t'annotation',\n\t\t\t\t\t( emojiEntry: EmojiEntry ) => {\n\t\t\t\t\t\t// Instead of searching over all tags, let's use only those that matches the query.\n\t\t\t\t\t\t// It enables searching in tags with the space character in names.\n\t\t\t\t\t\tconst searchQueryTokens = searchQuery.split( /\\s/ ).filter( Boolean );\n\n\t\t\t\t\t\tconst matchedTags = searchQueryTokens.flatMap( tok => {\n\t\t\t\t\t\t\treturn emojiEntry.tags?.filter( t => t.startsWith( tok ) );\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t\treturn matchedTags.join();\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t} )\n\t\t\t.map( result => result.obj );\n\t}\n\n\t/**\n\t * Groups all emojis by categories.\n\t * If the emoji repository is not loaded, it returns an empty array.\n\t *\n\t * @returns An array of emoji entries grouped by categories.\n\t */\n\tpublic getEmojiCategories(): Array<EmojiCategory> {\n\t\tconst repository = this._getItems();\n\n\t\tif ( !repository ) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst { t } = this.editor.locale;\n\n\t\tconst categories = [\n\t\t\t{ title: t( 'Smileys & Expressions' ), icon: '😄', groupId: 0 },\n\t\t\t{ title: t( 'Gestures & People' ), icon: '👋', groupId: 1 },\n\t\t\t{ title: t( 'Animals & Nature' ), icon: '🐻', groupId: 3 },\n\t\t\t{ title: t( 'Food & Drinks' ), icon: '🍎', groupId: 4 },\n\t\t\t{ title: t( 'Travel & Places' ), icon: '🚘', groupId: 5 },\n\t\t\t{ title: t( 'Activities' ), icon: '🏀', groupId: 6 },\n\t\t\t{ title: t( 'Objects' ), icon: '💡', groupId: 7 },\n\t\t\t{ title: t( 'Symbols' ), icon: '🔵', groupId: 8 },\n\t\t\t{ title: t( 'Flags' ), icon: '🏁', groupId: 9 }\n\t\t];\n\n\t\tconst groups = groupBy( repository, item => item.group );\n\n\t\treturn categories.map( category => {\n\t\t\treturn {\n\t\t\t\t...category,\n\t\t\t\titems: groups[ category.groupId ]\n\t\t\t};\n\t\t} );\n\t}\n\n\t/**\n\t * Returns an array of available skin tones.\n\t */\n\tpublic getSkinTones(): Array<SkinTone> {\n\t\tconst { t } = this.editor.locale;\n\n\t\treturn [\n\t\t\t{ id: 'default', icon: '👋', tooltip: t( 'Default skin tone' ) },\n\t\t\t{ id: 'light', icon: '👋🏻', tooltip: t( 'Light skin tone' ) },\n\t\t\t{ id: 'medium-light', icon: '👋🏼', tooltip: t( 'Medium Light skin tone' ) },\n\t\t\t{ id: 'medium', icon: '👋🏽', tooltip: t( 'Medium skin tone' ) },\n\t\t\t{ id: 'medium-dark', icon: '👋🏾', tooltip: t( 'Medium Dark skin tone' ) },\n\t\t\t{ id: 'dark', icon: '👋🏿', tooltip: t( 'Dark skin tone' ) }\n\t\t];\n\t}\n\n\t/**\n\t * Indicates whether the emoji repository has been successfully downloaded and the plugin is operational.\n\t */\n\tpublic isReady(): Promise<boolean> {\n\t\treturn this._repositoryPromise;\n\t}\n\n\t/**\n\t * Returns the URL from which the emoji repository is downloaded. If the URL is not provided\n\t * in the configuration, the default URL is used with the version from the configuration.\n\t *\n\t * If both the URL and version are provided, a warning is logged.\n\t */\n\tprivate _getUrl(): URL {\n\t\tconst { definitionsUrl, version } = this.editor.config.get( 'emoji' )!;\n\n\t\tif ( !definitionsUrl || definitionsUrl === 'cdn' ) {\n\t\t\t// URL was not provided or is set to 'cdn', so we use the default CDN URL.\n\t\t\tconst urlVersion = version || DEFAULT_EMOJI_VERSION;\n\t\t\tconst url = new URL( DEFAULT_EMOJI_DATABASE_URL.replace( '{version}', urlVersion.toString() ) );\n\n\t\t\turl.searchParams.set( 'editorVersion', editorVersion );\n\n\t\t\treturn url;\n\t\t}\n\n\t\tif ( version ) {\n\t\t\t/**\n\t\t\t * Both {@link module:emoji/emojiconfig~EmojiConfig#definitionsUrl `emoji.definitionsUrl`} and\n\t\t\t * {@link module:emoji/emojiconfig~EmojiConfig#version `emoji.version`} configuration options\n\t\t\t * are set. Only the `emoji.definitionsUrl` option will be used.\n\t\t\t *\n\t\t\t * The `emoji.version` option will be ignored and should be removed from the configuration.\n\t\t\t *\n\t\t\t * @error emoji-repository-redundant-version\n\t\t\t */\n\t\t\tlogWarning( 'emoji-repository-redundant-version' );\n\t\t}\n\n\t\treturn new URL( definitionsUrl );\n\t}\n\n\t/**\n\t * Warn users on self-hosted installations that this plugin uses a CDN to fetch the emoji repository.\n\t */\n\tprivate _warnAboutCdnUse(): void {\n\t\tconst editor = this.editor;\n\t\tconst config = editor.config.get( 'emoji' );\n\t\tconst licenseKey = editor.config.get( 'licenseKey' );\n\t\tconst distributionChannel = ( window as any )[ Symbol.for( 'cke distribution' ) ];\n\n\t\tif ( licenseKey === 'GPL' ) {\n\t\t\t// Don't warn GPL users.\n\t\t\treturn;\n\t\t}\n\n\t\tif ( distributionChannel === 'cloud' ) {\n\t\t\t// Don't warn cloud users, because they already use our CDN.\n\t\t\treturn;\n\t\t}\n\n\t\tif ( config && config.definitionsUrl ) {\n\t\t\t// Don't warn users who have configured their own definitions URL.\n\t\t\treturn;\n\t\t}\n\n\t\t/**\n\t\t * It was detected that your installation uses a commercial license key,\n\t\t * and the default {@glink features/emoji#emoji-source CKEditor CDN for Emoji plugin data}.\n\t\t *\n\t\t * To avoid this, you can use the {@link module:emoji/emojiconfig~EmojiConfig#definitionsUrl `emoji.definitionsUrl`}\n\t\t * configuration option to provide a URL to your own emoji repository.\n\t\t *\n\t\t * If you want to suppress this warning, while using the default CDN, set this configuration option to `cdn`.\n\t\t *\n\t\t * @error emoji-repository-cdn-use\n\t\t */\n\t\tlogWarning( 'emoji-repository-cdn-use' );\n\t}\n\n\t/**\n\t * Returns the emoji repository in a configured version if it is a non-empty array. Returns `null` otherwise.\n\t */\n\tprivate _getItems(): Array<EmojiEntry> | null {\n\t\tconst repository = EmojiRepository._results[ this._url.href ];\n\n\t\treturn repository && repository.length ? repository : null;\n\t}\n\n\t/**\n\t * Loads the emoji repository. If the repository is already loaded, it returns the cached result.\n\t * Otherwise, it fetches the repository from the URL and adds it to the cache.\n\t */\n\tprivate async _loadAndCacheEmoji(): Promise<void> {\n\t\tif ( EmojiRepository._results[ this._url.href ] ) {\n\t\t\t// The repository has already been downloaded.\n\t\t\treturn;\n\t\t}\n\n\t\tconst result: Array<EmojiCdnResource> = await fetch( this._url, { cache: 'force-cache' } )\n\t\t\t.then( response => {\n\t\t\t\tif ( !response.ok ) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\n\t\t\t\treturn response.json();\n\t\t\t} )\n\t\t\t.catch( () => {\n\t\t\t\treturn [];\n\t\t\t} );\n\n\t\tEmojiRepository._results[ this._url.href ] = this._normalizeEmoji( result );\n\t}\n\n\t/**\n\t * Normalizes the raw data fetched from CDN. By normalization, we meant:\n\t *\n\t *  * Filter out unsupported emoji (these that will not render correctly),\n\t *  * Prepare skin tone variants if an emoji defines them.\n\t */\n\tprivate _normalizeEmoji( data: Array<EmojiCdnResource> ): Array<EmojiEntry> {\n\t\tconst editor = this.editor;\n\t\tconst useCustomFont = editor.config.get( 'emoji.useCustomFont' );\n\t\tconst emojiUtils = editor.plugins.get( 'EmojiUtils' );\n\n\t\tconst insertableEmoji = data.filter( item => emojiUtils.isEmojiCategoryAllowed( item ) );\n\n\t\t// When using a custom font, the feature does not filter any emoji.\n\t\tif ( useCustomFont ) {\n\t\t\treturn insertableEmoji.map( item => emojiUtils.normalizeEmojiSkinTone( item ) );\n\t\t}\n\n\t\tconst emojiSupportedVersionByOs = emojiUtils.getEmojiSupportedVersionByOs();\n\n\t\tconst container = emojiUtils.createEmojiWidthTestingContainer();\n\t\tdocument.body.appendChild( container );\n\n\t\tconst results = insertableEmoji\n\t\t\t.filter( item => emojiUtils.isEmojiSupported( item, emojiSupportedVersionByOs, container ) )\n\t\t\t.map( item => emojiUtils.normalizeEmojiSkinTone( item ) );\n\n\t\tcontainer.remove();\n\n\t\treturn results;\n\t}\n\n\t/**\n\t * Versioned emoji repository.\n\t */\n\tprivate static _results: {\n\t\t[ key in string ]?: Array<EmojiEntry>\n\t} = {};\n}\n\n/**\n * Represents a single group of the emoji category, e.g., \"Smileys & Expressions\".\n */\nexport type EmojiCategory = {\n\n\t/**\n\t * A name of the category.\n\t */\n\ttitle: string;\n\n\t/**\n\t * An example emoji representing items belonging to the category.\n\t */\n\ticon: string;\n\n\t/**\n\t * Group id used to assign {@link #items}.\n\t */\n\tgroupId: number;\n\n\t/**\n\t * An array of emojis.\n\t */\n\titems: Array<EmojiEntry>;\n};\n\n/**\n * Represents a single item fetched from the CDN.\n */\nexport type EmojiCdnResource = {\n\tannotation: string;\n\temoji: string;\n\tgroup: number;\n\torder: number;\n\tversion: number;\n\temoticon?: string;\n\tshortcodes?: Array<string>;\n\tskins?: Array<{\n\t\temoji: string;\n\t\ttone: number;\n\t\tversion: number;\n\t}>;\n\ttags?: Array<string>;\n};\n\n/**\n * Represents a single emoji item used by the Emoji feature.\n */\nexport type EmojiEntry = Omit<EmojiCdnResource, 'skins'> & {\n\tskins: EmojiMap;\n};\n\n/**\n * Represents mapping between a skin tone and its corresponding emoji.\n *\n * The `default` key is always present. Additional values are assigned only if an emoji supports skin tones.\n */\nexport type EmojiMap = { [K in Exclude<SkinToneId, 'default'>]?: string; } & {\n\tdefault: string;\n};\n\n/**\n * Represents an emoji skin tone variant.\n */\nexport type SkinTone = {\n\tid: SkinToneId;\n\ticon: string;\n\ttooltip: string;\n};\n\n/**\n * Unable to load the emoji repository from the URL.\n *\n * If the URL works properly and there is no disruption of communication, please check your\n * {@glink getting-started/setup/csp Content Security Policy (CSP)} setting and make sure\n * the URL connection is allowed by the editor.\n *\n * @error emoji-repository-load-failed\n */\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module emoji/emojimention\n */\n\nimport { logWarning, type LocaleTranslate } from 'ckeditor5/src/utils.js';\nimport { Plugin, type Editor } from 'ckeditor5/src/core.js';\nimport { Typing } from 'ckeditor5/src/typing.js';\nimport type { MentionFeed, MentionFeedObjectItem, ItemRenderer } from '@ckeditor/ckeditor5-mention';\n\nimport EmojiRepository from './emojirepository.js';\nimport type EmojiPicker from './emojipicker.js';\nimport type { SkinToneId } from './emojiconfig.js';\n\nconst EMOJI_MENTION_MARKER = ':';\nconst EMOJI_SHOW_ALL_OPTION_ID = ':__EMOJI_SHOW_ALL:';\nconst EMOJI_HINT_OPTION_ID = ':__EMOJI_HINT:';\n\n/**\n * The emoji mention plugin.\n *\n * Introduces the autocomplete of emojis while typing.\n */\nexport default class EmojiMention extends Plugin {\n\t/**\n\t * An instance of the {@link module:emoji/emojipicker~EmojiPicker} plugin if it is loaded in the editor.\n\t */\n\tdeclare public emojiPickerPlugin: EmojiPicker | null;\n\n\t/**\n\t * An instance of the {@link module:emoji/emojirepository~EmojiRepository} plugin.\n\t */\n\tdeclare public emojiRepositoryPlugin: EmojiRepository;\n\n\t/**\n\t * A flag that informs if the {@link module:emoji/emojirepository~EmojiRepository} plugin is loaded correctly.\n\t */\n\tdeclare private _isEmojiRepositoryAvailable: boolean;\n\n\t/**\n\t * Defines a number of displayed items in the auto complete dropdown.\n\t *\n\t * It includes the \"Show all emoji...\" option if the `EmojiPicker` plugin is loaded.\n\t */\n\tprivate readonly _emojiDropdownLimit: number;\n\n\t/**\n\t * Defines a skin tone that is set in the emoji config.\n\t */\n\tprivate readonly _skinTone: SkinToneId;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get requires() {\n\t\treturn [ EmojiRepository, Typing, 'Mention' ] as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get pluginName() {\n\t\treturn 'EmojiMention' as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static override get isOfficialPlugin(): true {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor: Editor ) {\n\t\tsuper( editor );\n\n\t\tthis.editor.config.define( 'emoji', {\n\t\t\tdropdownLimit: 6\n\t\t} );\n\n\t\tthis._emojiDropdownLimit = editor.config.get( 'emoji.dropdownLimit' )!;\n\t\tthis._skinTone = editor.config.get( 'emoji.skinTone' )!;\n\n\t\tthis._setupMentionConfiguration( editor );\n\t}\n\n\t/**\n\t * Initializes the configuration for emojis in the mention feature.\n\t * If the marker used by emoji mention is already registered, it displays a warning.\n\t * If emoji mention configuration is detected, it does not register it for a second time.\n\t */\n\tprivate _setupMentionConfiguration( editor: Editor ) {\n\t\tconst mergeFieldsPrefix = editor.config.get( 'mergeFields.prefix' )! as string;\n\t\tconst mentionFeedsConfigs = editor.config.get( 'mention.feeds' )! as Array<EmojiMentionFeed>;\n\n\t\tconst isEmojiMarkerUsedByMergeFields = mergeFieldsPrefix ? mergeFieldsPrefix[ 0 ] === EMOJI_MENTION_MARKER : false;\n\t\tconst isEmojiMarkerUsedByMention = mentionFeedsConfigs\n\t\t\t.filter( config => !config._isEmojiMarker )\n\t\t\t.some( config => config.marker === EMOJI_MENTION_MARKER );\n\n\t\tif ( isEmojiMarkerUsedByMention || isEmojiMarkerUsedByMergeFields ) {\n\t\t\t/**\n\t\t\t * The `marker` in the `emoji` config is already used by other plugin configuration.\n\t\t\t *\n\t\t\t * @error emoji-config-marker-already-used\n\t\t\t * @param {string} marker Used marker.\n\t\t\t */\n\t\t\tlogWarning( 'emoji-config-marker-already-used', { marker: EMOJI_MENTION_MARKER } );\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst isEmojiConfigDefined = mentionFeedsConfigs.some( config => config._isEmojiMarker );\n\n\t\tif ( isEmojiConfigDefined ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst emojiMentionFeedConfig = {\n\t\t\t_isEmojiMarker: true,\n\t\t\tmarker: EMOJI_MENTION_MARKER,\n\t\t\tdropdownLimit: this._emojiDropdownLimit,\n\t\t\titemRenderer: this._customItemRendererFactory( this.editor.t ),\n\t\t\tfeed: this._queryEmojiCallbackFactory()\n\t\t};\n\n\t\tthis.editor.config.set( 'mention.feeds', [ ...mentionFeedsConfigs, emojiMentionFeedConfig ] );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic async init(): Promise<void> {\n\t\tconst editor = this.editor;\n\n\t\tthis.emojiPickerPlugin = editor.plugins.has( 'EmojiPicker' ) ? editor.plugins.get( 'EmojiPicker' ) : null;\n\t\tthis.emojiRepositoryPlugin = editor.plugins.get( 'EmojiRepository' );\n\t\tthis._isEmojiRepositoryAvailable = await this.emojiRepositoryPlugin.isReady();\n\n\t\t// Override the `mention` command listener if the emoji repository is ready.\n\t\tif ( this._isEmojiRepositoryAvailable ) {\n\t\t\teditor.once( 'ready', this._overrideMentionExecuteListener.bind( this ) );\n\t\t}\n\t}\n\n\t/**\n\t * Returns the `itemRenderer()` callback for mention config.\n\t */\n\tprivate _customItemRendererFactory( t: LocaleTranslate ): ItemRenderer {\n\t\treturn ( item: MentionFeedObjectItem ) => {\n\t\t\tconst itemElement = document.createElement( 'button' );\n\n\t\t\titemElement.classList.add( 'ck' );\n\t\t\titemElement.classList.add( 'ck-button' );\n\t\t\titemElement.classList.add( 'ck-button_with-text' );\n\n\t\t\titemElement.id = `mention-list-item-id${ item.id.slice( 0, -1 ) }`;\n\t\t\titemElement.type = 'button';\n\t\t\titemElement.tabIndex = -1;\n\n\t\t\tconst labelElement = document.createElement( 'span' );\n\n\t\t\tlabelElement.classList.add( 'ck' );\n\t\t\tlabelElement.classList.add( 'ck-button__label' );\n\n\t\t\titemElement.appendChild( labelElement );\n\n\t\t\tif ( item.id === EMOJI_HINT_OPTION_ID ) {\n\t\t\t\titemElement.classList.add( 'ck-list-item-button' );\n\t\t\t\titemElement.classList.add( 'ck-disabled' );\n\t\t\t\tlabelElement.textContent = t( 'Keep on typing to see the emoji.' );\n\t\t\t} else if ( item.id === EMOJI_SHOW_ALL_OPTION_ID ) {\n\t\t\t\tlabelElement.textContent = t( 'Show all emoji...' );\n\t\t\t} else {\n\t\t\t\tlabelElement.textContent = `${ item.text } ${ item.id }`;\n\t\t\t}\n\n\t\t\treturn itemElement;\n\t\t};\n\t}\n\n\t/**\n\t * Overrides the default mention execute listener to insert an emoji as plain text instead.\n\t */\n\tprivate _overrideMentionExecuteListener(): void {\n\t\tconst editor = this.editor;\n\n\t\teditor.commands.get( 'mention' )!.on( 'execute', ( event, data ) => {\n\t\t\tconst eventData = data[ 0 ];\n\n\t\t\t// Ignore non-emoji auto-complete actions.\n\t\t\tif ( eventData.marker !== EMOJI_MENTION_MARKER ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Do not propagate the event.\n\t\t\tevent.stop();\n\n\t\t\t// Do nothing when executing after selecting a hint message.\n\t\t\tif ( eventData.mention.id === EMOJI_HINT_OPTION_ID ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Trigger the picker UI.\n\t\t\tif ( eventData.mention.id === EMOJI_SHOW_ALL_OPTION_ID ) {\n\t\t\t\tconst text = [ ...eventData.range.getItems() ]\n\t\t\t\t\t.filter( item => item.is( '$textProxy' ) )\n\t\t\t\t\t.map( item => item.data )\n\t\t\t\t\t.reduce( ( result, text ) => result + text, '' );\n\n\t\t\t\teditor.model.change( writer => {\n\t\t\t\t\teditor.model.deleteContent( writer.createSelection( eventData.range ) );\n\t\t\t\t} );\n\n\t\t\t\tconst emojiPickerPlugin = this.emojiPickerPlugin!;\n\n\t\t\t\temojiPickerPlugin.showUI( text.slice( 1 ) );\n\n\t\t\t\tsetTimeout( () => {\n\t\t\t\t\temojiPickerPlugin.emojiPickerView!.focus();\n\t\t\t\t} );\n\t\t\t}\n\t\t\t// Or insert the emoji to editor.\n\t\t\telse {\n\t\t\t\teditor.execute( 'insertText', {\n\t\t\t\t\ttext: eventData.mention.text,\n\t\t\t\t\trange: eventData.range\n\t\t\t\t} );\n\t\t\t}\n\t\t}, { priority: 'high' } );\n\t}\n\n\t/**\n\t * Returns the `feed()` callback for mention config.\n\t */\n\tprivate _queryEmojiCallbackFactory(): ( searchQuery: string ) => Array<MentionFeedObjectItem> {\n\t\treturn ( searchQuery: string ) => {\n\t\t\t// Do not show anything when a query starts with a space.\n\t\t\tif ( searchQuery.startsWith( ' ' ) ) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\t// Do not show anything when a query starts with a marker character.\n\t\t\tif ( searchQuery.startsWith( EMOJI_MENTION_MARKER ) ) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\t// If the repository plugin is not available, return an empty feed to avoid confusion. See: #17842.\n\t\t\tif ( !this._isEmojiRepositoryAvailable ) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tconst emojis: Array<MentionFeedObjectItem> = this.emojiRepositoryPlugin.getEmojiByQuery( searchQuery )\n\t\t\t\t.map( emoji => {\n\t\t\t\t\tlet text = emoji.skins[ this._skinTone ] || emoji.skins.default;\n\n\t\t\t\t\tif ( this.emojiPickerPlugin ) {\n\t\t\t\t\t\ttext = emoji.skins[ this.emojiPickerPlugin.skinTone ] || emoji.skins.default;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tid: `:${ emoji.annotation }:`,\n\t\t\t\t\t\ttext\n\t\t\t\t\t};\n\t\t\t\t} );\n\n\t\t\tif ( !this.emojiPickerPlugin ) {\n\t\t\t\treturn emojis.slice( 0, this._emojiDropdownLimit );\n\t\t\t}\n\n\t\t\tconst actionItem: MentionFeedObjectItem = {\n\t\t\t\tid: searchQuery.length > 1 ? EMOJI_SHOW_ALL_OPTION_ID : EMOJI_HINT_OPTION_ID\n\t\t\t};\n\n\t\t\treturn [\n\t\t\t\t...emojis.slice( 0, this._emojiDropdownLimit - 1 ),\n\t\t\t\tactionItem\n\t\t\t];\n\t\t};\n\t}\n}\n\ntype EmojiMentionFeed = MentionFeed & {\n\n\t/**\n\t * It's used prevent displaying an emoji mention feed warning when editor plugins are initialized more than once.\n\t */\n\t_isEmojiMarker?: boolean;\n};\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module emoji/emojicommand\n */\n\nimport { Command } from 'ckeditor5/src/core.js';\nimport type EmojiPicker from './emojipicker.js';\n\n/**\n * Command that shows the emoji user interface.\n */\nexport default class EmojiCommand extends Command {\n\t/**\n\t * Updates the command's {@link #isEnabled} based on the current selection.\n\t */\n\tpublic override refresh(): void {\n\t\tconst editor = this.editor;\n\t\tconst model = editor.model;\n\t\tconst schema = model.schema;\n\t\tconst selection = model.document.selection;\n\n\t\tthis.isEnabled = schema.checkChild( selection.getFirstPosition()!, '$text' );\n\t}\n\n\t/**\n\t * Opens emoji user interface for the current document selection.\n\t *\n\t * @fires execute\n\t * @param [searchValue=''] A default query used to filer the grid when opening the UI.\n\t */\n\tpublic override execute( searchValue: string = '' ): void {\n\t\tconst emojiPickerPlugin: EmojiPicker = this.editor.plugins.get( 'EmojiPicker' );\n\n\t\temojiPickerPlugin.showUI( searchValue );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module emoji/ui/emojigridview\n */\n\nimport { addKeyboardHandlingForGrid, ButtonView, type FilteredView, View, type ViewCollection } from 'ckeditor5/src/ui.js';\nimport { FocusTracker, global, KeystrokeHandler, type Locale } from 'ckeditor5/src/utils.js';\nimport type { EmojiCategory, EmojiEntry } from '../emojirepository.js';\nimport type { SkinToneId } from '../emojiconfig.js';\n\nimport '../../theme/emojigrid.css';\n\n/**\n * A grid of emoji tiles. It allows browsing emojis and selecting them to be inserted into the content.\n */\nexport default class EmojiGridView extends View<HTMLDivElement> implements FilteredView {\n\t/**\n\t * Defines the active category name.\n\t *\n\t * @observable\n\t */\n\tdeclare public categoryName: string;\n\n\t/**\n\t * Active skin tone.\n\t *\n\t * @observable\n\t */\n\tdeclare public skinTone: SkinToneId;\n\n\t/**\n\t * Set to `true` when the {@link #tiles} collection does not contain items to display.\n\t *\n\t * @observable\n\t */\n\tdeclare public isEmpty: boolean;\n\n\t/**\n\t * A collection of the child tile views. Each tile represents a particular emoji.\n\t */\n\tpublic readonly tiles: ViewCollection<ButtonView>;\n\n\t/**\n\t * Tracks information about the DOM focus in the grid.\n\t */\n\tpublic readonly focusTracker: FocusTracker;\n\n\t/**\n\t * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t */\n\tpublic readonly keystrokes: KeystrokeHandler;\n\n\t/**\n\t * An array containing all emojis grouped by their categories.\n\t */\n\tpublic readonly emojiCategories: Array<EmojiCategory>;\n\n\t/**\n\t * A collection of all already created tile views. Each tile represents a particular emoji.\n\t * The cached tiles collection is used for efficiency purposes to avoid re-creating a particular\n\t * tile again when the grid view has changed.\n\t */\n\tpublic readonly cachedTiles: ViewCollection<ButtonView>;\n\n\t/**\n\t * A callback used to filter grid items by a specified query.\n\t */\n\tprivate readonly _getEmojiByQuery: EmojiSearchQueryCallback;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale: Locale, { categoryName, emojiCategories, getEmojiByQuery, skinTone }: {\n\t\tcategoryName: string;\n\t\temojiCategories: Array<EmojiCategory>;\n\t\tgetEmojiByQuery: EmojiSearchQueryCallback;\n\t\tskinTone: SkinToneId;\n\t} ) {\n\t\tsuper( locale );\n\n\t\tthis.set( 'isEmpty', true );\n\t\tthis.set( 'categoryName', categoryName );\n\t\tthis.set( 'skinTone', skinTone );\n\n\t\tthis.tiles = this.createCollection() as ViewCollection<ButtonView>;\n\t\tthis.cachedTiles = this.createCollection() as ViewCollection<ButtonView>;\n\n\t\tthis.focusTracker = new FocusTracker();\n\t\tthis.keystrokes = new KeystrokeHandler();\n\n\t\tthis._getEmojiByQuery = getEmojiByQuery;\n\t\tthis.emojiCategories = emojiCategories;\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttag: 'div',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\trole: 'grid',\n\t\t\t\t\t\tclass: [\n\t\t\t\t\t\t\t'ck',\n\t\t\t\t\t\t\t'ck-emoji__grid'\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\tchildren: this.tiles\n\t\t\t\t}\n\t\t\t],\n\t\t\tattributes: {\n\t\t\t\trole: 'tabpanel',\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-emoji__tiles',\n\t\t\t\t\t// To avoid issues with focus cycling, ignore a grid when it's empty.\n\t\t\t\t\tbind.if( 'isEmpty', 'ck-hidden', value => value )\n\t\t\t\t]\n\t\t\t}\n\t\t} );\n\n\t\taddKeyboardHandlingForGrid( {\n\t\t\tkeystrokeHandler: this.keystrokes,\n\t\t\tfocusTracker: this.focusTracker,\n\t\t\tgridItems: this.tiles,\n\t\t\tnumberOfColumns: () => global.window\n\t\t\t\t.getComputedStyle( this.element!.firstChild as Element ) // Responsive `.ck-emoji-grid__tiles`.\n\t\t\t\t.getPropertyValue( 'grid-template-columns' )\n\t\t\t\t.split( ' ' )\n\t\t\t\t.length,\n\t\t\tuiLanguageDirection: this.locale && this.locale.uiLanguageDirection\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override render(): void {\n\t\tsuper.render();\n\n\t\tthis.keystrokes.listenTo( this.element! );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override destroy(): void {\n\t\tsuper.destroy();\n\n\t\tthis.keystrokes.destroy();\n\t\tthis.focusTracker.destroy();\n\t}\n\n\t/**\n\t * Focuses the first focusable in {@link ~EmojiGridView#tiles} if available.\n\t */\n\tpublic focus(): void {\n\t\tconst firstTile = this.tiles.first;\n\n\t\tif ( firstTile ) {\n\t\t\tfirstTile.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Filters the grid view by the given regular expression.\n\t *\n\t * It filters either by the pattern or an emoji category, but never both.\n\t *\n\t * @param pattern Expression to search or `null` when filter by category name.\n\t */\n\tpublic filter( pattern: RegExp | null ): { resultsCount: number; totalItemsCount: number } {\n\t\tconst { matchingItems, allItems } = pattern ? this._getItemsByQuery( pattern.source ) : this._getItemsByCategory();\n\n\t\tthis._updateGrid( matchingItems );\n\t\tthis.set( 'isEmpty', matchingItems.length === 0 );\n\n\t\treturn {\n\t\t\tresultsCount: matchingItems.length,\n\t\t\ttotalItemsCount: allItems.length\n\t\t};\n\t}\n\n\t/**\n\t * Filters emojis to show based on the specified query phrase.\n\t *\n\t * @param query A query used to filter the grid.\n\t */\n\tprivate _getItemsByQuery( query: string ): { matchingItems: Array<EmojiEntry>; allItems: Array<EmojiEntry> } {\n\t\treturn {\n\t\t\tmatchingItems: this._getEmojiByQuery( query ),\n\t\t\tallItems: this.emojiCategories.flatMap( group => group.items )\n\t\t};\n\t}\n\n\t/**\n\t * Returns emojis that belong to the specified category.\n\t */\n\tprivate _getItemsByCategory(): { matchingItems: Array<EmojiEntry>; allItems: Array<EmojiEntry> } {\n\t\tconst emojiCategory = this.emojiCategories.find( item => item.title === this.categoryName )!;\n\t\tconst { items } = emojiCategory;\n\n\t\treturn {\n\t\t\tmatchingItems: items,\n\t\t\tallItems: items\n\t\t};\n\t}\n\n\t/**\n\t * Updates the grid by removing the existing items and insert the new ones.\n\t *\n\t * @param items An array of items to insert.\n\t */\n\tprivate _updateGrid( items: Array<EmojiEntry> ): void {\n\t\t// Clean-up.\n\t\t[ ...this.tiles ].forEach( item => {\n\t\t\tthis.focusTracker.remove( item );\n\t\t\tthis.tiles.remove( item );\n\t\t} );\n\n\t\titems\n\t\t\t// Create tiles from matching results.\n\t\t\t.map( item => {\n\t\t\t\tconst emoji = item.skins[ this.skinTone ] || item.skins.default;\n\n\t\t\t\treturn this.cachedTiles.get( emoji ) || this._createTile( emoji, item.annotation );\n\t\t\t} )\n\t\t\t// Insert new elements.\n\t\t\t.forEach( item => {\n\t\t\t\tthis.tiles.add( item );\n\t\t\t\tthis.focusTracker.add( item );\n\t\t\t} );\n\t}\n\n\t/**\n\t * Creates a new tile for the grid. Created tile is added to the {@link #cachedTiles} collection for further usage, if needed.\n\t *\n\t * @param emoji The emoji itself.\n\t * @param name The name of the emoji (e.g. \"Smiling Face with Smiling Eyes\").\n\t */\n\tprivate _createTile( emoji: string, name: string ): ButtonView {\n\t\tconst tile = new ButtonView( this.locale );\n\n\t\ttile.viewUid = emoji;\n\n\t\ttile.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-emoji__tile'\n\t\t\t\t]\n\t\t\t}\n\t\t} );\n\n\t\ttile.set( {\n\t\t\tlabel: emoji,\n\t\t\ttooltip: name,\n\t\t\twithText: true,\n\t\t\tariaLabel: name,\n\t\t\t// To improve accessibility, disconnect a button and its label connection so that screen\n\t\t\t// readers can read the `[aria-label]` attribute directly from the more descriptive button.\n\t\t\tariaLabelledBy: undefined\n\t\t} );\n\n\t\ttile.on( 'execute', () => {\n\t\t\tthis.fire<EmojiGridViewExecuteEvent>( 'execute', { name, emoji } );\n\t\t} );\n\n\t\tthis.cachedTiles.add( tile );\n\n\t\treturn tile;\n\t}\n}\n\n/**\n * A callback used to filter grid items by a specified query.\n */\nexport type EmojiSearchQueryCallback = ( query: string ) => Array<EmojiEntry>;\n\n/**\n * Fired when any of {@link ~EmojiGridView#tiles grid tiles} is clicked.\n *\n * @eventName ~EmojiGridView#execute\n * @param data Additional information about the event.\n */\nexport type EmojiGridViewExecuteEvent = {\n\tname: 'execute';\n\targs: [ data: EmojiGridViewEventData ];\n};\n\nexport type EmojiGridViewEventData = {\n\n\t/**\n\t * The name of the emoji (e.g. \"Smiling Face with Smiling Eyes\").\n\t */\n\tname: string;\n\n\t/**\n\t * The emoji itself.\n\t */\n\temoji: string;\n};\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module emoji/ui/emojicategoriesview\n */\n\nimport { ButtonView, View, FocusCycler, type ViewCollection } from 'ckeditor5/src/ui.js';\nimport { FocusTracker, KeystrokeHandler, type Locale, type ObservableChangeEvent } from 'ckeditor5/src/utils.js';\nimport type { EmojiCategory } from '../emojirepository.js';\n\nimport '../../theme/emojicategories.css';\n\n/**\n * A class representing the navigation part of the emoji UI.\n * It is responsible allowing the user to select a particular emoji category.\n */\nexport default class EmojiCategoriesView extends View {\n\t/**\n\t * Currently selected emoji category name.\n\t */\n\tdeclare public categoryName: string;\n\n\t/**\n\t * Tracks information about the DOM focus in the grid.\n\t */\n\tpublic readonly focusTracker: FocusTracker;\n\n\t/**\n\t * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t */\n\tpublic readonly keystrokes: KeystrokeHandler;\n\n\t/**\n\t * Helps cycling over focusable children in the input view.\n\t */\n\tpublic readonly focusCycler: FocusCycler;\n\n\t/**\n\t * A collection of the categories buttons.\n\t */\n\tpublic readonly buttonViews: ViewCollection<ButtonView>;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale: Locale, { emojiCategories, categoryName }: { emojiCategories: Array<EmojiCategory>; categoryName: string } ) {\n\t\tsuper( locale );\n\n\t\tthis.buttonViews = this.createCollection(\n\t\t\temojiCategories.map( emojiCategory => this._createCategoryButton( emojiCategory ) )\n\t\t);\n\n\t\tthis.focusTracker = new FocusTracker();\n\t\tthis.keystrokes = new KeystrokeHandler();\n\t\tthis.focusCycler = new FocusCycler( {\n\t\t\tfocusables: this.buttonViews,\n\t\t\tfocusTracker: this.focusTracker,\n\t\t\tkeystrokeHandler: this.keystrokes,\n\t\t\tactions: {\n\t\t\t\tfocusPrevious: 'arrowleft',\n\t\t\t\tfocusNext: 'arrowright'\n\t\t\t}\n\t\t} );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [ 'ck', 'ck-emoji__categories-list' ],\n\t\t\t\trole: 'tablist'\n\t\t\t},\n\t\t\tchildren: this.buttonViews\n\t\t} );\n\n\t\tthis.on<ObservableChangeEvent<string>>( 'change:categoryName', ( event, name, newValue, oldValue ) => {\n\t\t\tconst oldCategoryButton = this.buttonViews.find( button => button.tooltip === oldValue );\n\n\t\t\tif ( oldCategoryButton ) {\n\t\t\t\toldCategoryButton.isOn = false;\n\t\t\t}\n\n\t\t\tconst newCategoryButton = this.buttonViews.find( button => button.tooltip === newValue )!;\n\t\t\tnewCategoryButton.isOn = true;\n\t\t} );\n\n\t\tthis.set( 'categoryName', categoryName );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override render(): void {\n\t\tsuper.render();\n\n\t\tthis.buttonViews.forEach( buttonView => {\n\t\t\tthis.focusTracker.add( buttonView );\n\t\t} );\n\n\t\tthis.keystrokes.listenTo( this.element! );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override destroy(): void {\n\t\tsuper.destroy();\n\n\t\tthis.focusTracker.destroy();\n\t\tthis.keystrokes.destroy();\n\t\tthis.buttonViews.destroy();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic focus(): void {\n\t\tthis.buttonViews.first!.focus();\n\t}\n\n\t/**\n\t * Marks all categories buttons as enabled (clickable).\n\t */\n\tpublic enableCategories(): void {\n\t\tthis.buttonViews.forEach( buttonView => {\n\t\t\tbuttonView.isEnabled = true;\n\t\t} );\n\t}\n\n\t/**\n\t * Marks all categories buttons as disabled (non-clickable).\n\t */\n\tpublic disableCategories(): void {\n\t\tthis.buttonViews.forEach( buttonView => {\n\t\t\tbuttonView.set( {\n\t\t\t\tclass: '',\n\t\t\t\tisEnabled: false,\n\t\t\t\tisOn: false\n\t\t\t} );\n\t\t} );\n\t}\n\n\t/**\n\t * Creates a button representing a category item.\n\t */\n\tprivate _createCategoryButton( emojiCategory: EmojiCategory ): ButtonView {\n\t\tconst buttonView = new ButtonView();\n\t\tconst bind = buttonView.bindTemplate;\n\n\t\t// A `[role=\"tab\"]` element requires also the `[aria-selected]` attribute with its state.\n\t\tbuttonView.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\t'aria-selected': bind.to( 'isOn', value => value.toString() ),\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-emoji__category-item'\n\t\t\t\t]\n\t\t\t}\n\t\t} );\n\n\t\tbuttonView.set( {\n\t\t\tariaLabel: emojiCategory.title,\n\t\t\tlabel: emojiCategory.icon,\n\t\t\trole: 'tab',\n\t\t\ttooltip: emojiCategory.title,\n\t\t\twithText: true,\n\t\t\t// To improve accessibility, disconnect a button and its label connection so that screen\n\t\t\t// readers can read the `[aria-label]` attribute directly from the more descriptive button.\n\t\t\tariaLabelledBy: undefined\n\t\t} );\n\n\t\tbuttonView.on( 'execute', () => {\n\t\t\tthis.categoryName = emojiCategory.title;\n\t\t} );\n\n\t\tbuttonView.on<ObservableChangeEvent<boolean>>( 'change:isEnabled', () => {\n\t\t\tif ( buttonView.isEnabled && buttonView.tooltip === this.categoryName ) {\n\t\t\t\tbuttonView.isOn = true;\n\t\t\t}\n\t\t} );\n\n\t\treturn buttonView;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module emoji/ui/emojisearchview\n */\n\nimport { escapeRegExp } from 'es-toolkit/compat';\nimport { createLabeledInputText, SearchTextView, View, type SearchTextViewSearchEvent, type SearchInfoView } from 'ckeditor5/src/ui.js';\nimport type { Locale } from 'ckeditor5/src/utils.js';\nimport type EmojiGridView from './emojigridview.js';\n\n/**\n * A view responsible for providing an input element that allows filtering emoji by the provided query.\n */\nexport default class EmojiSearchView extends View {\n\t/**\n\t * The find in text input view that stores the searched string.\n\t */\n\tpublic readonly inputView: SearchTextView;\n\n\t/**\n\t * An instance of the `EmojiGridView`.\n\t */\n\tpublic readonly gridView: EmojiGridView;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale: Locale, { gridView, resultsView }: { gridView: EmojiGridView; resultsView: SearchInfoView } ) {\n\t\tsuper( locale );\n\n\t\tthis.gridView = gridView;\n\n\t\tconst t = locale.t;\n\n\t\tthis.inputView = new SearchTextView( this.locale!, {\n\t\t\tqueryView: {\n\t\t\t\tlabel: t( 'Find an emoji (min. 2 characters)' ),\n\t\t\t\tcreator: createLabeledInputText\n\t\t\t},\n\t\t\tfilteredView: this.gridView,\n\t\t\tinfoView: {\n\t\t\t\tinstance: resultsView\n\t\t\t}\n\t\t} );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-search'\n\t\t\t\t],\n\n\t\t\t\ttabindex: '-1'\n\t\t\t},\n\t\t\tchildren: [\n\t\t\t\tthis.inputView.queryView\n\t\t\t]\n\t\t} );\n\n\t\t// Pass through the `search` event to handle it by a parent view.\n\t\tthis.inputView.delegate( 'search' ).to( this );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override destroy(): void {\n\t\tsuper.destroy();\n\n\t\tthis.inputView.destroy();\n\t}\n\n\t/**\n\t * Searches the {@link #gridView} for the given query.\n\t *\n\t * @param query The search query string.\n\t */\n\tpublic search( query: string ): void {\n\t\tconst regExp = query ? new RegExp( escapeRegExp( query ), 'ig' ) : null;\n\t\tconst filteringResults = this.gridView.filter( regExp );\n\n\t\tthis.inputView.fire<SearchTextViewSearchEvent>( 'search', { query, ...filteringResults } );\n\t}\n\n\t/**\n\t * Allows defining the default value in the search text field.\n\t *\n\t * @param value The new value.\n\t */\n\tpublic setInputValue( value: string ): void {\n\t\tif ( !value ) {\n\t\t\tthis.inputView.queryView.fieldView.reset();\n\t\t} else {\n\t\t\tthis.inputView.queryView.fieldView.value = value;\n\t\t}\n\t}\n\n\t/**\n\t * Returns an input provided by a user in the search text field.\n\t */\n\tpublic getInputValue(): string {\n\t\treturn this.inputView.queryView.fieldView.element!.value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic focus(): void {\n\t\tthis.inputView.focus();\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module emoji/ui/emojitoneview\n */\n\nimport {\n\tcreateDropdown,\n\taddListToDropdown,\n\tView,\n\tViewModel,\n\ttype ButtonExecuteEvent,\n\ttype DropdownView,\n\ttype ListDropdownItemDefinition\n} from 'ckeditor5/src/ui.js';\nimport { Collection, type Locale } from 'ckeditor5/src/utils.js';\nimport type { SkinToneId } from '../emojiconfig.js';\nimport type { SkinTone } from '../emojirepository.js';\n\nimport '../../theme/emojitone.css';\n\n/**\n * A view responsible for selecting a skin tone for an emoji.\n */\nexport default class EmojiToneView extends View {\n\t/**\n\t * Active skin tone.\n\t *\n\t * @observable\n\t */\n\tdeclare public skinTone: SkinToneId;\n\n\t/**\n\t * A dropdown element for selecting an active skin tone.\n\t */\n\tpublic readonly dropdownView: DropdownView;\n\n\t/**\n\t * An array of available skin tones.\n\t */\n\tprivate readonly _skinTones: Array<SkinTone>;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale: Locale, { skinTone, skinTones }: { skinTone: SkinToneId; skinTones: Array<SkinTone> } ) {\n\t\tsuper( locale );\n\n\t\tthis.set( 'skinTone', skinTone );\n\t\tthis._skinTones = skinTones;\n\n\t\tconst t = locale.t;\n\t\tconst accessibleLabel = t( 'Select skin tone' );\n\n\t\tconst dropdownView = createDropdown( locale );\n\t\tconst itemDefinitions: Collection<ListDropdownItemDefinition> = new Collection();\n\n\t\tfor ( const { id, icon, tooltip } of this._skinTones ) {\n\t\t\tconst def: ListDropdownItemDefinition = {\n\t\t\t\ttype: 'button',\n\t\t\t\tmodel: new ViewModel( {\n\t\t\t\t\tvalue: id,\n\t\t\t\t\tlabel: icon,\n\t\t\t\t\tariaLabel: tooltip,\n\t\t\t\t\ttooltip,\n\t\t\t\t\ttooltipPosition: 'e',\n\t\t\t\t\trole: 'menuitemradio',\n\t\t\t\t\twithText: true,\n\t\t\t\t\t// To improve accessibility, disconnect a button and its label connection so that screen\n\t\t\t\t\t// readers can read the `[aria-label]` attribute directly from the more descriptive button.\n\t\t\t\t\tariaLabelledBy: undefined\n\t\t\t\t} )\n\t\t\t};\n\n\t\t\tdef.model.bind( 'isOn' ).to( this, 'skinTone', value => value === id );\n\n\t\t\titemDefinitions.add( def );\n\t\t}\n\n\t\taddListToDropdown(\n\t\t\tdropdownView,\n\t\t\titemDefinitions,\n\t\t\t{\n\t\t\t\tariaLabel: accessibleLabel,\n\t\t\t\trole: 'menu'\n\t\t\t}\n\t\t);\n\n\t\tdropdownView.buttonView.set( {\n\t\t\tlabel: this._getSkinTone().icon,\n\t\t\tariaLabel: accessibleLabel,\n\t\t\tariaLabelledBy: undefined,\n\t\t\tisOn: false,\n\t\t\twithText: true,\n\t\t\ttooltip: accessibleLabel\n\t\t} );\n\n\t\tthis.dropdownView = dropdownView;\n\n\t\t// Execute command when an item from the dropdown is selected.\n\t\tthis.listenTo<ButtonExecuteEvent>( dropdownView, 'execute', evt => {\n\t\t\tthis.skinTone = ( evt.source as any ).value;\n\t\t} );\n\n\t\tdropdownView.buttonView.bind( 'label' ).to( this, 'skinTone', () => {\n\t\t\treturn this._getSkinTone().icon;\n\t\t} );\n\n\t\tdropdownView.buttonView.bind( 'ariaLabel' ).to( this, 'skinTone', () => {\n\t\t\t// Render a current state, but also what the dropdown does.\n\t\t\treturn `${ this._getSkinTone().tooltip }, ${ accessibleLabel }`;\n\t\t} );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [ 'ck', 'ck-emoji__skin-tone' ]\n\t\t\t},\n\t\t\tchildren: [ dropdownView ]\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic focus(): void {\n\t\tthis.dropdownView.buttonView.focus();\n\t}\n\n\t/**\n\t * Helper method for receiving an object describing the active skin tone.\n\t */\n\tprivate _getSkinTone(): SkinTone {\n\t\treturn this._skinTones.find( tone => tone.id === this.skinTone )!;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module emoji/ui/emojipickerview\n */\n\nimport {\n\tFocusCycler,\n\tSearchInfoView,\n\tView,\n\ttype FocusableView,\n\ttype ViewCollection,\n\ttype SearchTextViewSearchEvent\n} from 'ckeditor5/src/ui.js';\nimport {\n\tFocusTracker,\n\tKeystrokeHandler,\n\ttype Locale,\n\ttype ObservableChangeEvent\n} from 'ckeditor5/src/utils.js';\nimport EmojiGridView, { type EmojiSearchQueryCallback } from './emojigridview.js';\nimport EmojiCategoriesView from './emojicategoriesview.js';\nimport EmojiSearchView from './emojisearchview.js';\nimport EmojiToneView from './emojitoneview.js';\nimport type { SkinToneId } from '../emojiconfig.js';\nimport type { EmojiCategory, SkinTone } from '../emojirepository.js';\n\n/**\n * A view that glues pieces of the emoji panel together.\n */\nexport default class EmojiPickerView extends View<HTMLDivElement> {\n\t/**\n\t * A collection of the focusable children of the view.\n\t */\n\tpublic readonly items: ViewCollection<FocusableView>;\n\n\t/**\n\t * Tracks information about the DOM focus in the view.\n\t */\n\tpublic readonly focusTracker: FocusTracker;\n\n\t/**\n\t * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t */\n\tpublic readonly keystrokes: KeystrokeHandler;\n\n\t/**\n\t * Helps cycling over focusable {@link #items} in the view.\n\t */\n\tpublic readonly focusCycler: FocusCycler;\n\n\t/**\n\t * An instance of the `EmojiSearchView`.\n\t */\n\tpublic readonly searchView: EmojiSearchView;\n\n\t/**\n\t * An instance of the `EmojiToneView`.\n\t */\n\tpublic readonly toneView: EmojiToneView;\n\n\t/**\n\t * An instance of the `EmojiCategoriesView`.\n\t */\n\tpublic readonly categoriesView: EmojiCategoriesView;\n\n\t/**\n\t * An instance of the `EmojiGridView`.\n\t */\n\tpublic readonly gridView: EmojiGridView;\n\n\t/**\n\t * An instance of the `EmojiGridView`.\n\t */\n\tpublic readonly infoView: SearchInfoView;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor(\n\t\tlocale: Locale,\n\t\t{ emojiCategories, getEmojiByQuery, skinTone, skinTones }: {\n\t\t\temojiCategories: Array<EmojiCategory>;\n\t\t\tgetEmojiByQuery: EmojiSearchQueryCallback;\n\t\t\tskinTone: SkinToneId;\n\t\t\tskinTones: Array<SkinTone>;\n\t\t}\n\t) {\n\t\tsuper( locale );\n\n\t\tconst categoryName = emojiCategories[ 0 ].title;\n\n\t\tthis.gridView = new EmojiGridView( locale, {\n\t\t\tcategoryName,\n\t\t\temojiCategories,\n\t\t\tgetEmojiByQuery,\n\t\t\tskinTone\n\t\t} );\n\t\tthis.infoView = new SearchInfoView();\n\t\tthis.searchView = new EmojiSearchView( locale, {\n\t\t\tgridView: this.gridView,\n\t\t\tresultsView: this.infoView\n\t\t} );\n\t\tthis.categoriesView = new EmojiCategoriesView( locale, {\n\t\t\temojiCategories,\n\t\t\tcategoryName\n\t\t} );\n\t\tthis.toneView = new EmojiToneView( locale, {\n\t\t\tskinTone,\n\t\t\tskinTones\n\t\t} );\n\n\t\tthis.items = this.createCollection( [\n\t\t\tthis.searchView,\n\t\t\tthis.toneView,\n\t\t\tthis.categoriesView,\n\t\t\tthis.gridView,\n\t\t\tthis.infoView\n\t\t] );\n\n\t\tthis.focusTracker = new FocusTracker();\n\t\tthis.keystrokes = new KeystrokeHandler();\n\t\tthis.focusCycler = new FocusCycler( {\n\t\t\tfocusables: this.items,\n\t\t\tfocusTracker: this.focusTracker,\n\t\t\tkeystrokeHandler: this.keystrokes,\n\t\t\tactions: {\n\t\t\t\tfocusPrevious: 'shift + tab',\n\t\t\t\tfocusNext: 'tab'\n\t\t\t}\n\t\t} );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttag: 'div',\n\t\t\t\t\tchildren: [\n\t\t\t\t\t\tthis.searchView,\n\t\t\t\t\t\tthis.toneView\n\t\t\t\t\t],\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: [ 'ck', 'ck-emoji__search' ]\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tthis.categoriesView,\n\t\t\t\tthis.gridView,\n\t\t\t\t{\n\t\t\t\t\ttag: 'div',\n\t\t\t\t\tchildren: [\n\t\t\t\t\t\tthis.infoView\n\t\t\t\t\t],\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: [ 'ck', 'ck-search__results' ]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t],\n\t\t\tattributes: {\n\t\t\t\ttabindex: '-1',\n\t\t\t\tclass: [ 'ck', 'ck-emoji', 'ck-search' ]\n\t\t\t}\n\t\t} );\n\n\t\tthis._setupEventListeners();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override render(): void {\n\t\tsuper.render();\n\n\t\tthis.focusTracker.add( this.searchView.element! );\n\t\tthis.focusTracker.add( this.toneView.element! );\n\t\tthis.focusTracker.add( this.categoriesView.element! );\n\t\tthis.focusTracker.add( this.gridView.element! );\n\t\tthis.focusTracker.add( this.infoView.element! );\n\n\t\t// Start listening for the keystrokes coming from #element.\n\t\tthis.keystrokes.listenTo( this.element! );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override destroy(): void {\n\t\tsuper.destroy();\n\n\t\tthis.focusTracker.destroy();\n\t\tthis.keystrokes.destroy();\n\t}\n\n\t/**\n\t * Focuses the search input.\n\t */\n\tpublic focus(): void {\n\t\tthis.searchView.focus();\n\t}\n\n\t/**\n\t * Initializes interactions between sub-views.\n\t */\n\tprivate _setupEventListeners(): void {\n\t\tconst t = this.locale!.t;\n\n\t\t// Disable the category switcher when filtering by a query.\n\t\tthis.searchView.on<SearchTextViewSearchEvent>( 'search', ( evt, data ) => {\n\t\t\tif ( data.query ) {\n\t\t\t\tthis.categoriesView.disableCategories();\n\t\t\t} else {\n\t\t\t\tthis.categoriesView.enableCategories();\n\t\t\t}\n\t\t} );\n\n\t\t// Show a user-friendly message depending on the search query.\n\t\tthis.searchView.on<SearchTextViewSearchEvent>( 'search', ( evt, data ) => {\n\t\t\tif ( data.query.length === 1 ) {\n\t\t\t\tthis.infoView.set( {\n\t\t\t\t\tprimaryText: t( 'Keep on typing to see the emoji.' ),\n\t\t\t\t\tsecondaryText: t( 'The query must contain at least two characters.' ),\n\t\t\t\t\tisVisible: true\n\t\t\t\t} );\n\t\t\t} else if ( !data.resultsCount ) {\n\t\t\t\tthis.infoView.set( {\n\t\t\t\t\tprimaryText: t( 'No emojis were found matching \"%0\".', data.query ),\n\t\t\t\t\tsecondaryText: t( 'Please try a different phrase or check the spelling.' ),\n\t\t\t\t\tisVisible: true\n\t\t\t\t} );\n\t\t\t} else {\n\t\t\t\tthis.infoView.set( {\n\t\t\t\t\tisVisible: false\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\n\t\t// Emit an update event to react to balloon dimensions changes.\n\t\tthis.searchView.on<SearchTextViewSearchEvent>( 'search', () => {\n\t\t\tthis.fire<EmojiPickerViewUpdateEvent>( 'update' );\n\t\t\tthis.gridView.element!.scrollTo( 0, 0 );\n\t\t} );\n\n\t\t// Update the grid of emojis when the selected category is changed.\n\t\tthis.categoriesView.on<ObservableChangeEvent<string>>( 'change:categoryName', ( ev, args, categoryName ) => {\n\t\t\tthis.gridView.categoryName = categoryName;\n\t\t\tthis.searchView.search( '' );\n\t\t} );\n\n\t\t// Update the grid of emojis when the selected skin tone is changed.\n\t\t// In such a case, the displayed emoji should use an updated skin tone value.\n\t\tthis.toneView.on<ObservableChangeEvent<SkinToneId>>( 'change:skinTone', ( evt, propertyName, newValue ) => {\n\t\t\tthis.gridView.skinTone = newValue;\n\t\t\tthis.searchView.search( this.searchView.getInputValue() );\n\t\t} );\n\t}\n}\n\n/**\n * Fired when the  {@link module:emoji/ui/emojipickerview~EmojiPickerView} layout is changed, either by filtering emoji tiles or\n * showing a hint to a user regarding the provided query.\n *\n * @eventName ~EmojiPickerView#update\n */\nexport type EmojiPickerViewUpdateEvent = {\n\tname: 'update';\n\targs: [];\n};\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module emoji/ui/emojipickerformview\n */\n\nimport {\n\tButtonView,\n\tFocusCycler,\n\tFormHeaderView,\n\tView,\n\tViewCollection,\n\tisFocusable,\n\tisViewWithFocusCycler,\n\ttype FocusableView\n} from 'ckeditor5/src/ui.js';\nimport {\n\tFocusTracker,\n\tKeystrokeHandler,\n\ttype Locale\n} from 'ckeditor5/src/utils.js';\nimport { IconPreviousArrow } from 'ckeditor5/src/icons.js';\n\n// See: https://github.com/ckeditor/ckeditor5/issues/8833\n// eslint-disable-next-line ckeditor5-rules/ckeditor-imports\nimport '@ckeditor/ckeditor5-ui/theme/components/responsive-form/responsiveform.css';\n// eslint-disable-next-line ckeditor5-rules/ckeditor-imports\nimport '@ckeditor/ckeditor5-ui/theme/components/form/form.css';\n\nimport '../../theme/emojipickerform.css';\n\n/**\n * The emoji picker form view.\n */\nexport default class EmojiPickerFormView extends View {\n\t/**\n\t * The Back button view displayed in the header.\n\t */\n\tpublic backButtonView: ButtonView;\n\n\t/**\n\t * Tracks information about DOM focus in the form.\n\t */\n\tpublic readonly focusTracker = new FocusTracker();\n\n\t/**\n\t * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t */\n\tpublic readonly keystrokes = new KeystrokeHandler();\n\n\t/**\n\t * A collection of child views.\n\t */\n\tpublic readonly children: ViewCollection;\n\n\t/**\n\t * A collection of views that can be focused in the form.\n\t */\n\tprivate readonly _focusables = new ViewCollection<FocusableView>();\n\n\t/**\n\t * Helps cycling over {@link #_focusables} in the form.\n\t */\n\tprivate readonly _focusCycler: FocusCycler;\n\n\t/**\n\t * Creates an instance of the {@link module:emoji/ui/emojipickerformview~EmojiPickerFormView} class.\n\t *\n\t * Also see {@link #render}.\n\t *\n\t * @param locale The localization services instance.\n\t */\n\tconstructor( locale: Locale ) {\n\t\tsuper( locale );\n\n\t\tthis.backButtonView = this._createBackButton();\n\t\tthis.children = this.createCollection( [\n\t\t\tthis._createHeaderView()\n\t\t] );\n\n\t\tthis._focusCycler = new FocusCycler( {\n\t\t\tfocusables: this._focusables,\n\t\t\tfocusTracker: this.focusTracker,\n\t\t\tkeystrokeHandler: this.keystrokes,\n\t\t\tactions: {\n\t\t\t\t// Navigate form fields backward using the Shift + Tab keystroke.\n\t\t\t\tfocusPrevious: 'shift + tab',\n\n\t\t\t\t// Navigate form fields forwards using the Tab key.\n\t\t\t\tfocusNext: 'tab'\n\t\t\t}\n\t\t} );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-form',\n\t\t\t\t\t'ck-emoji-picker-form',\n\t\t\t\t\t'ck-responsive-form'\n\t\t\t\t],\n\n\t\t\t\t// https://github.com/ckeditor/ckeditor5-link/issues/90\n\t\t\t\ttabindex: '-1'\n\t\t\t},\n\n\t\t\tchildren: this.children\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override render(): void {\n\t\tsuper.render();\n\n\t\tconst childViews = [\n\t\t\t...this.children.filter( isFocusable ) as Array<FocusableView>,\n\t\t\tthis.backButtonView\n\t\t];\n\n\t\tchildViews.forEach( v => {\n\t\t\t// Register the view as focusable.\n\t\t\tthis._focusables.add( v );\n\n\t\t\t// Register the view in the focus tracker.\n\t\t\tthis.focusTracker.add( v.element! );\n\n\t\t\t// Register the view in the focus cycler to avoid nested focus cycles traps.\n\t\t\tif ( isViewWithFocusCycler( v ) ) {\n\t\t\t\tthis._focusCycler.chain( v.focusCycler );\n\t\t\t}\n\t\t} );\n\n\t\t// Start listening for the keystrokes coming from #element.\n\t\tthis.keystrokes.listenTo( this.element! );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override destroy(): void {\n\t\tsuper.destroy();\n\n\t\tthis.focusTracker.destroy();\n\t\tthis.keystrokes.destroy();\n\t}\n\n\t/**\n\t * Focuses the fist {@link #_focusables} in the form.\n\t */\n\tpublic focus(): void {\n\t\tthis._focusCycler.focusFirst();\n\t}\n\n\t/**\n\t * Creates a back button view that cancels the form.\n\t */\n\tprivate _createBackButton(): ButtonView {\n\t\tconst t = this.locale!.t;\n\t\tconst backButton = new ButtonView( this.locale );\n\n\t\tbackButton.set( {\n\t\t\tclass: 'ck-button-back',\n\t\t\tlabel: t( 'Back' ),\n\t\t\ticon: IconPreviousArrow,\n\t\t\ttooltip: true\n\t\t} );\n\n\t\tbackButton.delegate( 'execute' ).to( this, 'cancel' );\n\n\t\treturn backButton;\n\t}\n\n\t/**\n\t * Creates a header view for the form.\n\t */\n\tprivate _createHeaderView(): FormHeaderView {\n\t\tconst t = this.locale!.t;\n\n\t\tconst header = new FormHeaderView( this.locale, {\n\t\t\tlabel: t( 'Emoji picker' )\n\t\t} );\n\n\t\theader.children.add( this.backButtonView, 0 );\n\n\t\treturn header;\n\t}\n}\n\n/**\n * Fired when the form view is canceled, for example with a click on {@link ~EmojiPickerFormView#backButtonView}.\n *\n * @eventName ~EmojiPickerFormView#cancel\n */\nexport type EmojiPickerFormViewCancelEvent = {\n\tname: 'cancel';\n\targs: [];\n};\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module emoji/emojipicker\n */\n\nimport { ButtonView, clickOutsideHandler, ContextualBalloon, Dialog, MenuBarMenuListItemButtonView } from 'ckeditor5/src/ui.js';\nimport type { PositionOptions } from 'ckeditor5/src/utils.js';\nimport { Plugin } from 'ckeditor5/src/core.js';\nimport { Typing } from 'ckeditor5/src/typing.js';\nimport { IconEmoji } from 'ckeditor5/src/icons.js';\n\nimport EmojiCommand from './emojicommand.js';\nimport EmojiRepository from './emojirepository.js';\nimport EmojiPickerView, { type EmojiPickerViewUpdateEvent } from './ui/emojipickerview.js';\nimport EmojiPickerFormView, { type EmojiPickerFormViewCancelEvent } from './ui/emojipickerformview.js';\nimport { type EmojiGridViewExecuteEvent } from './ui/emojigridview.js';\nimport type { SkinToneId } from './emojiconfig.js';\n\nimport '../theme/emojipicker.css';\n\nconst VISUAL_SELECTION_MARKER_NAME = 'emoji-picker';\n\n/**\n * The emoji picker plugin.\n *\n * Introduces the `'emoji'` dropdown.\n */\nexport default class EmojiPicker extends Plugin {\n\t/**\n\t * The actions view displayed inside the balloon.\n\t */\n\tdeclare public emojiPickerView: EmojiPickerView | undefined;\n\n\t/**\n\t * The form view displayed inside the balloon.\n\t */\n\tdeclare public emojiPickerFormView: EmojiPickerFormView | undefined;\n\n\t/**\n\t * The contextual balloon plugin instance.\n\t */\n\tdeclare public balloonPlugin: ContextualBalloon;\n\n\t/**\n\t * An instance of the {@link module:emoji/emojirepository~EmojiRepository} plugin.\n\t */\n\tdeclare public emojiRepositoryPlugin: EmojiRepository;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get requires() {\n\t\treturn [ EmojiRepository, ContextualBalloon, Dialog, Typing ] as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get pluginName() {\n\t\treturn 'EmojiPicker' as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static override get isOfficialPlugin(): true {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic async init(): Promise<void> {\n\t\tconst editor = this.editor;\n\n\t\tthis.balloonPlugin = editor.plugins.get( 'ContextualBalloon' );\n\t\tthis.emojiRepositoryPlugin = editor.plugins.get( 'EmojiRepository' );\n\n\t\t// Skip registering a button in the toolbar and list item in the menu bar if the emoji repository is not ready.\n\t\tif ( !await this.emojiRepositoryPlugin.isReady() ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst command = new EmojiCommand( editor );\n\n\t\teditor.commands.add( 'emoji', command );\n\n\t\teditor.ui.componentFactory.add( 'emoji', () => {\n\t\t\tconst button = this._createButton( ButtonView, command );\n\n\t\t\tbutton.set( {\n\t\t\t\ttooltip: true\n\t\t\t} );\n\n\t\t\treturn button;\n\t\t} );\n\n\t\teditor.ui.componentFactory.add( 'menuBar:emoji', () => {\n\t\t\treturn this._createButton( MenuBarMenuListItemButtonView, command );\n\t\t} );\n\n\t\tthis._setupConversion();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override destroy(): void {\n\t\tsuper.destroy();\n\n\t\tif ( this.emojiPickerView ) {\n\t\t\tthis.emojiPickerView.destroy();\n\t\t}\n\t}\n\n\t/**\n\t * Represents an active skin tone. Its value depends on the emoji UI plugin.\n\t *\n\t * Before opening the UI for the first time, the returned value is read from the editor configuration.\n\t * Otherwise, it reflects the user's intention.\n\t */\n\tpublic get skinTone(): SkinToneId {\n\t\tif ( !this.emojiPickerView ) {\n\t\t\treturn this.editor.config.get( 'emoji.skinTone' )!;\n\t\t}\n\n\t\treturn this.emojiPickerView.gridView.skinTone;\n\t}\n\n\t/**\n\t * Displays the balloon with the emoji picker.\n\t *\n\t * @param [searchValue=''] A default query used to filer the grid when opening the UI.\n\t */\n\tpublic showUI( searchValue: string = '' ): void {\n\t\t// Show visual selection on a text when the contextual balloon is displayed.\n\t\t// See #17654.\n\t\tthis._showFakeVisualSelection();\n\n\t\tif ( !this.emojiPickerView ) {\n\t\t\tthis.emojiPickerView = this._createEmojiPickerView();\n\t\t}\n\n\t\tif ( searchValue ) {\n\t\t\tthis.emojiPickerView.searchView.setInputValue( searchValue );\n\t\t}\n\n\t\tthis.emojiPickerView.searchView.search( searchValue );\n\n\t\tif ( !this.emojiPickerFormView ) {\n\t\t\tthis.emojiPickerFormView = this._createEmojiPickerFormView();\n\t\t}\n\n\t\tif ( !this.balloonPlugin.hasView( this.emojiPickerFormView ) ) {\n\t\t\t// Show back button if there is another balloon view visible.\n\t\t\tthis.emojiPickerFormView!.backButtonView.isVisible = !!this.balloonPlugin.visibleView;\n\n\t\t\tthis.balloonPlugin.add( {\n\t\t\t\tview: this.emojiPickerFormView,\n\t\t\t\tposition: this._getBalloonPositionData(),\n\t\t\t\tballoonClassName: 'ck-emoji-picker-balloon'\n\t\t\t} );\n\t\t}\n\n\t\tthis.emojiPickerView.focus();\n\t}\n\n\t/**\n\t * Creates a button for toolbar and menu bar that will show the emoji dialog.\n\t */\n\tprivate _createButton<T extends typeof ButtonView>( ViewClass: T, command: EmojiCommand ): InstanceType<T> {\n\t\tconst buttonView = new ViewClass( this.editor.locale ) as InstanceType<T>;\n\t\tconst t = this.editor.locale.t;\n\n\t\tbuttonView.bind( 'isEnabled' ).to( command, 'isEnabled' );\n\n\t\tbuttonView.set( {\n\t\t\tlabel: t( 'Emoji' ),\n\t\t\ticon: IconEmoji,\n\t\t\tisToggleable: true\n\t\t} );\n\n\t\tbuttonView.on( 'execute', () => {\n\t\t\tthis.editor.editing.view.scrollToTheSelection();\n\t\t\tthis.showUI();\n\t\t} );\n\n\t\treturn buttonView;\n\t}\n\n\t/**\n\t * Creates an instance of the `EmojiPickerView` class that represents an emoji balloon.\n\t */\n\tprivate _createEmojiPickerView(): EmojiPickerView {\n\t\tconst emojiPickerView = new EmojiPickerView( this.editor.locale, {\n\t\t\temojiCategories: this.emojiRepositoryPlugin.getEmojiCategories(),\n\t\t\tskinTone: this.editor.config.get( 'emoji.skinTone' )!,\n\t\t\tskinTones: this.emojiRepositoryPlugin.getSkinTones(),\n\t\t\tgetEmojiByQuery: ( query: string ) => {\n\t\t\t\treturn this.emojiRepositoryPlugin.getEmojiByQuery( query );\n\t\t\t}\n\t\t} );\n\n\t\t// Insert an emoji on a tile click.\n\t\tthis.listenTo<EmojiGridViewExecuteEvent>( emojiPickerView.gridView, 'execute', ( evt, data ) => {\n\t\t\tconst editor = this.editor;\n\t\t\tconst textToInsert = data.emoji;\n\n\t\t\tthis._hideUI();\n\t\t\teditor.execute( 'insertText', { text: textToInsert } );\n\t\t} );\n\n\t\treturn emojiPickerView;\n\t}\n\n\t/**\n\t * Creates an instance of the `EmojiPickerFormView` class that represents a balloon with the emoji picker.\n\t */\n\tprivate _createEmojiPickerFormView(): EmojiPickerFormView {\n\t\tconst emojiPickerFormView = new EmojiPickerFormView( this.editor.locale );\n\n\t\temojiPickerFormView.children.add( this.emojiPickerView! );\n\n\t\t// Update the balloon position when layout is changed.\n\t\tthis.listenTo<EmojiPickerViewUpdateEvent>( this.emojiPickerView!, 'update', () => {\n\t\t\tif ( this.balloonPlugin.visibleView === emojiPickerFormView ) {\n\t\t\t\tthis.balloonPlugin.updatePosition();\n\t\t\t}\n\t\t} );\n\n\t\t// Close the dialog when the back button is clicked.\n\t\tthis.listenTo<EmojiPickerFormViewCancelEvent>( emojiPickerFormView, 'cancel', () => {\n\t\t\tthis._hideUI();\n\t\t} );\n\n\t\t// Close the panel on `Esc` key press when the **actions have focus**.\n\t\temojiPickerFormView.keystrokes.set( 'Esc', ( data, cancel ) => {\n\t\t\tthis._hideUI();\n\t\t\tcancel();\n\t\t} );\n\n\t\t// Close the dialog when clicking outside of it.\n\t\tclickOutsideHandler( {\n\t\t\temitter: emojiPickerFormView,\n\t\t\tcontextElements: [ this.balloonPlugin.view.element! ],\n\t\t\tcallback: () => {\n\t\t\t\t// Focusing on the editable during a click outside the balloon panel might\n\t\t\t\t// cause the selection to move to the beginning of the editable, so we avoid\n\t\t\t\t// focusing on it during this action.\n\t\t\t\t// See: https://github.com/ckeditor/ckeditor5/issues/18253\n\t\t\t\tthis._hideUI( false );\n\t\t\t},\n\t\t\tactivator: () => this.balloonPlugin.visibleView === emojiPickerFormView\n\t\t} );\n\n\t\treturn emojiPickerFormView;\n\t}\n\n\t/**\n\t * Hides the balloon with the emoji picker.\n\t *\n\t * @param updateFocus Whether to focus the editor after closing the emoji picker.\n\t */\n\tprivate _hideUI( updateFocus: boolean = true ): void {\n\t\tthis.balloonPlugin.remove( this.emojiPickerFormView! );\n\t\tthis.emojiPickerView!.searchView.setInputValue( '' );\n\n\t\tif ( updateFocus ) {\n\t\t\tthis.editor.editing.view.focus();\n\t\t}\n\n\t\tthis._hideFakeVisualSelection();\n\t}\n\n\t/**\n\t * Registers converters.\n\t */\n\tprivate _setupConversion(): void {\n\t\tconst editor = this.editor;\n\n\t\t// Renders a fake visual selection marker on an expanded selection.\n\t\teditor.conversion.for( 'editingDowncast' ).markerToHighlight( {\n\t\t\tmodel: VISUAL_SELECTION_MARKER_NAME,\n\t\t\tview: {\n\t\t\t\tclasses: [ 'ck-fake-emoji-selection' ]\n\t\t\t}\n\t\t} );\n\n\t\t// Renders a fake visual selection marker on a collapsed selection.\n\t\teditor.conversion.for( 'editingDowncast' ).markerToElement( {\n\t\t\tmodel: VISUAL_SELECTION_MARKER_NAME,\n\t\t\tview: ( data, { writer } ) => {\n\t\t\t\tif ( !data.markerRange.isCollapsed ) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst markerElement = writer.createUIElement( 'span' );\n\n\t\t\t\twriter.addClass(\n\t\t\t\t\t[ 'ck-fake-emoji-selection', 'ck-fake-emoji-selection_collapsed' ],\n\t\t\t\t\tmarkerElement\n\t\t\t\t);\n\n\t\t\t\treturn markerElement;\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Returns positioning options for the {@link #balloonPlugin}. They control the way the balloon is attached\n\t * to the target element or selection.\n\t */\n\tprivate _getBalloonPositionData(): Partial<PositionOptions> {\n\t\tconst view = this.editor.editing.view;\n\t\tconst viewDocument = view.document;\n\n\t\t// Set a target position by converting view selection range to DOM.\n\t\tconst target = () => view.domConverter.viewRangeToDom( viewDocument.selection.getFirstRange()! );\n\n\t\treturn {\n\t\t\ttarget\n\t\t};\n\t}\n\n\t/**\n\t * Displays a fake visual selection when the contextual balloon is displayed.\n\t *\n\t * This adds an 'emoji-picker' marker into the document that is rendered as a highlight on selected text fragment.\n\t */\n\tprivate _showFakeVisualSelection(): void {\n\t\tconst model = this.editor.model;\n\n\t\tmodel.change( writer => {\n\t\t\tconst range = model.document.selection.getFirstRange()!;\n\n\t\t\tif ( model.markers.has( VISUAL_SELECTION_MARKER_NAME ) ) {\n\t\t\t\twriter.updateMarker( VISUAL_SELECTION_MARKER_NAME, { range } );\n\t\t\t} else {\n\t\t\t\tif ( range.start.isAtEnd ) {\n\t\t\t\t\tconst startPosition = range.start.getLastMatchingPosition(\n\t\t\t\t\t\t( { item } ) => !model.schema.isContent( item ),\n\t\t\t\t\t\t{ boundaries: range }\n\t\t\t\t\t);\n\n\t\t\t\t\twriter.addMarker( VISUAL_SELECTION_MARKER_NAME, {\n\t\t\t\t\t\tusingOperation: false,\n\t\t\t\t\t\taffectsData: false,\n\t\t\t\t\t\trange: writer.createRange( startPosition, range.end )\n\t\t\t\t\t} );\n\t\t\t\t} else {\n\t\t\t\t\twriter.addMarker( VISUAL_SELECTION_MARKER_NAME, {\n\t\t\t\t\t\tusingOperation: false,\n\t\t\t\t\t\taffectsData: false,\n\t\t\t\t\t\trange\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Hides the fake visual selection.\n\t */\n\tprivate _hideFakeVisualSelection(): void {\n\t\tconst model = this.editor.model;\n\n\t\tif ( model.markers.has( VISUAL_SELECTION_MARKER_NAME ) ) {\n\t\t\tmodel.change( writer => {\n\t\t\t\twriter.removeMarker( VISUAL_SELECTION_MARKER_NAME );\n\t\t\t} );\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module emoji/emoji\n */\n\nimport { Plugin } from 'ckeditor5/src/core.js';\nimport EmojiMention from './emojimention.js';\nimport EmojiPicker from './emojipicker.js';\n\n/**\n * The emoji plugin.\n *\n * This is a \"glue\" plugin which loads the following plugins:\n *\n * * {@link module:emoji/emojimention~EmojiMention},\n * * {@link module:emoji/emojipicker~EmojiPicker},\n */\nexport default class Emoji extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get requires() {\n\t\treturn [ EmojiMention, EmojiPicker ] as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get pluginName() {\n\t\treturn 'Emoji' as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static override get isOfficialPlugin(): true {\n\t\treturn true;\n\t}\n}\n"]}